Processing /tmp/useless-var-test.swflow
WARNING - unused variable w
construction:all time=0.000493748;
spec:/tmp/useless-var-test.swflow
build:matrices/2x4,4x2-[0>0 -1]reshape-8, density=0.00390625; time=0.000010432;
file_map:6639381a8a raw=2x4,4x2-[1>1]col_rots_no_group-2x4,4x2.2x4,4x2-[0>0 -1]reshape-8,
load:matrices/2x4,4x2-[1>1]col_rots_no_group-2x4,4x2 density=0.0126953125; time=0.000311275;
mul_stats:: b_sparse=true;
mul:matrices/6639381a8a density=0.00390625; time=0.000045962;
file_map:20becb8225 raw=2x4,8-[1>1]load_rep-2x4,4x2.2x4,4x2-[1>1]col_rots_no_group-2x4,4x2.2x4,4x2-[0>0 -1]reshape-8,
load:matrices/2x4,8-[1>1]load_rep-2x4,4x2 density=0.00390625; time=0.000111148;
mul_stats:: b_sparse=false;
mul:matrices/20becb8225 density=0.00390625; time=0.00001332;
file_map:2834c3c10a raw=2x4,-[>1]-2x4,8.2x4,8-[1>1]load_rep-2x4,4x2.2x4,4x2-[1>1]col_rots_no_group-2x4,4x2.2x4,4x2-[0>0 -1]reshape-8,
load:matrices/2x4,-[>1]-2x4,8 density=0.00390625; time=0.000082041;
mul_stats:: b_sparse=false;
mul:matrices/2834c3c10a density=0.015625; time=0.000019849;
file_map:1f82eb713d raw=4x2,-[0>0]transpose-2x4,.2x4,-[>1]-2x4,8.2x4,8-[1>1]load_rep-2x4,4x2.2x4,4x2-[1>1]col_rots_no_group-2x4,4x2.2x4,4x2-[0>0 -1]reshape-8,
load:matrices/4x2,-[0>0]transpose-2x4, density=0.015625; time=0.000089741;
mul_stats:: b_sparse=false;
mul:matrices/1f82eb713d density=0.015625; time=0.000004226;
file_map:5c3373bef1 raw=4x2x4,-[0>0]identity{fold_len=4}-4x2,.4x2,-[0>0]transpose-2x4,.2x4,-[>1]-2x4,8.2x4,8-[1>1]load_rep-2x4,4x2.2x4,4x2-[1>1]col_rots_no_group-2x4,4x2.2x4,4x2-[0>0 -1]reshape-8,
load:matrices/4x2x4,-[0>0]identity{fold_len=4}-4x2, density=0.015625; time=0.000234658;
mul_stats:: b_sparse=false;
mul:matrices/5c3373bef1 density=0.015625; time=0.000065921;
file_map:bc3817762d raw=4x4,-[0>0]broadcast{group=1}-4x2x4,.4x2x4,-[0>0]identity{fold_len=4}-4x2,.4x2,-[0>0]transpose-2x4,.2x4,-[>1]-2x4,8.2x4,8-[1>1]load_rep-2x4,4x2.2x4,4x2-[1>1]col_rots_no_group-2x4,4x2.2x4,4x2-[0>0 -1]reshape-8,
load:matrices/4x4,-[0>0]broadcast{group=1}-4x2x4, density=0.00390625; time=0.000138061;
mul_stats:: b_sparse=false;
mul:matrices/bc3817762d density=0.0625; time=0.000020486;
file_map:3201fa058a raw=4x4,4x4-[0,1>0 -1]stack{fold_len=2}-4x4,.4x4,-[0>0]broadcast{group=1}-4x2x4,.4x2x4,-[0>0]identity{fold_len=4}-4x2,.4x2,-[0>0]transpose-2x4,.2x4,-[>1]-2x4,8.2x4,8-[1>1]load_rep-2x4,4x2.2x4,4x2-[1>1]col_rots_no_group-2x4,4x2.2x4,4x2-[0>0 -1]reshape-8,
load:matrices/4x4,4x4-[0,1>0 -1]stack{fold_len=2}-4x4, density=0.00390625; time=0.000195225;
mul_stats:: b_sparse=false;
mul:matrices/3201fa058a density=0.0625; time=0.000064597;
file_map:2cbdc57fe2 raw=4x4,4x4-[1>1]rots_no_group{main=0,out=1,second=1}-4x4,4x4.4x4,4x4-[0,1>0 -1]stack{fold_len=2}-4x4,.4x4,-[0>0]broadcast{group=1}-4x2x4,.4x2x4,-[0>0]identity{fold_len=4}-4x2,.4x2,-[0>0]transpose-2x4,.2x4,-[>1]-2x4,8.2x4,8-[1>1]load_rep-2x4,4x2.2x4,4x2-[1>1]col_rots_no_group-2x4,4x2.2x4,4x2-[0>0 -1]reshape-8,
load:matrices/4x4,4x4-[1>1]rots_no_group{main=0,out=1,second=1}-4x4,4x4 density=0.00335693359375; time=0.000579264;
mul_stats:: b_sparse=false;
mul:matrices/2cbdc57fe2 density=0.0625; time=0.000077855;
file_map:2da20bc9b3 raw=4x4,4x4-[1>1]xforms_no_group{main=0,out=1,second=1}-4x4,4x4.4x4,4x4-[1>1]rots_no_group{main=0,out=1,second=1}-4x4,4x4.4x4,4x4-[0,1>0 -1]stack{fold_len=2}-4x4,.4x4,-[0>0]broadcast{group=1}-4x2x4,.4x2x4,-[0>0]identity{fold_len=4}-4x2,.4x2,-[0>0]transpose-2x4,.2x4,-[>1]-2x4,8.2x4,8-[1>1]load_rep-2x4,4x2.2x4,4x2-[1>1]col_rots_no_group-2x4,4x2.2x4,4x2-[0>0 -1]reshape-8,
load:matrices/4x4,4x4-[1>1]xforms_no_group{main=0,out=1,second=1}-4x4,4x4 density=0.004593849182128906; time=0.000678086;
mul_stats:: b_sparse=false;
mul:matrices/2da20bc9b3 density=0.0625; time=0.00008795;
file_map:74221aa1d5 raw=4x4,4x4-[0>0]rots_no_group{main=0,out=1,second=1}-4x4,4x4.4x4,4x4-[1>1]xforms_no_group{main=0,out=1,second=1}-4x4,4x4.4x4,4x4-[1>1]rots_no_group{main=0,out=1,second=1}-4x4,4x4.4x4,4x4-[0,1>0 -1]stack{fold_len=2}-4x4,.4x4,-[0>0]broadcast{group=1}-4x2x4,.4x2x4,-[0>0]identity{fold_len=4}-4x2,.4x2,-[0>0]transpose-2x4,.2x4,-[>1]-2x4,8.2x4,8-[1>1]load_rep-2x4,4x2.2x4,4x2-[1>1]col_rots_no_group-2x4,4x2.2x4,4x2-[0>0 -1]reshape-8,
load:matrices/4x4,4x4-[0>0]rots_no_group{main=0,out=1,second=1}-4x4,4x4 density=0.00335693359375; time=0.000375558;
mul_stats:: b_sparse=false;
mul:matrices/74221aa1d5 density=0.0625; time=0.000066773;
copy_counts:this time=0.0000573;
Begin search
solution: a = init_a; b = init_b; a = broadcast(a); b = broadcast(b); a_picked_1 = id(a); a_picked = id(a_picked_1); b_picked_1 = xform[cf=0,cr=3,dr=4](b); b_picked = id(b_picked_1); combined = fold[2] stack(a_picked, b_picked); two_accums = broadcast(combined); filtered_1 = keep_if[d0 >= +d2](two_accums); filtered_2 = keep_if[d0 < +d2](filtered_1); sum = fold[4] id(filtered_2); transposed = tr(sum); w = init_w; w = load_rep(w); w = id(w); output = id(transposed);
solution: a = init_a; b = init_b; a = broadcast(a); b = broadcast(b); a_picked_1 = id(a); a_picked = id(a_picked_1); b_picked_1 = xform[cf=0,cr=3,dr=4](b); b_picked = id(b_picked_1); combined = fold[2] stack(a_picked, b_picked); two_accums = broadcast(combined); filtered_1 = keep_if[d0 >= +d2](two_accums); filtered_2 = keep_if[d0 < +d2](filtered_1); sum = fold[4] id(filtered_2); transposed = tr(sum); w = init_w; w = load_rep(w); w = rot[shift=2](w); output = id(transposed);
solution: a = init_a; b = init_b; a = broadcast(a); b = broadcast(b); a_picked_1 = id(a); a_picked = id(a_picked_1); b_picked_1 = xform[cf=0,cr=3,dr=4](b); b_picked = id(b_picked_1); combined = fold[2] stack(a_picked, b_picked); two_accums = broadcast(combined); filtered_1 = keep_if[d0 >= +d2](two_accums); filtered_2 = keep_if[d0 < +d2](filtered_1); sum = fold[4] id(filtered_2); transposed = tr(sum); w = init_w; w = load_rep(w); w = rot[shift=3](w); output = id(transposed);
solution: a = init_a; b = init_b; a = broadcast(a); b = broadcast(b); a_picked_1 = id(a); a_picked = id(a_picked_1); b_picked_1 = xform[cf=0,cr=3,dr=4](b); b_picked = id(b_picked_1); combined = fold[2] stack(a_picked, b_picked); two_accums = broadcast(combined); filtered_1 = keep_if[d0 >= +d2](two_accums); filtered_2 = keep_if[d0 < +d2](filtered_1); sum = fold[4] id(filtered_2); transposed = tr(sum); w = init_w; w = load_rep(w); w = rot[shift=1](w); output = id(transposed);
solution: a = init_a; b = init_b; a = broadcast(a); b = broadcast(b); a_picked_1 = xform[cf=0,cr=3,dr=4](a); a_picked = id(a_picked_1); b_picked_1 = id(b); b_picked = id(b_picked_1); combined = fold[2] stack(a_picked, b_picked); two_accums = broadcast(combined); filtered_1 = keep_if[d0 >= +d2](two_accums); filtered_2 = keep_if[d0 < +d2](filtered_1); sum = fold[4] id(filtered_2); transposed = tr(sum); w = init_w; w = load_rep(w); w = id(w); output = id(transposed);
solution: a = init_a; b = init_b; a = broadcast(a); b = broadcast(b); a_picked_1 = xform[cf=0,cr=3,dr=4](a); a_picked = id(a_picked_1); b_picked_1 = id(b); b_picked = id(b_picked_1); combined = fold[2] stack(a_picked, b_picked); two_accums = broadcast(combined); filtered_1 = keep_if[d0 >= +d2](two_accums); filtered_2 = keep_if[d0 < +d2](filtered_1); sum = fold[4] id(filtered_2); transposed = tr(sum); w = init_w; w = load_rep(w); w = rot[shift=2](w); output = id(transposed);
solution: a = init_a; b = init_b; a = broadcast(a); b = broadcast(b); a_picked_1 = xform[cf=0,cr=3,dr=4](a); a_picked = id(a_picked_1); b_picked_1 = id(b); b_picked = id(b_picked_1); combined = fold[2] stack(a_picked, b_picked); two_accums = broadcast(combined); filtered_1 = keep_if[d0 >= +d2](two_accums); filtered_2 = keep_if[d0 < +d2](filtered_1); sum = fold[4] id(filtered_2); transposed = tr(sum); w = init_w; w = load_rep(w); w = rot[shift=3](w); output = id(transposed);
solution: a = init_a; b = init_b; a = broadcast(a); b = broadcast(b); a_picked_1 = xform[cf=0,cr=3,dr=4](a); a_picked = id(a_picked_1); b_picked_1 = id(b); b_picked = id(b_picked_1); combined = fold[2] stack(a_picked, b_picked); two_accums = broadcast(combined); filtered_1 = keep_if[d0 >= +d2](two_accums); filtered_2 = keep_if[d0 < +d2](filtered_1); sum = fold[4] id(filtered_2); transposed = tr(sum); w = init_w; w = load_rep(w); w = rot[shift=1](w); output = id(transposed);
stats:0 var=a; op_name=init_a; pruning=false; tested=1; failed=0; pruned=0; copy_count=0; continued=1; in_solution=1;
stats:1 var=b; op_name=init_b; pruning=false; tested=1; failed=0; pruned=0; copy_count=0; continued=1; in_solution=1;
stats:2 var=a; op_name=broadcast; pruning=false; tested=1; failed=0; pruned=0; copy_count=0; continued=1; in_solution=1;
stats:3 var=b; op_name=broadcast; pruning=false; tested=1; failed=0; pruned=0; copy_count=0; continued=1; in_solution=1;
stats:4 var=a_picked_1; op_name=xforms_no_group{main=0,out=1,second=1}; pruning=true; tested=25; failed=0; pruned=15; copy_count=0; continued=10; in_solution=2;
stats:5 var=a_picked; op_name=rots_no_group{main=0,out=1,second=1}; pruning=true; tested=50; failed=0; pruned=40; copy_count=0; continued=10; in_solution=2;
stats:6 var=b_picked_1; op_name=xforms_no_group{main=0,out=1,second=1}; pruning=true; tested=250; failed=0; pruned=150; copy_count=0; continued=100; in_solution=2;
stats:7 var=b_picked; op_name=rots_no_group{main=0,out=1,second=1}; pruning=true; tested=500; failed=0; pruned=400; copy_count=0; continued=100; in_solution=2;
stats:8 var=combined; op_name=stack{fold_len=2}; pruning=true; tested=100; failed=0; pruned=98; copy_count=0; continued=2; in_solution=2;
stats:9 var=two_accums; op_name=broadcast{group=1}; pruning=false; tested=2; failed=0; pruned=0; copy_count=0; continued=2; in_solution=2;
stats:10 var=filtered_1; op_name=cond_keep_no_consts{restrict=[1,0]}; pruning=true; tested=28; failed=0; pruned=24; copy_count=0; continued=4; in_solution=2;
stats:11 var=filtered_2; op_name=cond_keep_no_consts{restrict=[1,1]}; pruning=true; tested=56; failed=0; pruned=54; copy_count=22; continued=2; in_solution=2;
stats:12 var=sum; op_name=identity{fold_len=4}; pruning=true; tested=2; failed=0; pruned=0; copy_count=0; continued=2; in_solution=2;
stats:13 var=transposed; op_name=transpose; pruning=false; tested=2; failed=0; pruned=0; copy_count=0; continued=2; in_solution=2;
stats:14 var=w; op_name=init_w; pruning=false; tested=2; failed=0; pruned=0; copy_count=0; continued=2; in_solution=2;
stats:15 var=w; op_name=load_rep; pruning=false; tested=2; failed=0; pruned=0; copy_count=0; continued=2; in_solution=2;
stats:16 var=w; op_name=col_rots_no_group; pruning=true; tested=8; failed=0; pruned=0; copy_count=0; continued=8; in_solution=8;
stats:17 var=output; op_name=reshape; pruning=false; tested=8; failed=0; pruned=0; copy_count=0; continued=8; in_solution=8;
stats:18 var=(last); op_name=(last); pruning=false; tested=8; failed=0; pruned=0; copy_count=0; continued=8; in_solution=8;
search:/tmp/useless-var-test.swflow success=true; mode=All; prune_fuel=16; time=0.003172211;
