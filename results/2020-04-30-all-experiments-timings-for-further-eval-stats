cargo build --features stats --release
./target/release/swizzleflow -a specs/swinv_like_big/l3/trove-rcr-5.json specs/swinv_like_big/l3/trove-crc-5.json specs/swinv_like_big/l3/2d-stencil-5.json specs/swinv_like_big/l1/trove-rcr-5.json specs/swinv_like_big/l1/trove-crc-5.json specs/swinv_like_big/l1/2d-stencil-5.json specs/swinv_like/l2/1d-stencil.json specs/swinv_like/l2/2d-stencil-3.json specs/swinv_like/l2/1d-conv.json specs/swinv_like/l2/mult-32-with-4.json specs/swinv_like/l3/trove-crc-3.json specs/swinv_like/l3/trove-crc-1.json specs/swinv_like/l3/trove-crc-4.json specs/swinv_like/l3/1d-stencil.json specs/swinv_like/l3/2d-stencil-3.json specs/swinv_like/l3/trove-rcr-3.json specs/swinv_like/l3/trove-cr_sum-3.json specs/swinv_like/l3/trove-rcr-1.json specs/swinv_like/l3/1d-conv.json specs/swinv_like/l3/trove-rcr-4.json specs/swinv_like/l3/trove-cr_sum-1.json specs/swinv_like/l3/mult-32-with-4.json specs/swinv_like/l3/trove-cr_sum-4.json specs/swinv_like/l3/trove-rcr-2.json specs/swinv_like/l3/trove-cr_sum-2.json specs/swinv_like/l3/trove-cr_sum-5.json specs/swinv_like/l3/trove-crc-2.json specs/swinv_like/l1/trove-crc-3.json specs/swinv_like/l1/trove-crc-1.json specs/swinv_like/l1/trove-crc-4.json specs/swinv_like/l1/trove-cr_sum-7.json specs/swinv_like/l1/1d-stencil.json specs/swinv_like/l1/2d-stencil-3.json specs/swinv_like/l1/trove-rcr-3.json specs/swinv_like/l1/trove-cr_sum-3.json specs/swinv_like/l1/trove-rcr-1.json specs/swinv_like/l1/1d-conv.json specs/swinv_like/l1/trove-rcr-4.json specs/swinv_like/l1/trove-cr_sum-1.json specs/swinv_like/l1/mult-32-with-4.json specs/swinv_like/l1/trove-cr_sum-4.json specs/swinv_like/l1/trove-rcr-2.json specs/swinv_like/l1/trove-cr_sum-2.json specs/swinv_like/l1/trove-cr_sum-5.json specs/swinv_like/l1/trove-crc-2.json
spec:specs/swinv_like_big/l3/trove-rcr-5.json
build:matrices/32,5-col_rots-32,5 n_ones=1067200; n_elems=655360000; in_slots=160; out_slots=160; density=0.00162841796875; time=0.372568016;
Using newly-built matrices/32,5-col_rots-32,5
build:matrices/32,5-col_xforms-32,5 n_ones=11605233; n_elems=655360000; in_slots=160; out_slots=160; density=0.017708180236816407; time=7.6666361819999995;
mul_stats:: probes_success=[(1, 8588109), (2, 7022501), (3, 2952036), (4, 1141956), (5, 587168), (6, 376041), (7, 401168), (8, 284863), (9, 293085), (10, 1823968), (20, 701689), (30, 350663), (40, 64515), (50, 4632)]; probes_failure=[(30, 167740652), (40, 413820048), (50, 49206906)];
mul:matrices/32,5-col_rots_32,5-col_xforms-32,5 n_ones=24592394; n_elems=655360000; in_slots=160; out_slots=160; density=0.03752501525878906; time=137.368123095;
build:matrices/32,5-row_rots-32,5 n_ones=128000; n_elems=655360000; in_slots=160; out_slots=160; density=0.0001953125; time=0.063654549;
mul_stats:: probes_success=[(1, 23732765), (2, 25059400), (3, 24844910), (4, 25059400), (5, 24265495)]; probes_failure=[(5, 532398030)];
mul:matrices/32,5-col_rots_32,5-col_xforms_32,5-row_rots-32,5 n_ones=122961970; n_elems=655360000; in_slots=160; out_slots=160; density=0.18762507629394531; time=56.879803751;
build:matrices/32,5-row_xforms-32,5 n_ones=575945; n_elems=655360000; in_slots=160; out_slots=160; density=0.0008788223266601562; time=0.414531136;
mul_stats:: probes_success=[(1, 110474761), (2, 126185343), (3, 128536095), (4, 127877750), (5, 96012629), (6, 15898746), (7, 445953), (8, 543810), (9, 86078), (10, 25055)]; probes_failure=[(1, 25440), (4, 542252), (5, 4170956), (8, 117326), (9, 20280), (12, 1533158), (13, 141672), (16, 1210314), (17, 26116), (20, 18464366), (25, 23021900)];
mul:matrices/32,5-col_rots_32,5-col_xforms_32,5-row_rots_32,5-row_xforms-32,5 n_ones=606086220; n_elems=655360000; in_slots=160; out_slots=160; density=0.9248141784667969; time=61.369928211;
mul_stats:: probes_success=[(1, 602875520), (2, 9357050), (3, 4437950), (4, 1422890), (5, 2429480), (6, 401440), (7, 765770), (8, 664780), (9, 906660), (10, 481570), (11, 293610), (12, 190330), (13, 867170), (14, 209440), (15, 359890), (16, 213770), (17, 1080030), (18, 1077070), (19, 281230), (20, 226150), (21, 181120), (22, 113580), (23, 168670), (24, 111050), (25, 166900), (26, 188480), (27, 155320), (28, 150360), (29, 144200), (30, 108960), (31, 208930), (32, 93180), (33, 162910), (34, 115110), (35, 109580), (36, 67920), (37, 46770), (38, 5580), (39, 75700), (40, 25100), (41, 29470), (42, 2270), (43, 18150), (44, 22760), (45, 5490), (46, 13590), (47, 18290), (51, 5880), (54, 250), (55, 100), (58, 30)]; probes_failure=[(32, 10053760), (36, 1333220), (38, 909940), (40, 4096000), (42, 2873600), (44, 2346120), (46, 828560), (48, 720280), (50, 536000), (52, 430000), (54, 91600), (58, 83420)];
mul:matrices/32,5-col_rots_32,5-col_xforms_32,5-row_rots_32,5-row_xforms_32,5-col_rots-32,5 n_ones=631057500; n_elems=655360000; in_slots=160; out_slots=160; density=0.9629173278808594; time=60.80014962;
Begin search
solution:init;load_rep;id;id;xform(3,2,32);id;xform(5,1,5);id
solution:init;load_rep;id;rot(16);xform(3,2,16);rot(4);xform(5,1,5);rot(16)
solution:init;load_rep;xform(31,0,5);rot(1);xform(3,3,32);rot(4);xform(27,31,5);rot(13)
stats:0 name=load_rep; lane=0; tested=1; found=0; failed=0; pruned=0; continued=1; target_checks=[];
stats:1 name=col_xforms; lane=0; tested=1364; found=0; failed=0; pruned=1337; continued=27; target_checks=[(2, 355), (4, 189), (30, 37), (40, 223), (50, 124), (60, 19), (70, 17), (80, 118), (90, 1), (100, 142), (200, 3), (300, 11), (400, 3), (600, 14), (700, 9), (800, 1), (900, 6), (1000, 1), (1300, 6), (1800, 24), (2200, 2), (2500, 16), (3000, 8), (3600, 8)];
stats:2 name=col_rots; lane=0; tested=1566; found=0; failed=0; pruned=1527; continued=39; target_checks=[(30, 82), (40, 87), (50, 210), (60, 99), (70, 124), (80, 37), (90, 79), (100, 578), (200, 141), (300, 36), (400, 20), (500, 11), (600, 5), (700, 5), (800, 1), (1000, 1), (1100, 1), (1300, 1), (1400, 1), (1600, 1), (1700, 1), (1900, 1), (2000, 1), (2200, 1), (2300, 1), (2500, 1), (2600, 1)];
stats:3 name=row_xforms; lane=0; tested=3900; found=0; failed=0; pruned=3895; continued=5; target_checks=[(1, 3125), (2, 293), (3, 91), (4, 91), (5, 28), (6, 27), (7, 27), (8, 31), (9, 13), (10, 103), (20, 50), (30, 16)];
stats:4 name=row_rots; lane=0; tested=25; found=0; failed=0; pruned=20; continued=5; target_checks=[(1, 20)];
stats:5 name=col_xforms; lane=0; tested=6820; found=0; failed=0; pruned=6817; continued=3; target_checks=[(1, 6491), (2, 35), (4, 121), (5, 162), (8, 5), (10, 3)];
stats:6 name=col_rots; lane=0; tested=174; found=0; failed=0; pruned=0; continued=174; target_checks=[];
stats:7 name=(last); lane=0; tested=174; found=3; failed=171; pruned=0; continued=0; target_checks=[];
search:specs/swinv_like_big/l3/trove-rcr-5.json success=true; mode=All; time=0.254197593;
spec:specs/swinv_like_big/l3/trove-crc-5.json
load:matrices/32,5-row_rots-32,5 n_ones=128000; n_elems=655360000; in_slots=160; out_slots=160; density=0.0001953125; time=0.494457735;
load:matrices/32,5-row_xforms-32,5 n_ones=575945; n_elems=655360000; in_slots=160; out_slots=160; density=0.0008788223266601562; time=0.490235513;
mul_stats:: probes_success=[(1, 543745), (2, 77445), (3, 3370), (4, 1505), (5, 935)]; probes_failure=[(5, 654733000)];
mul:matrices/32,5-row_rots_32,5-row_xforms-32,5 n_ones=627000; n_elems=655360000; in_slots=160; out_slots=160; density=0.00095672607421875; time=28.04271315;
load:matrices/32,5-col_rots-32,5 n_ones=1067200; n_elems=655360000; in_slots=160; out_slots=160; density=0.00162841796875; time=0.490199741;
mul_stats:: probes_success=[(1, 1067200), (2, 1067200), (3, 1067200), (4, 1067200), (5, 1067200), (6, 1062080), (7, 1062080), (8, 1062080), (9, 1062080), (10, 10528960), (20, 6073820)]; probes_failure=[(5, 4070400), (10, 13223600), (20, 611878900)];
mul:matrices/32,5-row_rots_32,5-row_xforms_32,5-col_rots-32,5 n_ones=26187100; n_elems=655360000; in_slots=160; out_slots=160; density=0.039958343505859376; time=88.965423575;
load:matrices/32,5-col_xforms-32,5 n_ones=11605233; n_elems=655360000; in_slots=160; out_slots=160; density=0.017708180236816407; time=0.497498483;
mul_stats:: probes_success=[(1, 22690975), (2, 22771515), (3, 23988450), (4, 25138750), (5, 24479550), (6, 24602190), (7, 23761525), (8, 24140770), (9, 22555685), (10, 21881340), (11, 20505690), (12, 19498260), (13, 18820285), (14, 17991095), (15, 17398525), (16, 18177855), (17, 14423560), (18, 12936595), (19, 12448695), (20, 11178945), (21, 10660365), (22, 9961575), (23, 9295560), (24, 8751700), (25, 8938450), (26, 8152055), (27, 7935890), (28, 7459160), (29, 7073355), (30, 7109600), (31, 6460725), (32, 5710180), (33, 3680515), (34, 3260800), (35, 3046510), (36, 3248415), (37, 2911945), (38, 2366015), (39, 2381740), (40, 2119305), (41, 2176555), (42, 1938460), (43, 1870005), (44, 1519490), (45, 1622360), (46, 1459875), (47, 1397530), (48, 1100230), (49, 1566215), (50, 1499000), (51, 1359695), (52, 1390095), (53, 1221300), (54, 1170685), (55, 1341625), (56, 1261035), (57, 1133125), (58, 1042890), (59, 1012185), (60, 862550), (61, 886335), (62, 830735), (63, 796040), (64, 790460), (65, 792525), (66, 803575), (67, 930940), (68, 781410), (69, 683390), (70, 816835), (71, 871060), (72, 754315), (73, 816580), (74, 743775), (75, 734480), (76, 722015), (77, 595575), (78, 636815), (79, 529635), (80, 622195), (81, 731500), (82, 591255), (83, 542625), (84, 596105), (85, 520175), (86, 525980), (87, 455735), (88, 396790), (89, 540730), (90, 450605), (91, 540385), (92, 426010), (93, 485495), (94, 334670), (95, 359115), (96, 355240), (97, 527450), (98, 475130), (99, 466735), (100, 409480), (101, 563950), (102, 403340), (103, 341545), (104, 378535), (105, 417080), (106, 371045), (107, 387045), (108, 303710), (109, 452565), (110, 328655), (111, 401665), (112, 381995), (113, 379960), (114, 385330), (115, 338670), (116, 307590), (117, 462920), (118, 327975), (119, 323745), (120, 354090), (121, 378090), (122, 290435), (123, 360130), (124, 296570), (125, 313255), (126, 311680), (127, 298215), (128, 312310), (129, 452620), (130, 335265), (131, 303415), (132, 339680), (133, 256235), (134, 331610), (135, 313445), (136, 298635), (137, 382145), (138, 312480), (139, 287025), (140, 255510), (141, 361290), (142, 250605), (143, 203460), (144, 161520), (145, 389205), (146, 298960), (147, 235405), (148, 188055), (149, 192235), (150, 232410), (151, 294520), (152, 179015), (153, 223965), (154, 298185), (155, 254175), (156, 248210), (157, 246725), (158, 220760), (159, 223140), (160, 207995), (161, 227970), (162, 222430), (163, 165615), (164, 149490), (165, 189100), (166, 158805), (167, 177890), (168, 127620), (169, 172975), (170, 119050), (171, 122540), (172, 155725), (173, 136200), (174, 143065), (175, 137280), (176, 90660), (177, 188385), (178, 137190), (179, 143825), (180, 100885), (181, 99580), (182, 96440), (183, 153775), (184, 98440), (185, 202070), (186, 109675), (187, 70560), (188, 109090), (189, 80325), (190, 112020), (191, 78765), (192, 83855), (193, 125505), (194, 91215), (195, 95870), (196, 69585), (197, 103235), (198, 74255), (199, 88010), (200, 55965), (201, 112650), (202, 72630), (203, 72020), (204, 52580), (205, 59650), (206, 52325), (207, 101755), (208, 43595), (209, 163070), (210, 84235), (211, 96055), (212, 26765), (213, 80600), (214, 67090), (215, 66290), (216, 23090), (217, 88965), (218, 56990), (219, 52965), (220, 38390), (221, 55990), (222, 41950), (223, 61430), (224, 44235), (225, 144615), (226, 72175), (227, 66365), (228, 44330), (229, 74940), (230, 68950), (231, 86220), (232, 61535), (233, 79730), (234, 64510), (235, 72725), (236, 50155), (237, 66240), (238, 23290), (239, 67275), (240, 42755), (241, 134830), (242, 31970), (243, 56030), (244, 33650), (245, 38070), (246, 39420), (247, 82565), (248, 90435), (249, 85120), (250, 88795), (251, 22160), (252, 55305), (253, 25935), (254, 40155), (255, 76870), (256, 33020), (257, 70700), (258, 35740), (259, 61990), (260, 23440), (261, 51130), (262, 20120), (263, 47730), (264, 13345), (265, 36890), (266, 28525), (267, 97950), (268, 14025), (269, 41310), (270, 53250), (271, 29960), (272, 21120), (273, 43760), (274, 47650), (275, 60155), (276, 26235), (277, 49090), (278, 42885), (279, 79665), (280, 27140), (281, 54090), (282, 37775), (283, 74030), (284, 41025), (285, 95565), (286, 87000), (287, 31950), (288, 51760), (289, 108290), (290, 30655), (291, 78470), (292, 46455), (293, 25710), (294, 20390), (295, 46185), (296, 40455), (297, 23240), (298, 45485), (299, 55460), (300, 13815), (301, 93360), (302, 31485), (303, 19355), (304, 52530), (305, 22825), (306, 43170), (307, 82565), (308, 26810), (309, 26060), (310, 13905), (311, 13445), (312, 56600), (313, 17450), (314, 12400), (315, 33630), (316, 39655), (317, 34925), (318, 9610), (319, 19075), (320, 24555), (321, 12460), (322, 21105), (323, 29450), (324, 18305), (325, 25700), (326, 11350), (327, 13005), (328, 16300), (329, 19085), (330, 23895), (331, 19110), (332, 22200), (333, 13855), (334, 43500), (335, 20600), (336, 14255), (337, 18100), (338, 30605), (339, 16755), (340, 27650), (341, 19030), (342, 31860), (343, 13825), (344, 31950), (345, 13305), (346, 17825), (347, 8400), (348, 10455), (349, 10425), (350, 9330), (351, 7000), (352, 4800), (353, 23830), (354, 18250), (355, 7950), (356, 5035), (357, 22810), (358, 14000), (359, 25350), (360, 17980), (361, 59400), (362, 600), (363, 34050), (364, 26740), (365, 15760), (366, 53900), (367, 7900), (368, 6250), (369, 25780), (370, 3730), (371, 6990), (372, 5850), (373, 12900), (374, 6150), (375, 16750), (376, 3600), (377, 26300), (378, 6200), (379, 17140), (380, 850), (381, 12640), (382, 1740), (383, 6600), (384, 2650), (385, 8400), (386, 450), (387, 5850), (388, 700), (389, 900), (390, 2700), (391, 6350), (392, 2300), (393, 2950), (394, 12750), (395, 1700), (396, 1400), (397, 7050), (398, 200), (399, 1050), (400, 5150), (401, 24400), (402, 2700), (403, 2150), (404, 1900), (405, 1500), (406, 3000), (407, 6150), (408, 4950), (409, 300), (410, 5300), (411, 9150), (412, 1050), (413, 1650), (414, 950), (415, 1850), (416, 300), (417, 14150), (418, 4400), (419, 7000), (420, 2350), (421, 11700), (422, 1300), (423, 1750), (424, 4050), (425, 8050), (426, 2400), (427, 3500), (428, 10700), (429, 5100), (430, 100), (431, 5100), (432, 300), (433, 3200), (434, 7800), (435, 8600), (436, 1050), (437, 21700), (438, 1400), (439, 2250), (440, 950), (441, 17900), (442, 2200), (443, 12100), (444, 1150), (445, 4750), (446, 10600), (447, 14650), (448, 3900), (449, 9050), (450, 3000), (451, 9100), (452, 11500), (453, 3100), (454, 2600), (455, 600), (456, 7400), (457, 18400), (458, 2700), (459, 3300), (460, 14400), (461, 25950), (462, 2900), (463, 7350), (464, 1700), (465, 13830), (466, 5000), (467, 27300), (468, 1300), (469, 1500), (470, 8700), (471, 800), (472, 450), (473, 5300), (474, 1600), (475, 400), (476, 2850), (477, 11400), (478, 25100), (479, 1800), (480, 13150), (481, 14800), (482, 2500), (483, 8300), (484, 1200), (485, 7500), (486, 5600), (487, 1800), (488, 6350), (489, 8000), (490, 11200), (491, 7000), (492, 3200), (493, 7400), (494, 4400), (495, 16200), (496, 1700), (498, 2000), (499, 12600), (500, 9400), (501, 32000), (502, 3000), (503, 300), (504, 2500), (506, 6000), (507, 100), (508, 3700), (509, 200), (510, 1200), (511, 100), (512, 300), (514, 5200), (515, 350), (516, 1000), (517, 3000), (518, 11200), (519, 1000), (520, 900), (521, 650), (522, 6600), (523, 3700), (524, 400), (525, 300), (526, 4800), (527, 2400), (528, 1200), (529, 29300), (530, 300), (531, 10300), (532, 900), (533, 3700), (534, 1000), (535, 4100), (536, 8300), (537, 25800), (538, 600), (539, 1500), (540, 100), (541, 18200), (542, 1400), (543, 1100), (544, 1600), (545, 38550), (546, 150), (547, 6900), (548, 500), (549, 1200), (550, 16800), (551, 10100), (552, 2350), (553, 19350), (554, 150), (555, 7450), (556, 4000), (557, 15850), (558, 10800), (559, 650), (560, 6700), (561, 1600), (562, 3800), (563, 2400), (564, 3650), (565, 850), (566, 800), (567, 1000), (568, 950), (569, 18600), (570, 400), (571, 3500), (572, 900), (573, 10400), (575, 5900), (576, 800), (577, 4400), (578, 600), (579, 300), (580, 100), (581, 1600), (582, 3800), (583, 7200), (584, 5900), (585, 15800), (586, 13800), (587, 5200), (588, 2400), (589, 4400), (590, 500), (591, 6200), (593, 8100), (594, 5700), (595, 5100), (598, 5000), (599, 800), (600, 100), (601, 9000), (603, 100), (605, 1500), (606, 100), (607, 6700), (608, 400), (609, 1200), (610, 5600), (611, 4200), (612, 700), (613, 1600), (617, 16800), (619, 100), (621, 8400), (625, 400), (631, 100), (633, 2800), (634, 100), (641, 2800), (691, 400)]; probes_failure=[(1, 25440), (5, 67340), (9, 60040), (11, 56840), (12, 103250), (14, 50640), (16, 97930), (17, 96680), (18, 260000), (19, 213820), (20, 172860), (21, 352200), (22, 337390), (23, 415580), (24, 334420), (25, 69500), (26, 64800), (28, 67250), (29, 291800), (30, 494420), (31, 1461010), (32, 1974980), (33, 213400), (34, 162000), (35, 311000), (36, 297850), (37, 421100), (38, 438100), (39, 257000), (40, 448750), (41, 481200), (42, 461000), (43, 547150), (44, 380150), (45, 745480), (46, 648700), (47, 335400), (48, 277750), (49, 63800), (50, 160800), (51, 210000), (55, 164000), (76, 67080), (79, 73200), (82, 91640), (84, 173480), (85, 96200), (86, 35600), (87, 785960), (88, 87600), (89, 35600), (91, 90800), (108, 890), (112, 22350), (114, 35160), (115, 1780), (116, 17300), (118, 6130), (119, 2670), (120, 19350), (122, 15890), (123, 9400), (124, 24080), (125, 13180), (126, 32380), (127, 890), (128, 23140), (129, 29440), (130, 97640), (131, 53800), (132, 118280), (133, 53080), (134, 59330), (135, 52870), (136, 46140), (137, 39240), (138, 29500), (139, 36190), (140, 19640), (141, 27660), (142, 22880), (143, 9400), (144, 29890), (145, 11490), (152, 120320), (153, 54400), (155, 181280), (160, 1196930), (161, 63810), (162, 63410), (163, 424090), (164, 90170), (165, 89870), (166, 128180), (167, 171410), (168, 150610), (169, 74470), (170, 101430), (171, 196570), (172, 96580), (173, 96910), (174, 64430), (175, 63020), (176, 32400), (177, 30520), (178, 13080), (181, 42750), (182, 83070), (183, 57360), (184, 363760), (185, 161390), (186, 219480), (187, 77690), (188, 199250), (189, 102970), (190, 165060), (191, 198860), (192, 207630), (193, 46160), (194, 406610), (195, 54040), (196, 58200), (197, 53400), (198, 160240), (199, 48000), (200, 88900), (201, 273200), (202, 109900), (203, 134700), (204, 129180), (205, 140220), (206, 220840), (207, 278480), (208, 183960), (209, 115600), (210, 119820), (211, 56840), (212, 154340), (213, 77390), (214, 51270), (215, 69900), (216, 84110), (217, 206400), (218, 157240), (219, 65260), (220, 134640), (221, 52470), (222, 37020), (223, 33280), (224, 74000), (225, 890), (226, 890), (227, 1780), (228, 38490), (229, 2170), (230, 3060), (231, 29170), (232, 109630), (233, 19640), (234, 7400), (235, 17470), (236, 55400), (237, 239730), (238, 83570), (239, 50140), (240, 7010), (241, 4340), (242, 42230), (243, 45090), (244, 10460), (245, 103210), (246, 11180), (247, 36590), (248, 27090), (249, 53080), (250, 42940), (251, 11850), (252, 5230), (253, 118000), (254, 128660), (255, 70990), (256, 6120), (257, 88910), (258, 126400), (259, 75970), (260, 45680), (261, 76870), (262, 13310), (263, 79990), (264, 88210), (265, 29740), (266, 18040), (267, 64190), (268, 13910), (269, 39060), (270, 4340), (271, 11710), (272, 9750), (273, 22480), (274, 3950), (275, 4310), (276, 16050), (277, 36250), (278, 6300), (279, 5200), (280, 2140), (281, 7580), (282, 5410), (283, 5230), (284, 5020), (285, 16310), (286, 12390), (287, 6090), (288, 699430), (289, 3060), (290, 10790), (291, 10430), (292, 1960), (293, 3030), (294, 10220), (295, 8440), (296, 7160), (297, 5880), (298, 9150), (299, 5880), (300, 3950), (301, 3920), (302, 1780), (303, 2850), (304, 40920), (305, 6270), (306, 8080), (307, 3060), (308, 5520), (309, 5230), (310, 7400), (311, 4340), (312, 29680), (313, 8620), (314, 6120), (315, 3030), (316, 14560), (317, 14710), (318, 5910), (319, 7370), (320, 634350), (321, 3210), (322, 6450), (323, 10610), (324, 14920), (325, 5350), (326, 10730), (327, 6450), (328, 108880), (329, 4100), (330, 5170), (331, 4280), (332, 176090), (333, 7510), (334, 9430), (335, 12390), (336, 422360), (337, 4630), (338, 13990), (339, 9650), (340, 41830), (341, 65480), (342, 48110), (343, 8730), (344, 80170), (345, 3920), (346, 17940), (347, 9830), (348, 56590), (349, 10540), (350, 78270), (351, 13810), (352, 31280), (353, 11460), (354, 14670), (355, 6590), (356, 35200), (357, 10370), (358, 27820), (359, 91050), (360, 83910), (361, 25470), (362, 10190), (363, 16630), (364, 78780), (365, 16670), (366, 129110), (367, 11040), (368, 198200), (369, 6090), (370, 25220), (371, 43980), (372, 184810), (373, 37190), (374, 162550), (375, 226620), (376, 366850), (377, 108180), (378, 173790), (379, 97230), (380, 100870), (381, 64560), (382, 68890), (383, 43020), (384, 106730), (385, 69840), (386, 224410), (387, 82570), (388, 66080), (389, 146210), (390, 94650), (391, 26410), (392, 48330), (393, 144270), (394, 33680), (395, 17370), (396, 124260), (397, 27980), (398, 105520), (399, 54370), (400, 170830), (401, 80480), (402, 259550), (403, 19870), (404, 16570), (405, 14700), (406, 171010), (407, 24450), (408, 79800), (409, 22140), (410, 66580), (411, 43850), (412, 108630), (413, 10570), (414, 111600), (415, 17830), (416, 13280), (417, 11610), (418, 10180), (419, 5910), (420, 6060), (421, 5700), (422, 3920), (423, 5910), (424, 30720), (425, 3920), (426, 7660), (427, 2670), (428, 5700), (429, 4100), (430, 1960), (431, 1070), (432, 8910), (433, 2140), (434, 9630), (435, 8200), (436, 4990), (437, 3030), (438, 4100), (439, 8380), (440, 4280), (441, 3030), (442, 4280), (443, 6240), (444, 4100), (445, 6240), (446, 3030), (447, 6060), (448, 63610), (449, 890), (450, 3210), (451, 6240), (452, 2140), (454, 6240), (455, 1070), (456, 3210), (457, 1960), (458, 2140), (460, 3030), (461, 2850), (462, 2140), (464, 890), (467, 890), (470, 1780), (472, 113070), (473, 3920), (474, 1960), (475, 4630), (476, 5170), (477, 3920), (478, 4100), (479, 1780), (480, 145960), (481, 4630), (482, 3030), (483, 5170), (484, 7490), (485, 5170), (486, 8190), (487, 8020), (488, 6060), (489, 7130), (490, 8910), (491, 5350), (492, 6950), (493, 4100), (494, 4280), (495, 9450), (496, 71990), (497, 9450), (498, 6240), (499, 8560), (500, 6240), (501, 1960), (502, 5170), (503, 6420), (504, 12120), (505, 1070), (506, 9980), (507, 8380), (508, 9980), (509, 6420), (510, 9090), (511, 6950), (512, 233500), (513, 9090), (514, 7130), (515, 5700), (516, 9270), (517, 4990), (518, 16220), (519, 11770), (520, 153530), (521, 8910), (522, 11050), (523, 4280), (524, 9980), (525, 8380), (526, 16580), (527, 3920), (528, 46340), (529, 11050), (530, 10160), (531, 9450), (532, 4100), (533, 16760), (534, 10700), (535, 8910), (536, 38420), (537, 7310), (538, 12300), (539, 10160), (540, 10340), (541, 11410), (542, 17650), (543, 13370), (544, 135780), (545, 11230), (546, 9450), (547, 10520), (548, 9450), (549, 11770), (550, 7310), (551, 13010), (552, 86200), (553, 7310), (554, 7660), (555, 9270), (556, 11410), (557, 1960), (558, 6060), (559, 3030), (560, 4990), (561, 8730), (562, 5700), (563, 10690), (564, 10510), (565, 8910), (566, 11050), (567, 8730), (568, 9270), (569, 8020), (570, 8200), (571, 6060), (572, 16930), (573, 9270), (574, 15680), (575, 11590), (576, 153420), (577, 13190), (578, 23090), (579, 16120), (580, 24420), (581, 28410), (582, 45620), (583, 48980), (584, 49930), (585, 58840), (586, 70830), (587, 77810), (588, 117470), (589, 103500), (590, 106440), (591, 118650), (592, 192840), (593, 93310), (594, 111550), (595, 77810), (596, 340900), (597, 60390), (598, 59310), (599, 52690), (600, 55410), (601, 51720), (602, 38350), (603, 30210), (604, 39950), (605, 24390), (606, 16900), (607, 27630), (608, 522220), (609, 14500), (610, 617850), (611, 17290), (612, 245130), (613, 16960), (614, 14620), (615, 13010), (616, 757420), (617, 17470), (618, 85590), (619, 13370), (620, 177240), (621, 12480), (622, 153830), (623, 14080), (624, 138810), (625, 10520), (626, 8380), (627, 8200), (628, 390040), (629, 20500), (630, 274710), (631, 14800), (632, 267920), (633, 12840), (634, 167900), (635, 18010), (636, 644150), (637, 17650), (638, 28670), (639, 24430), (640, 789350), (641, 22470), (642, 59350), (643, 22470), (644, 21930), (645, 17120), (646, 21220), (647, 22820), (648, 23000), (649, 27280), (650, 101930), (651, 38690), (652, 299810), (653, 37250), (654, 55550), (655, 25520), (656, 46150), (657, 43730), (658, 27270), (659, 30900), (660, 32650), (661, 34790), (662, 35500), (663, 30340), (664, 322090), (665, 29440), (666, 26950), (667, 29060), (668, 54930), (669, 25370), (670, 18930), (671, 21310), (672, 105810), (673, 37450), (674, 30020), (675, 21070), (676, 70160), (677, 20120), (678, 28230), (679, 10550), (680, 106140), (681, 15630), (682, 31150), (683, 28770), (684, 29260), (685, 14380), (686, 20000), (687, 18160), (688, 150260), (689, 26030), (690, 20620), (691, 25520), (692, 67050), (693, 39920), (694, 38110), (695, 45340), (696, 37760), (697, 32590), (698, 47590), (699, 39570), (700, 56250), (701, 34220), (702, 31970), (703, 27040), (704, 165140), (705, 32410), (706, 32860), (707, 10190), (708, 170270), (709, 26790), (710, 41370), (711, 26580), (712, 47340), (713, 18300), (714, 9150), (715, 8940), (716, 29650), (717, 9980), (718, 5910), (719, 6270), (720, 9150), (721, 9120), (722, 3740), (723, 10190), (724, 1960), (725, 890), (726, 4340), (727, 1960), (728, 64680), (729, 1070), (730, 2170), (732, 17600), (736, 125440), (772, 8800)];
mul:matrices/32,5-row_rots_32,5-row_xforms_32,5-col_rots_32,5-col_xforms-32,5 n_ones=605430870; n_elems=655360000; in_slots=160; out_slots=160; density=0.9238141937255859; time=187.028609685;
load:matrices/32,5-row_rots-32,5 n_ones=128000; n_elems=655360000; in_slots=160; out_slots=160; density=0.0001953125; time=0.492944738;
mul_stats:: probes_success=[(1, 584258875), (2, 33879125), (4, 1638400)]; probes_failure=[(5, 35583600)];
mul:matrices/32,5-row_rots_32,5-row_xforms_32,5-col_rots_32,5-col_xforms_32,5-row_rots-32,5 n_ones=619776400; n_elems=655360000; in_slots=160; out_slots=160; density=0.9457037353515625; time=44.788720793;
Begin search
solution:init;load_rep;xform(3,2,32);id;xform(5,1,5);id;id;id
solution:init;load_rep;xform(2,2,32);rot(1);xform(5,31,5);rot(20);xform(4,0,32);rot(1)
stats:0 name=load_rep; lane=0; tested=1; found=0; failed=0; pruned=0; continued=1; target_checks=[];
stats:1 name=row_xforms; lane=0; tested=100; found=0; failed=0; pruned=96; continued=4; target_checks=[(1, 20), (2, 4), (3, 4), (4, 4), (20, 34), (40, 20), (50, 5), (70, 1), (80, 1), (100, 3)];
stats:2 name=row_rots; lane=0; tested=20; found=0; failed=0; pruned=18; continued=2; target_checks=[(1, 8), (3, 6), (100, 4)];
stats:3 name=col_xforms; lane=0; tested=2728; found=0; failed=0; pruned=2726; continued=2; target_checks=[(1, 2566), (2, 32), (4, 24), (5, 99), (8, 3), (10, 2)];
stats:4 name=col_rots; lane=0; tested=116; found=0; failed=0; pruned=114; continued=2; target_checks=[(1, 114)];
stats:5 name=row_xforms; lane=0; tested=200; found=0; failed=0; pruned=198; continued=2; target_checks=[(1, 150), (5, 40), (10, 2), (20, 2), (40, 2), (80, 2)];
stats:6 name=row_rots; lane=0; tested=10; found=0; failed=0; pruned=0; continued=10; target_checks=[];
stats:7 name=(last); lane=0; tested=10; found=2; failed=8; pruned=0; continued=0; target_checks=[];
search:specs/swinv_like_big/l3/trove-crc-5.json success=true; mode=All; time=0.050925596;
spec:specs/swinv_like_big/l3/2d-stencil-5.json
build:matrices/4,4-identity-4,4,5,5 n_ones=160000; n_elems=40960000; in_slots=400; out_slots=16; density=0.00390625; time=0.019739238;
Using newly-built matrices/4,4-identity-4,4,5,5
build:matrices/4,4,5,5-2s-r{main[1]out[1]second[3]}-4,4,5,5 n_ones=720000; n_elems=25600000000; in_slots=400; out_slots=400; density=0.000028125; time=0.78953099;
mul_stats:: probes_success=[(1, 1152), (2, 1152), (3, 1152), (4, 1152), (5, 1152), (6, 1152), (7, 1152), (8, 1152), (9, 1152), (10, 11520), (20, 11520), (30, 11520), (40, 11520), (50, 11520), (60, 11520), (70, 11520), (80, 11520), (90, 11520), (100, 115200), (200, 115200), (300, 115200), (400, 115200), (500, 115200), (600, 29952)]; probes_failure=[(600, 40240000)];
mul:matrices/4,4-identity_4,4,5,5-2s-r{main[1]out[1]second[3]}-4,4,5,5 n_ones=720000; n_elems=40960000; in_slots=400; out_slots=16; density=0.017578125; time=154.584552075;
build:matrices/4,4,5,5-2s-xf{main[1]out[1]second[3]}-4,4,5,5 n_ones=1082400; n_elems=25600000000; in_slots=400; out_slots=400; density=0.00004228125; time=1.065636296;
mul_stats:: probes_success=[(1, 528), (2, 1024), (3, 800), (4, 1024), (5, 528), (6, 528), (7, 1024), (8, 800), (9, 1024), (10, 7808), (20, 11824), (30, 18240), (40, 18240), (50, 15648), (60, 15168), (70, 16224), (80, 18240), (90, 18240), (100, 123104), (200, 129376), (300, 123536), (400, 148640), (500, 147344), (600, 128720), (700, 126768), (800, 150048), (900, 129968), (1000, 129936), (1100, 147440), (1200, 86704), (1300, 50480), (1400, 44400), (1500, 44864), (1600, 48176), (1700, 45360), (1800, 38816), (1900, 11632), (2000, 11824), (2100, 14224), (2200, 12592), (2300, 13408), (2400, 11632), (2500, 9296), (2600, 9936), (2700, 9232), (2800, 9136), (2900, 9200), (3000, 9216), (3100, 2880)]; probes_failure=[(2500, 19488000), (3100, 19347200)];
mul:matrices/4,4-identity_4,4,5,5-2s-r{main[1]out[1]second[3]}_4,4,5,5-2s-xf{main[1]out[1]second[3]}-4,4,5,5 n_ones=2124800; n_elems=40960000; in_slots=400; out_slots=16; density=0.051875; time=1092.294443586;
build:matrices/4,4,5,5-2s-r{main[0]out[0]second[2]}-4,4,5,5 n_ones=720000; n_elems=25600000000; in_slots=400; out_slots=400; density=0.000028125; time=1.437379664;
mul_stats:: probes_success=[(1, 2124800), (2, 2124800), (3, 2124800), (4, 2124800), (5, 1062400)]; probes_failure=[(4, 16230400), (5, 15168000)];
mul:matrices/4,4-identity_4,4,5,5-2s-r{main[1]out[1]second[3]}_4,4,5,5-2s-xf{main[1]out[1]second[3]}_4,4,5,5-2s-r{main[0]out[0]second[2]}-4,4,5,5 n_ones=9561600; n_elems=40960000; in_slots=400; out_slots=16; density=0.2334375; time=422.409142816;
build:matrices/4,4,5,5-2s-xf{main[0]out[0]second[2]}-4,4,5,5 n_ones=1082400; n_elems=25600000000; in_slots=400; out_slots=400; density=0.00004228125; time=1.497284538;
mul_stats:: probes_success=[(1, 9944064), (2, 7744896), (3, 5577600), (4, 3899008), (5, 860544), (7, 127488), (8, 42496), (9, 21248)]; probes_failure=[(1, 324608), (2, 1565184), (3, 2759680), (4, 1936896), (5, 815616), (6, 730624), (7, 104448), (8, 1736704), (9, 727040), (10, 897024), (11, 278528), (12, 866304)];
mul:matrices/4,4-identity_4,4,5,5-2s-r{main[1]out[1]second[3]}_4,4,5,5-2s-xf{main[1]out[1]second[3]}_4,4,5,5-2s-r{main[0]out[0]second[2]}_4,4,5,5-2s-xf{main[0]out[0]second[2]}-4,4,5,5 n_ones=28217344; n_elems=40960000; in_slots=400; out_slots=16; density=0.6889; time=389.677090474;
build:matrices/4,4,5,5-2s-g{axis[3]dims[1|3]}-4,4,5,2 n_ones=620800; n_elems=4096000000; in_slots=160; out_slots=400; density=0.0001515625; time=1.534111508;
mul_stats:: probes_success=[(1, 3314688), (2, 2124800)]; probes_failure=[(18, 34816), (20, 104448), (24, 69632), (25, 905216)];
mul:matrices/4,4-identity_4,4,5,5-2s-r{main[1]out[1]second[3]}_4,4,5,5-2s-xf{main[1]out[1]second[3]}_4,4,5,5-2s-r{main[0]out[0]second[2]}_4,4,5,5-2s-xf{main[0]out[0]second[2]}_4,4,5,5-2s-g{axis[3]dims[1|3]}-4,4,5,2 n_ones=5439488; n_elems=6553600; in_slots=160; out_slots=16; density=0.83; time=67.477342961;
Begin search
solution:init;id;load_grid_2d;select(d0 >= 0 + d2, );select(d1 >= 0 + d3, );xform(0,1,5);id;xform(0,1,5);id;id
stats:0 name=reshape; lane=0; tested=1; found=0; failed=0; pruned=0; continued=1; target_checks=[];
stats:1 name=load_grid_2d; lane=0; tested=1; found=0; failed=0; pruned=0; continued=1; target_checks=[];
stats:2 name=2s-g{axis[2]dims[0|2]}; lane=0; tested=36; found=0; failed=0; pruned=33; continued=3; target_checks=[(1, 9), (20, 3), (60, 2), (100, 2), (200, 8), (300, 3), (7800, 2), (41200, 1), (60900, 3)];
stats:3 name=2s-g{axis[3]dims[1|3]}; lane=0; tested=108; found=0; failed=0; pruned=99; continued=9; target_checks=[(1, 36), (3, 6), (6, 6), (10, 33), (400, 6), (2300, 3), (3900, 6), (4000, 3)];
stats:4 name=2s-xf{main[0]out[0]second[2]}; lane=0; tested=126; found=0; failed=0; pruned=123; continued=3; target_checks=[(20, 75), (60, 30), (60900, 18)];
stats:5 name=2s-r{main[0]out[0]second[2]}; lane=0; tested=15; found=0; failed=0; pruned=12; continued=3; target_checks=[(1, 12)];
stats:6 name=2s-xf{main[1]out[1]second[3]}; lane=0; tested=42; found=0; failed=0; pruned=41; continued=1; target_checks=[(1, 21), (2, 4), (3, 10), (3900, 6)];
stats:7 name=2s-r{main[1]out[1]second[3]}; lane=0; tested=5; found=0; failed=0; pruned=4; continued=1; target_checks=[(1, 4)];
stats:8 name=identity; lane=0; tested=1; found=0; failed=0; pruned=0; continued=1; target_checks=[];
stats:9 name=(last); lane=0; tested=1; found=1; failed=0; pruned=0; continued=0; target_checks=[];
search:specs/swinv_like_big/l3/2d-stencil-5.json success=true; mode=All; time=0.172762538;
spec:specs/swinv_like_big/l1/trove-rcr-5.json
build:matrices/32,5-col_rots_no_group-32,5 n_ones=819200; n_elems=655360000; in_slots=160; out_slots=160; density=0.00125; time=0.228854456;
Using newly-built matrices/32,5-col_rots_no_group-32,5
build:matrices/32,5-col_xforms_no_group-32,5 n_ones=10827088; n_elems=655360000; in_slots=160; out_slots=160; density=0.0165208251953125; time=5.5851166899999996;
mul_stats:: probes_success=[(1, 7929344), (2, 9664256), (3, 1147424), (4, 809120), (5, 391520), (6, 405504), (7, 344480), (8, 325920), (9, 260768), (10, 2001440), (20, 712960), (30, 137568)]; probes_failure=[(30, 631229696)];
mul:matrices/32,5-col_rots_no_group_32,5-col_xforms_no_group-32,5 n_ones=24130304; n_elems=655360000; in_slots=160; out_slots=160; density=0.036819921875; time=107.239952358;
build:matrices/32,5-row_rots_no_group-32,5 n_ones=128000; n_elems=655360000; in_slots=160; out_slots=160; density=0.0001953125; time=0.065678361;
mul_stats:: probes_success=[(1, 23170560), (2, 24596480), (3, 24448000), (4, 24596480), (5, 23840000)]; probes_failure=[(5, 534708480)];
mul:matrices/32,5-col_rots_no_group_32,5-col_xforms_no_group_32,5-row_rots_no_group-32,5 n_ones=120651520; n_elems=655360000; in_slots=160; out_slots=160; density=0.184099609375; time=57.723916903;
build:matrices/32,5-row_xforms_no_group-32,5 n_ones=575945; n_elems=655360000; in_slots=160; out_slots=160; density=0.0008788223266601562; time=0.509412881;
mul_stats:: probes_success=[(1, 104031072), (2, 124980256), (3, 128149088), (4, 127404000), (5, 94878080), (6, 14480128), (7, 445312), (8, 541472), (9, 85824), (10, 24928)]; probes_failure=[(1, 25440), (4, 546912), (5, 4310592), (8, 124160), (9, 32064), (12, 1631104), (13, 188416), (16, 1372544), (17, 32896), (20, 21768192), (25, 30307520)];
mul:matrices/32,5-col_rots_no_group_32,5-col_xforms_no_group_32,5-row_rots_no_group_32,5-row_xforms_no_group-32,5 n_ones=595020160; n_elems=655360000; in_slots=160; out_slots=160; density=0.9079287109375; time=63.684776791;
mul_stats:: probes_success=[(1, 591938560), (2, 5918720), (3, 4956160), (4, 1658880), (5, 2273280), (6, 117760), (7, 245760), (8, 655360), (9, 931840), (10, 51200), (11, 51200), (12, 25600), (13, 926720), (14, 25600), (15, 102400), (16, 30720), (17, 378880), (19, 5120), (21, 71680), (23, 614400), (25, 122880), (28, 558080), (29, 148480), (31, 40960)]; probes_failure=[(32, 43509760)];
mul:matrices/32,5-col_rots_no_group_32,5-col_xforms_no_group_32,5-row_rots_no_group_32,5-row_xforms_no_group_32,5-col_rots_no_group-32,5 n_ones=611850240; n_elems=655360000; in_slots=160; out_slots=160; density=0.933609375; time=67.202807773;
Begin search
solution:init;load_rep;xform(31,0,5);rot(1);xform(3,3,32);rot(4);xform(27,31,5);rot(13)
solution:init;load_rep;id;rot(16);xform(3,2,16);rot(4);xform(5,1,5);rot(16)
solution:init;load_rep;id;id;xform(3,2,32);id;xform(5,1,5);id
stats:0 name=load_rep; lane=0; tested=1; found=0; failed=0; pruned=0; continued=1; target_checks=[];
stats:1 name=col_xforms_no_group; lane=0; tested=992; found=0; failed=0; pruned=976; continued=16; target_checks=[(2, 256), (4, 128), (30, 76), (40, 374), (50, 46), (60, 30), (70, 1), (80, 23), (90, 2), (100, 6), (1800, 8), (2200, 2), (2500, 20), (3600, 4)];
stats:2 name=col_rots_no_group; lane=0; tested=512; found=0; failed=0; pruned=479; continued=33; target_checks=[(30, 39), (40, 39), (50, 78), (60, 44), (70, 34), (80, 12), (90, 14), (100, 138), (200, 42), (300, 12), (400, 7), (500, 3), (600, 1), (700, 3), (800, 1), (1000, 1), (1100, 1), (1300, 1), (1400, 1), (1600, 1), (1700, 1), (1900, 1), (2000, 1), (2200, 1), (2300, 1), (2500, 1), (2600, 1)];
stats:3 name=row_xforms_no_group; lane=0; tested=3300; found=0; failed=0; pruned=3297; continued=3; target_checks=[(1, 2640), (2, 246), (3, 57), (4, 61), (5, 27), (6, 27), (7, 27), (8, 31), (9, 12), (10, 103), (20, 50), (30, 16)];
stats:4 name=row_rots_no_group; lane=0; tested=15; found=0; failed=0; pruned=12; continued=3; target_checks=[(1, 12)];
stats:5 name=col_xforms_no_group; lane=0; tested=2976; found=0; failed=0; pruned=2973; continued=3; target_checks=[(1, 2883), (5, 90)];
stats:6 name=col_rots_no_group; lane=0; tested=96; found=0; failed=0; pruned=0; continued=96; target_checks=[];
stats:7 name=(last); lane=0; tested=96; found=3; failed=93; pruned=0; continued=0; target_checks=[];
search:specs/swinv_like_big/l1/trove-rcr-5.json success=true; mode=All; time=0.157268911;
spec:specs/swinv_like_big/l1/trove-crc-5.json
load:matrices/32,5-row_rots_no_group-32,5 n_ones=128000; n_elems=655360000; in_slots=160; out_slots=160; density=0.0001953125; time=0.503852078;
load:matrices/32,5-row_xforms_no_group-32,5 n_ones=575945; n_elems=655360000; in_slots=160; out_slots=160; density=0.0008788223266601562; time=0.496796812;
mul_stats:: probes_success=[(1, 543745), (2, 77445), (3, 3370), (4, 1505), (5, 935)]; probes_failure=[(5, 654733000)];
mul:matrices/32,5-row_rots_no_group_32,5-row_xforms_no_group-32,5 n_ones=627000; n_elems=655360000; in_slots=160; out_slots=160; density=0.00095672607421875; time=28.001407159;
load:matrices/32,5-col_rots_no_group-32,5 n_ones=819200; n_elems=655360000; in_slots=160; out_slots=160; density=0.00125; time=0.532819545;
mul_stats:: probes_success=[(1, 819200), (2, 819200), (3, 819200), (4, 819200), (5, 819200), (6, 814080), (7, 814080), (8, 814080), (9, 814080), (10, 8072960), (20, 4638720)]; probes_failure=[(5, 4070400), (10, 13313600), (20, 617912000)];
mul:matrices/32,5-row_rots_no_group_32,5-row_xforms_no_group_32,5-col_rots_no_group-32,5 n_ones=20064000; n_elems=655360000; in_slots=160; out_slots=160; density=0.030615234375; time=89.164039084;
load:matrices/32,5-col_xforms_no_group-32,5 n_ones=10827088; n_elems=655360000; in_slots=160; out_slots=160; density=0.0165208251953125; time=0.50466493;
mul_stats:: probes_success=[(1, 20055680), (2, 19439760), (3, 19902360), (4, 19900800), (5, 19988240), (6, 19803560), (7, 19480360), (8, 19570120), (9, 19099000), (10, 18919840), (11, 18605680), (12, 17838040), (13, 17981720), (14, 18206000), (15, 18364640), (16, 18436320), (17, 15587720), (18, 14286440), (19, 13107920), (20, 11728840), (21, 11050240), (22, 9965960), (23, 10032160), (24, 9416480), (25, 10105320), (26, 9579680), (27, 9338560), (28, 9060640), (29, 8549600), (30, 8802840), (31, 8606040), (32, 7356440), (33, 4078560), (34, 3237960), (35, 3290040), (36, 3965920), (37, 2811200), (38, 2388400), (39, 2573520), (40, 2366120), (41, 2110560), (42, 2060480), (43, 2310160), (44, 1446640), (45, 1902640), (46, 1553800), (47, 1535480), (48, 1080200), (49, 1983920), (50, 2023280), (51, 1844720), (52, 1766000), (53, 1471000), (54, 1153800), (55, 1414880), (56, 1411600), (57, 1321480), (58, 806680), (59, 1183240), (60, 882840), (61, 1139160), (62, 754160), (63, 743160), (64, 898760), (65, 1060960), (66, 1055200), (67, 1073160), (68, 955360), (69, 657480), (70, 765640), (71, 1135520), (72, 839840), (73, 1042560), (74, 674920), (75, 842480), (76, 742240), (77, 449720), (78, 493760), (79, 432440), (80, 641760), (81, 980080), (82, 568880), (83, 703400), (84, 567360), (85, 799360), (86, 615600), (87, 574640), (88, 356640), (89, 619480), (90, 457200), (91, 553600), (92, 474960), (93, 572560), (94, 202400), (95, 478160), (96, 438760), (97, 707680), (98, 585280), (99, 595760), (100, 503560), (101, 626080), (102, 371880), (103, 383240), (104, 452440), (105, 449920), (106, 442680), (107, 437880), (108, 321120), (109, 421320), (110, 374640), (111, 603480), (112, 471920), (113, 453880), (114, 436920), (115, 533120), (116, 386880), (117, 497600), (118, 343000), (119, 298880), (120, 569280), (121, 588880), (122, 314680), (123, 476960), (124, 329440), (125, 513760), (126, 386960), (127, 325000), (128, 388480), (129, 590080), (130, 437480), (131, 366840), (132, 272000), (133, 306320), (134, 442920), (135, 432800), (136, 307480), (137, 534080), (138, 286480), (139, 273600), (140, 189480), (141, 561920), (142, 276240), (143, 167800), (144, 240200), (145, 514720), (146, 406720), (147, 207120), (148, 206040), (149, 271640), (150, 242400), (151, 373920), (152, 226040), (153, 223840), (154, 384000), (155, 243200), (156, 319720), (157, 308120), (158, 165440), (159, 361280), (160, 165760), (161, 395680), (162, 258280), (163, 201920), (164, 140600), (165, 230400), (166, 75480), (167, 163680), (168, 140640), (169, 176560), (170, 106000), (171, 181680), (172, 133200), (173, 203720), (174, 152200), (175, 146240), (176, 51200), (177, 176520), (178, 177440), (179, 178320), (180, 70200), (181, 120200), (182, 95040), (183, 166080), (184, 120640), (185, 285440), (186, 108160), (187, 89280), (188, 151720), (189, 89280), (190, 64000), (191, 32000), (192, 132040), (193, 89600), (194, 126880), (195, 83200), (196, 95040), (197, 151920), (198, 74400), (199, 226320), (200, 139680), (201, 79280), (202, 69440), (203, 76800), (204, 114560), (205, 101440), (206, 112800), (207, 172800), (208, 61120), (209, 198080), (210, 102400), (211, 172160), (212, 62160), (213, 70400), (214, 76800), (215, 50240), (216, 19200), (217, 178880), (218, 74880), (219, 25600), (220, 38080), (221, 25600), (222, 38400), (223, 76800), (224, 114720), (225, 236800), (226, 191120), (227, 12800), (228, 51200), (229, 127680), (230, 25600), (231, 162720), (232, 62080), (233, 62320), (234, 62880), (235, 102400), (236, 25600), (237, 76480), (238, 37840), (239, 12480), (240, 179200), (241, 128000), (242, 89040), (243, 25600), (244, 38240), (245, 63520), (246, 63440), (247, 140800), (248, 102400), (249, 127680), (250, 12800), (251, 25600), (252, 51200), (253, 51200), (254, 76800), (255, 102400), (256, 25600), (257, 88640), (258, 38400), (259, 102240), (261, 166080), (262, 12800), (263, 38400), (264, 38400), (265, 63680), (266, 12800), (267, 76800), (268, 12800), (269, 38400), (270, 177520), (271, 25600), (273, 25600), (274, 12800), (275, 12800), (276, 12800), (278, 12800), (279, 51200), (280, 25440), (281, 64000), (282, 89600), (283, 115200), (285, 140240), (286, 64000), (287, 64000), (288, 76800), (289, 51200), (290, 12800), (291, 153600), (292, 76800), (293, 12800), (295, 64000), (296, 25600), (297, 12800), (298, 102080), (299, 25600), (301, 115200), (302, 37760), (303, 51200), (304, 75680), (305, 25600), (306, 75520), (307, 140800), (308, 12800), (310, 12800), (311, 12800), (312, 76800), (317, 102400), (319, 51200), (321, 50560), (322, 49920), (324, 38080), (327, 25600), (336, 12800), (338, 23680), (339, 12800), (340, 24640), (341, 64000), (342, 51200), (345, 128000), (347, 12800), (352, 12800), (359, 102400), (361, 51200), (375, 51200), (395, 25600), (396, 25600), (397, 102400), (401, 51200), (413, 51200), (427, 51200), (431, 51200), (447, 25600), (457, 51200), (463, 51200), (477, 51200), (479, 51200), (485, 102400), (496, 23680), (499, 49600), (503, 24320), (515, 24960), (519, 24320), (525, 51200), (527, 51200), (533, 51200), (535, 51200), (537, 25600), (539, 25600), (557, 76800), (565, 51200), (573, 51200), (591, 51200)]; probes_failure=[(1, 25440), (5, 68640), (9, 236480), (14, 206080), (15, 553280), (16, 51040), (17, 247200), (18, 143520), (19, 271360), (20, 351040), (21, 788960), (22, 415680), (23, 1548480), (24, 309200), (26, 334400), (27, 1436800), (28, 144000), (29, 1051200), (30, 1515120), (31, 4061360), (32, 1690880), (40, 470880), (48, 434240), (72, 1178640), (80, 663360), (85, 14240), (104, 14240), (112, 421840), (116, 563200), (120, 372800), (144, 865920), (146, 89600), (148, 318240), (152, 448320), (156, 317280), (160, 2903200), (172, 180160), (176, 307200), (178, 358400), (179, 179200), (180, 1163520), (184, 823920), (185, 179200), (186, 179200), (188, 155200), (190, 142400), (191, 166400), (192, 309440), (193, 270560), (194, 307200), (196, 359040), (198, 244640), (200, 373360), (201, 281600), (202, 269600), (204, 102880), (205, 34720), (211, 97440), (214, 28480), (215, 28480), (216, 477040), (218, 34720), (220, 34720), (224, 97920), (226, 178400), (228, 382400), (229, 179200), (230, 34720), (232, 745440), (233, 166400), (234, 213440), (236, 34720), (238, 34240), (240, 97920), (244, 34720), (248, 97440), (258, 69440), (264, 28480), (277, 69440), (278, 34240), (280, 34240), (288, 1710400), (294, 62720), (304, 172480), (309, 62720), (312, 330560), (316, 62720), (317, 14240), (318, 34720), (320, 637760), (321, 14240), (324, 168640), (326, 358400), (328, 42720), (332, 563200), (336, 77440), (340, 28480), (341, 48960), (342, 14240), (344, 48960), (345, 76960), (346, 34720), (348, 442080), (349, 307200), (351, 34720), (352, 112160), (354, 332800), (356, 48960), (360, 413760), (362, 48960), (364, 229120), (365, 295840), (366, 204800), (368, 537280), (370, 34720), (371, 112160), (372, 339680), (374, 619040), (375, 332800), (376, 97920), (378, 228160), (380, 14240), (382, 179200), (384, 97920), (416, 28480), (432, 34240), (435, 28480), (444, 34240), (448, 125440), (449, 28480), (453, 34240), (458, 68480), (461, 34240), (462, 34240), (463, 34240), (464, 1126400), (465, 34240), (467, 28480), (468, 34240), (470, 34240), (473, 34240), (476, 34240), (478, 28480), (480, 125440), (486, 68480), (488, 34240), (492, 28480), (496, 28480), (500, 28480), (512, 62720), (515, 34240), (517, 34240), (518, 34240), (524, 34240), (526, 34240), (528, 34240), (544, 313600), (545, 34240), (552, 34240), (555, 28480), (558, 125440), (559, 62720), (563, 548480), (564, 480320), (565, 28480), (566, 297280), (567, 200320), (568, 594560), (573, 34240), (576, 290880), (580, 34240), (582, 1024000), (584, 34240), (596, 853440), (600, 68480), (601, 34240), (603, 34240), (604, 614400), (605, 68480), (608, 1070400), (610, 1945600), (614, 751040), (615, 34240), (616, 1228800), (619, 34240), (622, 68480), (625, 34240), (627, 250880), (628, 68480), (629, 34240), (630, 786560), (632, 899520), (636, 34240), (637, 125440), (640, 376320), (641, 69440), (642, 69440), (644, 125440), (652, 194880), (653, 138880), (658, 69440), (660, 125440), (664, 512000), (672, 62720), (673, 69440), (704, 125440), (736, 125440)];
mul:matrices/32,5-row_rots_no_group_32,5-row_xforms_no_group_32,5-col_rots_no_group_32,5-col_xforms_no_group-32,5 n_ones=593892640; n_elems=655360000; in_slots=160; out_slots=160; density=0.906208251953125; time=201.310250097;
load:matrices/32,5-row_rots_no_group-32,5 n_ones=128000; n_elems=655360000; in_slots=160; out_slots=160; density=0.0001953125; time=0.516941315;
mul_stats:: probes_success=[(1, 570238800), (2, 37761200), (4, 1638400)]; probes_failure=[(5, 45721600)];
mul:matrices/32,5-row_rots_no_group_32,5-row_xforms_no_group_32,5-col_rots_no_group_32,5-col_xforms_no_group_32,5-row_rots_no_group-32,5 n_ones=609638400; n_elems=655360000; in_slots=160; out_slots=160; density=0.930234375; time=46.262880905;
Begin search
solution:init;load_rep;xform(3,2,32);id;xform(5,1,5);id;id;id
solution:init;load_rep;xform(2,2,32);rot(1);xform(5,31,5);rot(20);xform(4,0,32);rot(1)
stats:0 name=load_rep; lane=0; tested=1; found=0; failed=0; pruned=0; continued=1; target_checks=[];
stats:1 name=row_xforms_no_group; lane=0; tested=100; found=0; failed=0; pruned=96; continued=4; target_checks=[(1, 20), (2, 4), (3, 4), (4, 4), (10, 8), (20, 26), (30, 14), (40, 14), (100, 2)];
stats:2 name=row_rots_no_group; lane=0; tested=20; found=0; failed=0; pruned=18; continued=2; target_checks=[(1, 8), (3, 6), (100, 4)];
stats:3 name=col_xforms_no_group; lane=0; tested=1984; found=0; failed=0; pruned=1982; continued=2; target_checks=[(1, 1922), (5, 60)];
stats:4 name=col_rots_no_group; lane=0; tested=64; found=0; failed=0; pruned=62; continued=2; target_checks=[(1, 62)];
stats:5 name=row_xforms_no_group; lane=0; tested=200; found=0; failed=0; pruned=198; continued=2; target_checks=[(1, 150), (5, 40), (10, 2), (20, 2), (40, 2), (80, 2)];
stats:6 name=row_rots_no_group; lane=0; tested=10; found=0; failed=0; pruned=0; continued=10; target_checks=[];
stats:7 name=(last); lane=0; tested=10; found=2; failed=8; pruned=0; continued=0; target_checks=[];
search:specs/swinv_like_big/l1/trove-crc-5.json success=true; mode=All; time=0.040843741;
spec:specs/swinv_like_big/l1/2d-stencil-5.json
load:matrices/4,4-identity-4,4,5,5 n_ones=160000; n_elems=40960000; in_slots=400; out_slots=16; density=0.00390625; time=0.034840727;
build:matrices/4,4,5,5-2s-rnc{main[1]out[1]second[3]}-4,4,5,5 n_ones=640000; n_elems=25600000000; in_slots=400; out_slots=400; density=0.000025; time=0.771549504;
mul_stats:: probes_success=[(1, 1024), (2, 1024), (3, 1024), (4, 1024), (5, 1024), (6, 1024), (7, 1024), (8, 1024), (9, 1024), (10, 10240), (20, 10240), (30, 10240), (40, 10240), (50, 10240), (60, 10240), (70, 10240), (80, 10240), (90, 10240), (100, 102400), (200, 102400), (300, 102400), (400, 102400), (500, 102400), (600, 26624)]; probes_failure=[(600, 40320000)];
mul:matrices/4,4-identity_4,4,5,5-2s-rnc{main[1]out[1]second[3]}-4,4,5,5 n_ones=640000; n_elems=40960000; in_slots=400; out_slots=16; density=0.015625; time=151.739392458;
build:matrices/4,4,5,5-2s-xfnc{main[1]out[1]second[3]}-4,4,5,5 n_ones=1046400; n_elems=25600000000; in_slots=400; out_slots=400; density=0.000040875; time=0.986730407;
mul_stats:: probes_success=[(1, 512), (2, 1024), (3, 768), (4, 1024), (5, 512), (6, 512), (7, 1024), (8, 768), (9, 1024), (10, 7680), (20, 12544), (30, 20480), (40, 20480), (50, 13312), (60, 12288), (70, 15360), (80, 20480), (90, 20480), (100, 121344), (200, 139776), (300, 121856), (400, 152320), (500, 150784), (600, 132096), (700, 145792), (800, 158592), (900, 138880), (1000, 138368), (1100, 158208), (1200, 89600), (1300, 32064), (1400, 33920), (1500, 33856), (1600, 32000), (1700, 32000), (1800, 29632), (1900, 16640), (2000, 16704), (2100, 17152), (2200, 16768), (2300, 17216), (2400, 16640), (2500, 320)]; probes_failure=[(2500, 38867200)];
mul:matrices/4,4-identity_4,4,5,5-2s-rnc{main[1]out[1]second[3]}_4,4,5,5-2s-xfnc{main[1]out[1]second[3]}-4,4,5,5 n_ones=2092800; n_elems=40960000; in_slots=400; out_slots=16; density=0.05109375; time=959.183710864;
build:matrices/4,4,5,5-2s-rnc{main[0]out[0]second[2]}-4,4,5,5 n_ones=640000; n_elems=25600000000; in_slots=400; out_slots=400; density=0.000025; time=1.4115049069999999;
mul_stats:: probes_success=[(1, 2092800), (2, 2092800), (3, 2092800), (4, 2092800)]; probes_failure=[(4, 32588800)];
mul:matrices/4,4-identity_4,4,5,5-2s-rnc{main[1]out[1]second[3]}_4,4,5,5-2s-xfnc{main[1]out[1]second[3]}_4,4,5,5-2s-rnc{main[0]out[0]second[2]}-4,4,5,5 n_ones=8371200; n_elems=40960000; in_slots=400; out_slots=16; density=0.204375; time=414.576012002;
build:matrices/4,4,5,5-2s-xfnc{main[0]out[0]second[2]}-4,4,5,5 n_ones=1046400; n_elems=25600000000; in_slots=400; out_slots=400; density=0.000040875; time=1.394205994;
mul_stats:: probes_success=[(1, 8371200), (2, 7534080), (3, 6403968), (4, 3808896), (5, 920832), (6, 167424), (7, 167424)]; probes_failure=[(1, 325888), (2, 1620480), (3, 2888192), (4, 2042112), (5, 876032), (6, 792320), (7, 897024), (8, 1997312), (10, 1231872), (12, 914944)];
mul:matrices/4,4-identity_4,4,5,5-2s-rnc{main[1]out[1]second[3]}_4,4,5,5-2s-xfnc{main[1]out[1]second[3]}_4,4,5,5-2s-rnc{main[0]out[0]second[2]}_4,4,5,5-2s-xfnc{main[0]out[0]second[2]}-4,4,5,5 n_ones=27373824; n_elems=40960000; in_slots=400; out_slots=16; density=0.66830625; time=378.945005623;
build:matrices/4,4,5,5-2s-gnc{axis[3]dims[1|3]}-4,4,5,2 n_ones=576000; n_elems=4096000000; in_slots=160; out_slots=400; density=0.000140625; time=0.75816744;
mul_stats:: probes_success=[(1, 3599616), (2, 1757952)]; probes_failure=[(8, 37376), (14, 37376), (17, 74752), (18, 74752), (19, 74752), (20, 74752), (25, 822272)];
mul:matrices/4,4-identity_4,4,5,5-2s-rnc{main[1]out[1]second[3]}_4,4,5,5-2s-xfnc{main[1]out[1]second[3]}_4,4,5,5-2s-rnc{main[0]out[0]second[2]}_4,4,5,5-2s-xfnc{main[0]out[0]second[2]}_4,4,5,5-2s-gnc{axis[3]dims[1|3]}-4,4,5,2 n_ones=5357568; n_elems=6553600; in_slots=160; out_slots=16; density=0.8175; time=68.041672389;
Begin search
solution:init;id;load_grid_2d;select(d0 >= 0 + d2, );select(d1 >= 0 + d3, );xform(0,1,5);id;xform(0,1,5);id;id
stats:0 name=reshape; lane=0; tested=1; found=0; failed=0; pruned=0; continued=1; target_checks=[];
stats:1 name=load_grid_2d; lane=0; tested=1; found=0; failed=0; pruned=0; continued=1; target_checks=[];
stats:2 name=2s-gnc{axis[2]dims[0|2]}; lane=0; tested=14; found=0; failed=0; pruned=13; continued=1; target_checks=[(1, 3), (20, 3), (200, 3), (7800, 1), (41200, 1), (60900, 2)];
stats:3 name=2s-gnc{axis[3]dims[1|3]}; lane=0; tested=14; found=0; failed=0; pruned=13; continued=1; target_checks=[(1, 6), (10, 3), (400, 1), (2300, 1), (3900, 2)];
stats:4 name=2s-xfnc{main[0]out[0]second[2]}; lane=0; tested=12; found=0; failed=0; pruned=11; continued=1; target_checks=[(20, 11)];
stats:5 name=2s-rnc{main[0]out[0]second[2]}; lane=0; tested=4; found=0; failed=0; pruned=3; continued=1; target_checks=[(1, 3)];
stats:6 name=2s-xfnc{main[1]out[1]second[3]}; lane=0; tested=12; found=0; failed=0; pruned=11; continued=1; target_checks=[(1, 9), (2, 2)];
stats:7 name=2s-rnc{main[1]out[1]second[3]}; lane=0; tested=4; found=0; failed=0; pruned=3; continued=1; target_checks=[(1, 3)];
stats:8 name=identity; lane=0; tested=1; found=0; failed=0; pruned=0; continued=1; target_checks=[];
stats:9 name=(last); lane=0; tested=1; found=1; failed=0; pruned=0; continued=0; target_checks=[];
search:specs/swinv_like_big/l1/2d-stencil-5.json success=true; mode=All; time=0.051438543;
spec:specs/swinv_like/l2/1d-stencil.json
build:matrices/32-cond_keep-32,3 n_ones=9216; n_elems=9437184; in_slots=96; out_slots=32; density=0.0009765625; time=0.017926169;
Using newly-built matrices/32-cond_keep-32,3
build:matrices/32,3-col_rots_no_group-32,3 n_ones=294912; n_elems=84934656; in_slots=96; out_slots=96; density=0.003472222222222222; time=0.056229592;
mul_stats:: probes_success=[(1, 32768), (2, 32768), (3, 32768), (4, 32768), (5, 32768), (6, 32768), (7, 32768), (8, 32768), (9, 32768)]; probes_failure=[(9, 9142272)];
mul:matrices/32-cond_keep_32,3-col_rots_no_group-32,3 n_ones=294912; n_elems=9437184; in_slots=96; out_slots=32; density=0.03125; time=0.687296951;
build:matrices/32,3-col_xforms_no_group-32,3 n_ones=3702272; n_elems=84934656; in_slots=96; out_slots=96; density=0.043589650848765434; time=1.511997166;
mul_stats:: probes_success=[(1, 17408), (2, 32768), (3, 31744), (4, 557056), (5, 557056), (6, 557056), (7, 278528), (8, 301056), (9, 278528), (10, 3399200), (20, 384928), (30, 254304), (40, 156160), (50, 122528), (60, 129824), (70, 103072), (80, 138624), (90, 79776), (100, 702912), (200, 245408)]; probes_failure=[(200, 1109248)];
mul:matrices/32-cond_keep_32,3-col_rots_no_group_32,3-col_xforms_no_group-32,3 n_ones=8327936; n_elems=9437184; in_slots=96; out_slots=32; density=0.8824598524305556; time=3.449384708;
Begin search
solution:init;load_trunc;select(d0 > 1 - d1);xform(0,31,3);rot(2);keep_if(d0 = 0 + d0)
solution:init;load_trunc;select(d0 >= 0 + d1);xform(0,1,3);id;keep_if(d0 = 0 + d0)
stats:0 name=load_trunc; lane=0; tested=1; found=0; failed=0; pruned=0; continued=1; target_checks=[];
stats:1 name=reg_select; lane=0; tested=38; found=0; failed=0; pruned=36; continued=2; target_checks=[(1, 15), (3, 4), (6, 2), (9, 1), (40, 3), (90, 7), (4700, 4)];
stats:2 name=col_xforms_no_group; lane=0; tested=1984; found=0; failed=0; pruned=1982; continued=2; target_checks=[(1, 1922), (2, 60)];
stats:3 name=col_rots_no_group; lane=0; tested=64; found=0; failed=0; pruned=62; continued=2; target_checks=[(1, 62)];
stats:4 name=cond_keep; lane=0; tested=76; found=0; failed=56; pruned=0; continued=20; target_checks=[];
stats:5 name=(last); lane=0; tested=20; found=2; failed=18; pruned=0; continued=0; target_checks=[];
search:specs/swinv_like/l2/1d-stencil.json success=true; mode=All; time=0.014212188;
spec:specs/swinv_like/l2/2d-stencil-3.json
build:matrices/4,4-identity-4,4,3,3 n_ones=20736; n_elems=5308416; in_slots=144; out_slots=16; density=0.00390625; time=0.002586231;
Using newly-built matrices/4,4-identity-4,4,3,3
build:matrices/4,4,3,3-2s-rnc{main[1]out[1]second[3]}-4,4,3,3 n_ones=82944; n_elems=429981696; in_slots=144; out_slots=144; density=0.00019290123456790122; time=0.04546973;
mul_stats:: probes_success=[(1, 1024), (2, 1024), (3, 1024), (4, 1024), (5, 1024), (6, 1024), (7, 1024), (8, 1024), (9, 1024), (10, 10240), (20, 10240), (30, 10240), (40, 10240), (50, 10240), (60, 10240), (70, 10240), (80, 2048)]; probes_failure=[(80, 5225472)];
mul:matrices/4,4-identity_4,4,3,3-2s-rnc{main[1]out[1]second[3]}-4,4,3,3 n_ones=82944; n_elems=5308416; in_slots=144; out_slots=16; density=0.015625; time=2.749993773;
build:matrices/4,4,3,3-2s-xfnc{main[1]out[1]second[3]}-4,4,3,3 n_ones=131328; n_elems=429981696; in_slots=144; out_slots=144; density=0.0003054269547325103; time=0.07048594;
mul_stats:: probes_success=[(1, 512), (2, 1024), (3, 768), (4, 512), (5, 1024), (6, 768), (7, 512), (8, 1024), (9, 768), (10, 19456), (20, 11264), (30, 11520), (40, 16896), (50, 9984), (60, 15360), (70, 14336), (80, 17152), (90, 11520), (100, 103808), (200, 23040), (300, 3712)]; probes_failure=[(300, 5043456)];
mul:matrices/4,4-identity_4,4,3,3-2s-rnc{main[1]out[1]second[3]}_4,4,3,3-2s-xfnc{main[1]out[1]second[3]}-4,4,3,3 n_ones=264960; n_elems=5308416; in_slots=144; out_slots=16; density=0.04991319444444445; time=8.282653337;
build:matrices/4,4,3,3-2s-rnc{main[0]out[0]second[2]}-4,4,3,3 n_ones=82944; n_elems=429981696; in_slots=144; out_slots=144; density=0.00019290123456790122; time=0.044909173;
mul_stats:: probes_success=[(1, 264960), (2, 264960), (3, 264960), (4, 264960)]; probes_failure=[(4, 4248576)];
mul:matrices/4,4-identity_4,4,3,3-2s-rnc{main[1]out[1]second[3]}_4,4,3,3-2s-xfnc{main[1]out[1]second[3]}_4,4,3,3-2s-rnc{main[0]out[0]second[2]}-4,4,3,3 n_ones=1059840; n_elems=5308416; in_slots=144; out_slots=16; density=0.1996527777777778; time=3.957531513;
build:matrices/4,4,3,3-2s-xfnc{main[0]out[0]second[2]}-4,4,3,3 n_ones=131328; n_elems=429981696; in_slots=144; out_slots=144; density=0.0003054269547325103; time=0.071547941;
mul_stats:: probes_success=[(1, 1059840), (2, 964160), (3, 787520), (4, 441600), (5, 103040), (6, 29440)]; probes_failure=[(1, 29504), (2, 147584), (3, 413504), (4, 354816), (5, 206848), (6, 177408), (7, 118784), (8, 177920), (10, 237056), (12, 59392)];
mul:matrices/4,4-identity_4,4,3,3-2s-rnc{main[1]out[1]second[3]}_4,4,3,3-2s-xfnc{main[1]out[1]second[3]}_4,4,3,3-2s-rnc{main[0]out[0]second[2]}_4,4,3,3-2s-xfnc{main[0]out[0]second[2]}-4,4,3,3 n_ones=3385600; n_elems=5308416; in_slots=144; out_slots=16; density=0.6377797067901234; time=4.005539576;
build:matrices/4,4,3,3-2s-g{axis[3]dims[1|3]}-4,4,3,2 n_ones=79488; n_elems=191102976; in_slots=96; out_slots=144; density=0.00041594328703703704; time=0.114140903;
mul_stats:: probes_success=[(1, 1118720), (2, 765440)]; probes_failure=[(6, 59392), (9, 415744)];
mul:matrices/4,4-identity_4,4,3,3-2s-rnc{main[1]out[1]second[3]}_4,4,3,3-2s-xfnc{main[1]out[1]second[3]}_4,4,3,3-2s-rnc{main[0]out[0]second[2]}_4,4,3,3-2s-xfnc{main[0]out[0]second[2]}_4,4,3,3-2s-g{axis[3]dims[1|3]}-4,4,3,2 n_ones=1884160; n_elems=2359296; in_slots=96; out_slots=16; density=0.7986111111111112; time=1.7671922759999998;
Begin search
solution:init;id;load_grid_2d;select(d0 > 1 - d2, );select(d1 >= 0 + d3, );xform(0,3,3);rot(2);xform(0,1,3);id;id
solution:init;id;load_grid_2d;select(d0 > 1 - d2, );select(d1 > 1 - d3, );xform(0,3,3);rot(2);xform(0,3,3);rot(2);id
solution:init;id;load_grid_2d;select(d0 >= 0 + d2, );select(d1 >= 0 + d3, );xform(0,1,3);id;xform(0,1,3);id;id
solution:init;id;load_grid_2d;select(d0 >= 0 + d2, );select(d1 > 1 - d3, );xform(0,1,3);id;xform(0,3,3);rot(2);id
stats:0 name=reshape; lane=0; tested=1; found=0; failed=0; pruned=0; continued=1; target_checks=[];
stats:1 name=load_grid_2d; lane=0; tested=1; found=0; failed=0; pruned=0; continued=1; target_checks=[];
stats:2 name=2s-g{axis[2]dims[0|2]}; lane=0; tested=38; found=0; failed=0; pruned=36; continued=2; target_checks=[(1, 10), (10, 5), (30, 5), (70, 3), (100, 8), (10000, 5)];
stats:3 name=2s-g{axis[3]dims[1|3]}; lane=0; tested=76; found=0; failed=0; pruned=72; continued=4; target_checks=[(1, 30), (3, 10), (6, 6), (9, 12), (10, 4), (1200, 4), (1300, 6)];
stats:4 name=2s-xfnc{main[0]out[0]second[2]}; lane=0; tested=48; found=0; failed=0; pruned=44; continued=4; target_checks=[(10, 44)];
stats:5 name=2s-rnc{main[0]out[0]second[2]}; lane=0; tested=16; found=0; failed=0; pruned=12; continued=4; target_checks=[(1, 12)];
stats:6 name=2s-xfnc{main[1]out[1]second[3]}; lane=0; tested=48; found=0; failed=0; pruned=44; continued=4; target_checks=[(1, 36), (2, 8)];
stats:7 name=2s-rnc{main[1]out[1]second[3]}; lane=0; tested=16; found=0; failed=0; pruned=12; continued=4; target_checks=[(1, 12)];
stats:8 name=identity; lane=0; tested=4; found=0; failed=0; pruned=0; continued=4; target_checks=[];
stats:9 name=(last); lane=0; tested=4; found=4; failed=0; pruned=0; continued=0; target_checks=[];
search:specs/swinv_like/l2/2d-stencil-3.json success=true; mode=All; time=0.016815334;
spec:specs/swinv_like/l2/1d-conv.json
load:matrices/32-cond_keep-32,3 n_ones=9216; n_elems=9437184; in_slots=96; out_slots=32; density=0.0009765625; time=0.006115921;
load:matrices/32-cond_keep_32,3-col_rots_no_group-32,3 n_ones=294912; n_elems=9437184; in_slots=96; out_slots=32; density=0.03125; time=0.006139628;
load:matrices/32-cond_keep_32,3-col_rots_no_group_32,3-col_xforms_no_group-32,3 n_ones=8327936; n_elems=9437184; in_slots=96; out_slots=32; density=0.8824598524305556; time=0.006658113;
Begin search
solution:stack_fold[init;load_trunc;select(d0 >= 0 + d1);xform(0,1,3);id,init;broadcast;id];keep_if(d0 = 0 + d0)
stats:0 name=load_trunc; lane=0; tested=1; found=0; failed=0; pruned=0; continued=1; target_checks=[];
stats:1 name=broadcast; lane=1; tested=1; found=0; failed=0; pruned=0; continued=1; target_checks=[];
stats:2 name=identity; lane=1; tested=1; found=0; failed=0; pruned=0; continued=1; target_checks=[];
stats:3 name=reg_select; lane=0; tested=38; found=0; failed=0; pruned=36; continued=2; target_checks=[(1, 15), (3, 4), (6, 2), (9, 1), (40, 3), (90, 7), (4700, 4)];
stats:4 name=col_xforms_no_group; lane=0; tested=1984; found=0; failed=0; pruned=1982; continued=2; target_checks=[(1, 1922), (2, 60)];
stats:5 name=col_rots_no_group; lane=0; tested=64; found=0; failed=0; pruned=62; continued=2; target_checks=[(1, 62)];
stats:6 name=stack_folding; lane=0; tested=2; found=0; failed=1; pruned=0; continued=1; target_checks=[];
stats:7 name=cond_keep; lane=0; tested=38; found=0; failed=28; pruned=0; continued=10; target_checks=[];
stats:8 name=(last); lane=0; tested=10; found=1; failed=9; pruned=0; continued=0; target_checks=[];
search:specs/swinv_like/l2/1d-conv.json success=true; mode=All; time=0.027454478;
spec:specs/swinv_like/l2/mult-32-with-4.json
build:matrices/8-reshape-2,4 n_ones=64; n_elems=4096; in_slots=8; out_slots=8; density=0.015625; time=0.000013667;
Using newly-built matrices/8-reshape-2,4
build:matrices/2,4-transpose-4,2 n_ones=64; n_elems=4096; in_slots=8; out_slots=8; density=0.015625; time=0.000012162;
mul_stats:: probes_success=[(1, 64)]; probes_failure=[(1, 4032)];
mul:matrices/8-reshape_2,4-transpose-4,2 n_ones=64; n_elems=4096; in_slots=8; out_slots=8; density=0.015625; time=0.000205101;
build:matrices/4,2-cond_keep{restrict[1|1]}-4,2,4 n_ones=1024; n_elems=65536; in_slots=32; out_slots=8; density=0.015625; time=0.004227198;
mul_stats:: probes_success=[(1, 1024)]; probes_failure=[(1, 64512)];
mul:matrices/8-reshape_2,4-transpose_4,2-cond_keep{restrict[1|1]}-4,2,4 n_ones=1024; n_elems=65536; in_slots=32; out_slots=8; density=0.015625; time=0.001391693;
build:matrices/4,2,4-broadcast{group[1]}-4,4 n_ones=1024; n_elems=262144; in_slots=16; out_slots=32; density=0.00390625; time=0.000146337;
mul_stats:: probes_success=[(1, 64), (2, 64), (3, 64), (4, 64), (5, 64), (6, 64), (7, 64), (8, 64), (9, 64), (10, 448)]; probes_failure=[(10, 15360)];
mul:matrices/8-reshape_2,4-transpose_4,2-cond_keep{restrict[1|1]}_4,2,4-broadcast{group[1]}-4,4 n_ones=1024; n_elems=16384; in_slots=16; out_slots=8; density=0.0625; time=0.002322837;
build:matrices/4,4-rots_no_group{main[0]out[1]second[1]}-4,4 n_ones=1216; n_elems=65536; in_slots=16; out_slots=16; density=0.0185546875; time=0.000177796;
mul_stats:: probes_success=[(1, 304), (2, 48), (3, 48), (4, 48), (5, 48), (6, 48), (7, 48), (8, 48), (9, 48), (10, 336)]; probes_failure=[(10, 15360)];
mul:matrices/8-reshape_2,4-transpose_4,2-cond_keep{restrict[1|1]}_4,2,4-broadcast{group[1]}_4,4-rots_no_group{main[0]out[1]second[1]}-4,4 n_ones=1024; n_elems=16384; in_slots=16; out_slots=8; density=0.0625; time=0.001727333;
load:matrices/8-reshape_2,4-transpose_4,2-cond_keep{restrict[1|1]}_4,2,4-broadcast{group[1]}_4,4-rots_no_group{main[0]out[1]second[1]}-4,4 n_ones=1024; n_elems=16384; in_slots=16; out_slots=8; density=0.0625; time=0.000036584;
Begin search
solution:stack_fold[init;broadcast;xform(0,3,4);id,init;broadcast;id;id];broadcast;keep_if(d0 >= 0 + d2);keep_if(d0 < 0 + d2);tr;id
solution:stack_fold[init;broadcast;id;id,init;broadcast;xform(0,3,4);id];broadcast;keep_if(d0 >= 0 + d2);keep_if(d0 < 0 + d2);tr;id
stats:0 name=broadcast; lane=0; tested=1; found=0; failed=0; pruned=0; continued=1; target_checks=[];
stats:1 name=broadcast; lane=1; tested=1; found=0; failed=0; pruned=0; continued=1; target_checks=[];
stats:2 name=xforms_no_group{main[0]out[1]second[1]}; lane=0; tested=25; found=0; failed=0; pruned=15; continued=10; target_checks=[(1, 6), (2, 4), (3, 2), (4, 3)];
stats:3 name=rots_no_group{main[0]out[1]second[1]}; lane=0; tested=50; found=0; failed=0; pruned=40; continued=10; target_checks=[(1, 37), (2, 3)];
stats:4 name=xforms_no_group{main[0]out[1]second[1]}; lane=1; tested=250; found=0; failed=0; pruned=150; continued=100; target_checks=[(1, 60), (2, 40), (3, 20), (4, 30)];
stats:5 name=rots_no_group{main[0]out[1]second[1]}; lane=1; tested=500; found=0; failed=0; pruned=400; continued=100; target_checks=[(1, 370), (2, 30)];
stats:6 name=stack_folding; lane=0; tested=100; found=0; failed=0; pruned=98; continued=2; target_checks=[(1, 76), (2, 15), (3, 4), (4, 3)];
stats:7 name=broadcast{group[1]}; lane=0; tested=2; found=0; failed=0; pruned=0; continued=2; target_checks=[];
stats:8 name=cond_keep{restrict[1|0]}; lane=0; tested=88; found=0; failed=0; pruned=80; continued=8; target_checks=[(1, 54), (2, 10), (3, 4), (4, 5), (6, 2), (8, 3), (9, 1), (10, 1)];
stats:9 name=cond_keep{restrict[1|1]}; lane=0; tested=352; found=0; failed=342; pruned=8; continued=2; target_checks=[(4, 8)];
stats:10 name=transpose; lane=0; tested=2; found=0; failed=0; pruned=0; continued=2; target_checks=[];
stats:11 name=reshape; lane=0; tested=2; found=0; failed=0; pruned=0; continued=2; target_checks=[];
stats:12 name=(last); lane=0; tested=2; found=2; failed=0; pruned=0; continued=0; target_checks=[];
search:specs/swinv_like/l2/mult-32-with-4.json success=true; mode=All; time=0.005609061;
spec:specs/swinv_like/l3/trove-crc-3.json
build:matrices/32,3-row_rots-32,3 n_ones=27648; n_elems=84934656; in_slots=96; out_slots=96; density=0.0003255208333333333; time=0.006456785;
Using newly-built matrices/32,3-row_rots-32,3
build:matrices/32,3-row_xforms-32,3 n_ones=72485; n_elems=84934656; in_slots=96; out_slots=96; density=0.0008534207756136671; time=0.04308617;
mul_stats:: probes_success=[(1, 68775), (2, 11238), (3, 753)]; probes_failure=[(3, 84853890)];
mul:matrices/32,3-row_rots_32,3-row_xforms-32,3 n_ones=80766; n_elems=84934656; in_slots=96; out_slots=96; density=0.0009509192572699653; time=2.915216425;
build:matrices/32,3-col_rots-32,3 n_ones=384192; n_elems=84934656; in_slots=96; out_slots=96; density=0.004523383246527778; time=0.077007468;
mul_stats:: probes_success=[(1, 384192), (2, 384192), (3, 384192), (4, 381120), (5, 381120), (6, 381120), (7, 359736), (8, 359736), (9, 359736)]; probes_failure=[(3, 875520), (6, 4793040), (9, 75890952)];
mul:matrices/32,3-row_rots_32,3-row_xforms_32,3-col_rots-32,3 n_ones=3375144; n_elems=84934656; in_slots=96; out_slots=96; density=0.03973812527126736; time=5.385680623;
build:matrices/32,3-col_xforms-32,3 n_ones=3932773; n_elems=84934656; in_slots=96; out_slots=96; density=0.046303513609332804; time=1.9345239680000001;
mul_stats:: probes_success=[(1, 177573), (2, 291840), (3, 407910), (4, 3425997), (5, 3417264), (6, 3514089), (7, 3273585), (8, 3595782), (9, 3376077), (10, 24407607), (20, 8455137), (30, 4645029), (40, 1950741), (50, 1185891), (60, 1182921), (70, 981570), (80, 1122021), (90, 791880), (100, 6122928), (200, 2376411), (300, 817590), (400, 64524), (500, 1941)]; probes_failure=[(90, 875520), (100, 786432), (200, 1842984), (300, 4720554), (400, 1111362), (500, 11496)];
mul:matrices/32,3-row_rots_32,3-row_xforms_32,3-col_rots_32,3-col_xforms-32,3 n_ones=75586308; n_elems=84934656; in_slots=96; out_slots=96; density=0.8899348223650897; time=32.283167622;
mul_stats:: probes_success=[(1, 72507132), (2, 5272308)]; probes_failure=[(3, 7155216)];
mul:matrices/32,3-row_rots_32,3-row_xforms_32,3-col_rots_32,3-col_xforms_32,3-row_rots-32,3 n_ones=77779440; n_elems=84934656; in_slots=96; out_slots=96; density=0.9157562255859375; time=3.752499328;
Begin search
solution:init;load_rep;xform(2,1,32);id;xform(3,1,3);id;id;id
solution:init;load_rep;xform(0,1,32);rot(1);xform(3,31,3);rot(22);xform(2,0,32);rot(1)
stats:0 name=load_rep; lane=0; tested=1; found=0; failed=0; pruned=0; continued=1; target_checks=[];
stats:1 name=row_xforms; lane=0; tested=30; found=0; failed=0; pruned=28; continued=2; target_checks=[(1, 10), (2, 2), (9, 5), (10, 7), (30, 2), (50, 1), (90, 1)];
stats:2 name=row_rots; lane=0; tested=6; found=0; failed=0; pruned=4; continued=2; target_checks=[(1, 2), (90, 2)];
stats:3 name=col_xforms; lane=0; tested=2694; found=0; failed=0; pruned=2692; continued=2; target_checks=[(1, 2539), (2, 43), (3, 103), (4, 3), (8, 1), (10, 3)];
stats:4 name=col_rots; lane=0; tested=116; found=0; failed=0; pruned=114; continued=2; target_checks=[(1, 114)];
stats:5 name=row_xforms; lane=0; tested=60; found=0; failed=0; pruned=58; continued=2; target_checks=[(1, 30), (3, 20), (6, 2), (10, 2), (20, 2), (40, 2)];
stats:6 name=row_rots; lane=0; tested=6; found=0; failed=0; pruned=0; continued=6; target_checks=[];
stats:7 name=(last); lane=0; tested=6; found=2; failed=4; pruned=0; continued=0; target_checks=[];
search:specs/swinv_like/l3/trove-crc-3.json success=true; mode=All; time=0.025608086;
spec:specs/swinv_like/l3/trove-crc-1.json
build:matrices/32,1-row_rots-32,1 n_ones=1024; n_elems=1048576; in_slots=32; out_slots=32; density=0.0009765625; time=0.00013031;
Using newly-built matrices/32,1-row_rots-32,1
build:matrices/32,1-col_rots-32,1 n_ones=42688; n_elems=1048576; in_slots=32; out_slots=32; density=0.04071044921875; time=0.006883696;
mul_stats:: probes_success=[(1, 42688)]; probes_failure=[(1, 1005888)];
mul:matrices/32,1-row_rots_32,1-col_rots-32,1 n_ones=42688; n_elems=1048576; in_slots=32; out_slots=32; density=0.04071044921875; time=0.027962867;
Begin search
solution:init;load_rep;id;id;id;id;id;id
stats:0 name=load_rep; lane=0; tested=1; found=0; failed=0; pruned=0; continued=1; target_checks=[];
stats:1 name=row_xforms; lane=0; tested=1; found=0; failed=0; pruned=0; continued=1; target_checks=[];
stats:2 name=row_rots; lane=0; tested=1; found=0; failed=0; pruned=0; continued=1; target_checks=[];
stats:3 name=col_xforms; lane=0; tested=1; found=0; failed=0; pruned=0; continued=1; target_checks=[];
stats:4 name=col_rots; lane=0; tested=58; found=0; failed=0; pruned=57; continued=1; target_checks=[(1, 57)];
stats:5 name=row_xforms; lane=0; tested=1; found=0; failed=0; pruned=0; continued=1; target_checks=[];
stats:6 name=row_rots; lane=0; tested=1; found=0; failed=0; pruned=0; continued=1; target_checks=[];
stats:7 name=(last); lane=0; tested=1; found=1; failed=0; pruned=0; continued=0; target_checks=[];
search:specs/swinv_like/l3/trove-crc-1.json success=true; mode=All; time=0.000304844;
spec:specs/swinv_like/l3/trove-crc-4.json
build:matrices/32,4-row_rots-32,4 n_ones=73728; n_elems=268435456; in_slots=128; out_slots=128; density=0.000274658203125; time=0.030888823;
Using newly-built matrices/32,4-row_rots-32,4
build:matrices/32,4-row_xforms-32,4 n_ones=235114; n_elems=268435456; in_slots=128; out_slots=128; density=0.0008758679032325745; time=0.218451375;
mul_stats:: probes_success=[(1, 223168), (2, 29712), (3, 4434), (4, 957), (5, 325)]; probes_failure=[(4, 134089168), (5, 134087692)];
mul:matrices/32,4-row_rots_32,4-row_xforms-32,4 n_ones=258596; n_elems=268435456; in_slots=128; out_slots=128; density=0.0009633451700210571; time=11.111903431;
build:matrices/32,4-col_rots-32,4 n_ones=683008; n_elems=268435456; in_slots=128; out_slots=128; density=0.002544403076171875; time=0.216972933;
mul_stats:: probes_success=[(1, 683008), (2, 683008), (3, 683008), (4, 683008), (5, 678912), (6, 678912), (7, 678912), (8, 678912), (9, 678784), (10, 4685568)]; probes_failure=[(4, 2080768), (8, 64512), (10, 255478144)];
mul:matrices/32,4-row_rots_32,4-row_xforms_32,4-col_rots-32,4 n_ones=10812032; n_elems=268435456; in_slots=128; out_slots=128; density=0.040277957916259766; time=26.418192705;
build:matrices/32,4-col_xforms-32,4 n_ones=10343153; n_elems=268435456; in_slots=128; out_slots=128; density=0.03853124752640724; time=9.290944766;
mul_stats:: probes_success=[(1, 9347448), (2, 9309424), (3, 10073904), (4, 10439840), (5, 10362496), (6, 10522736), (7, 10254976), (8, 10338336), (9, 9843120), (10, 9690000), (11, 9193000), (12, 8909816), (13, 8517616), (14, 8244576), (15, 7811168), (16, 7935040), (17, 6731840), (18, 6158880), (19, 6062344), (20, 5498952), (21, 5357080), (22, 4977208), (23, 4608746), (24, 4299190), (25, 4159176), (26, 3715764), (27, 3665769), (28, 2927914), (29, 3223214), (30, 2925948), (31, 2703451), (32, 2374878), (33, 1570966), (34, 1171032), (35, 1344520), (36, 1388848), (37, 1098224), (38, 883160), (39, 1215040), (40, 873592), (41, 1116032), (42, 849968), (43, 958768), (44, 720848), (45, 1057856), (46, 744448), (47, 839328), (48, 499600), (49, 605872), (50, 481680), (51, 437968), (52, 348768), (53, 289376), (54, 269440), (55, 430176), (56, 242256), (57, 128864), (58, 85296), (59, 90688), (60, 90880), (61, 88992), (62, 24096), (63, 96864), (64, 81344), (65, 76768), (66, 99648), (67, 205280), (68, 83456), (69, 39200), (70, 116768), (71, 123520), (72, 85152), (73, 96320), (74, 73824), (75, 62976), (76, 142464), (77, 14880), (78, 45376), (79, 7904), (80, 65600), (81, 113472), (82, 19392), (83, 26144), (84, 94368), (85, 49632), (86, 104416), (87, 11520), (88, 56672), (89, 43424), (90, 26048), (91, 108800), (92, 30304), (93, 80352), (94, 10656), (95, 38976), (96, 51424), (97, 50464), (98, 70784), (99, 85184), (100, 26784), (101, 99328), (102, 27520), (103, 20032), (104, 14144), (105, 18944), (106, 55424), (107, 47904), (108, 9760), (109, 112448), (110, 11840), (111, 26496), (112, 78720), (113, 16032), (114, 2432), (115, 29824), (116, 2880), (117, 39424), (118, 3584), (119, 26528), (120, 68096), (121, 100992), (122, 4576), (123, 48896), (124, 19808), (125, 53856), (126, 12224), (127, 18368), (128, 20576), (129, 88384), (130, 31360), (131, 32384), (132, 5440), (133, 11712), (134, 56896), (135, 16096), (136, 29696), (137, 61216), (138, 15680), (139, 65184), (140, 14880), (141, 64640), (142, 59616), (143, 23936), (144, 15616), (145, 110304), (146, 31008), (147, 36736), (148, 5184), (149, 20352), (150, 832), (151, 73216), (152, 3552), (153, 8736), (154, 73344), (155, 54560), (156, 87360), (157, 36064), (158, 37376), (159, 32544), (160, 30240), (161, 21184), (162, 27776), (163, 2688), (164, 9056), (165, 6944), (166, 19168), (167, 13664), (168, 6848), (169, 37120), (170, 11968), (171, 11296), (172, 44384), (173, 2432), (174, 19168), (175, 6848), (176, 9152), (177, 35232), (178, 21824), (179, 25856), (180, 3744), (181, 10176), (182, 7168), (183, 10848), (184, 5312), (185, 72640), (186, 5024), (187, 5696), (188, 29920), (189, 16256), (190, 11456), (191, 1440), (192, 5088), (193, 23712), (194, 22688), (195, 16896), (196, 2240), (197, 52416), (198, 9728), (199, 17696), (200, 1888), (201, 47328), (202, 3488), (203, 20640), (204, 3232), (205, 1632), (206, 3424), (207, 39776), (208, 3232), (209, 79584), (210, 40288), (211, 52032), (212, 3360), (213, 38784), (214, 26656), (215, 15744), (217, 21216), (218, 3936), (219, 18080), (220, 7008), (221, 1920), (222, 8832), (223, 28224), (224, 1984), (225, 86816), (226, 29344), (227, 30752), (228, 1536), (229, 25952), (230, 31040), (231, 27456), (232, 2432), (233, 22944), (234, 19616), (235, 16160), (236, 24256), (237, 25472), (238, 8800), (239, 23456), (240, 12480), (241, 105984), (242, 13248), (243, 26112), (244, 4416), (245, 7392), (246, 6784), (247, 48288), (248, 64768), (249, 53824), (250, 55136), (251, 3840), (252, 22784), (253, 1248), (254, 3040), (255, 43392), (256, 11328), (257, 15168), (258, 1728), (259, 30720), (260, 1728), (261, 25824), (262, 1216), (263, 13024), (264, 704), (265, 16480), (266, 8736), (267, 70848), (268, 1024), (269, 22656), (270, 34240), (271, 16544), (272, 1248), (273, 30432), (274, 22880), (275, 33696), (276, 4384), (277, 34432), (278, 17184), (279, 61728), (280, 13824), (281, 36864), (282, 18048), (283, 59904), (284, 34464), (285, 74464), (286, 74176), (287, 17152), (288, 34528), (289, 84448), (290, 13920), (291, 59200), (292, 38272), (293, 3072), (294, 12192), (295, 27904), (296, 28896), (297, 7008), (298, 36000), (299, 40512), (300, 4032), (301, 83328), (302, 12000), (303, 9696), (304, 32832), (305, 9024), (306, 20736), (307, 57792), (308, 17856), (309, 4896), (310, 960), (311, 1920), (312, 19104), (313, 3744), (314, 3168), (315, 19776), (316, 20544), (317, 28800), (318, 3456), (319, 12096), (320, 18240), (321, 3456), (322, 10080), (323, 15744), (324, 8928), (325, 14496), (326, 4992), (327, 9696), (328, 4224), (329, 5568), (330, 13152), (331, 5472), (332, 10944), (333, 4896), (334, 30336), (335, 15552), (336, 3456), (337, 13920), (338, 19488), (339, 6144), (340, 20256), (341, 12672), (342, 24768), (343, 6048), (344, 27360), (345, 6720), (346, 11232), (347, 576), (348, 2688), (349, 4608), (350, 4608), (351, 2976), (352, 768), (353, 18624), (354, 9696), (355, 3840), (356, 3264), (357, 17952), (358, 13248), (359, 22752), (360, 11136), (361, 55680), (362, 96), (363, 28800), (364, 24768), (365, 10176), (366, 47904), (367, 4896), (368, 1920), (369, 21312), (370, 2688), (371, 3264), (372, 3840), (373, 9696), (374, 5376), (375, 13344), (376, 1536), (377, 24864), (378, 4320), (379, 15552), (380, 96), (381, 11520), (383, 5088), (384, 1152), (385, 7680), (387, 5280), (388, 288), (389, 768), (390, 2496), (391, 5856), (392, 2208), (393, 2688), (394, 11904), (395, 1536), (396, 864), (397, 6528), (399, 960), (400, 4704), (401, 23328), (402, 2496), (403, 1920), (404, 1728), (405, 1248), (406, 2112), (407, 4992), (408, 4416), (410, 4992), (411, 8736), (412, 960), (413, 1536), (414, 192), (415, 1344), (416, 192), (417, 13440), (418, 4128), (419, 6720), (420, 1920), (421, 11232), (422, 768), (423, 1632), (424, 3264), (425, 7392), (426, 2304), (427, 3168), (428, 9600), (429, 4896), (431, 4608), (433, 3072), (434, 7104), (435, 7872), (436, 672), (437, 20064), (439, 1248), (440, 384), (441, 16896), (442, 1248), (443, 11232), (445, 2592), (446, 9312), (447, 11808), (448, 3456), (449, 5952), (450, 1536), (451, 7680), (452, 9216), (453, 576), (454, 96), (456, 5376), (457, 15744), (458, 576), (459, 2304), (460, 12096), (461, 23712), (462, 2112), (463, 6816), (464, 576), (465, 12480), (466, 3456), (467, 25632), (468, 384), (469, 1248), (470, 8160), (472, 384), (473, 5088), (474, 1248), (476, 2304), (477, 10560), (478, 23136), (479, 384), (480, 11328), (481, 13440), (482, 1632), (483, 6816), (484, 192), (485, 6240), (486, 4800), (487, 576), (488, 5376), (489, 7488), (490, 10368), (491, 6336), (492, 2688), (493, 6720), (494, 4032), (495, 15360), (496, 1440), (498, 1920), (499, 12096), (500, 9024), (501, 30720), (502, 2880), (503, 96), (504, 2400), (506, 5760), (507, 96), (508, 3552), (509, 192), (510, 1152), (511, 96), (514, 4704), (516, 480), (517, 1248), (518, 10656), (521, 480), (522, 5760), (523, 3456), (525, 288), (526, 3936), (527, 1152), (528, 480), (529, 27840), (531, 9792), (532, 192), (533, 3456), (534, 192), (535, 3360), (536, 7488), (537, 24768), (538, 576), (539, 96), (541, 16896), (542, 1248), (543, 960), (544, 1440), (545, 36672), (547, 6432), (549, 1056), (550, 16128), (551, 9216), (552, 1344), (553, 18432), (555, 6912), (556, 2784), (557, 14976), (558, 8736), (559, 96), (560, 5664), (561, 1536), (562, 3648), (563, 2304), (564, 3456), (567, 768), (568, 672), (569, 17280), (571, 2880), (572, 864), (573, 8256), (575, 4608), (576, 768), (577, 3744), (580, 96), (581, 1536), (582, 3072), (583, 6912), (584, 5664), (585, 15168), (586, 13248), (587, 4992), (588, 2304), (589, 4224), (590, 480), (591, 5952), (593, 7776), (594, 5472), (595, 4896), (598, 4800), (599, 768), (600, 96), (601, 8640), (603, 96), (605, 1440), (606, 96), (607, 6432), (608, 384), (609, 1152), (610, 5376), (611, 4032), (612, 672), (613, 1536), (617, 16128), (619, 96), (621, 8064), (625, 384), (631, 96), (633, 2688), (634, 96), (641, 2688), (691, 384)]; probes_failure=[(1, 16256), (5, 43072), (9, 38400), (11, 36352), (12, 66080), (14, 32384), (16, 62624), (17, 61824), (18, 166272), (19, 136768), (20, 110528), (21, 121088), (22, 165344), (23, 216768), (24, 24000), (25, 44480), (26, 41472), (28, 43040), (29, 186752), (30, 169792), (31, 231712), (32, 1774592), (33, 136576), (34, 103680), (35, 199040), (36, 190624), (37, 269504), (38, 280384), (39, 164480), (40, 287200), (41, 307968), (42, 295040), (43, 350176), (44, 243296), (45, 402496), (46, 342528), (47, 214656), (48, 177760), (49, 40832), (160, 1058240), (288, 634304), (320, 284096), (336, 242688), (448, 32192), (472, 107520), (480, 138240), (496, 32192), (512, 162304), (520, 100544), (528, 34560), (536, 30720), (544, 64384), (552, 50624), (576, 64384), (592, 32192), (596, 270336), (608, 414208), (610, 570240), (612, 204288), (616, 688832), (618, 69504), (620, 156288), (622, 130560), (623, 488), (624, 64384), (626, 488), (628, 360576), (630, 250856), (632, 240768), (634, 136704), (636, 599040), (638, 12776), (640, 624128), (641, 488), (642, 38608), (643, 768), (645, 488), (646, 976), (647, 976), (648, 488), (649, 976), (650, 78336), (651, 744), (652, 261120), (653, 256), (654, 37840), (655, 744), (656, 24400), (657, 1464), (659, 1232), (660, 488), (661, 976), (662, 744), (663, 488), (664, 253560), (665, 1232), (666, 1976), (667, 1744), (668, 25808), (669, 744), (670, 976), (671, 1238), (672, 34406), (673, 774), (674, 780), (675, 1232), (676, 42216), (677, 2208), (678, 1488), (679, 518), (680, 88844), (681, 1786), (682, 256), (683, 262), (684, 488), (685, 518), (686, 524), (687, 1268), (688, 101062), (689, 524), (691, 524), (692, 29952), (694, 786), (696, 1006), (697, 488), (698, 256), (700, 524), (701, 518), (702, 750), (704, 64640), (705, 262), (706, 3214), (707, 1464), (708, 135120), (709, 1024), (710, 2732), (711, 2494), (712, 39662), (713, 1756), (714, 1464), (715, 1518), (716, 21730), (717, 1500), (718, 1792), (719, 750), (720, 3000), (721, 3018), (722, 2762), (723, 3244), (724, 3530), (725, 1560), (726, 2214), (727, 1292), (728, 34734), (729, 1792), (730, 1524), (731, 1036), (732, 17932), (733, 2006), (734, 2036), (735, 1988), (736, 64646), (737, 256), (738, 1298), (739, 780), (740, 518), (741, 774), (742, 774), (743, 518), (744, 262), (745, 256), (746, 524), (748, 262), (749, 262), (750, 518), (751, 256), (752, 518), (753, 786), (755, 518), (756, 262), (757, 262), (758, 524), (759, 780), (760, 1536), (761, 256), (762, 1548), (763, 1006), (764, 774), (765, 780), (766, 1816), (767, 1036), (768, 524), (769, 2066), (770, 744), (771, 256), (772, 9716), (773, 750), (774, 780), (775, 1786), (776, 1494), (777, 2054), (778, 2536), (779, 2048), (780, 1036), (781, 1828), (782, 1042), (783, 2280), (784, 1988), (785, 1560), (786, 780), (787, 2036), (788, 2048), (789, 4126), (790, 3530), (791, 3810), (792, 1036), (793, 2560), (794, 3822), (795, 3054), (796, 2536), (797, 3054), (798, 1756), (799, 1786), (800, 4506), (801, 2268), (802, 2208), (803, 2756), (804, 5934), (805, 4768), (806, 2756), (807, 3756), (808, 3952), (809, 2262), (810, 3018), (811, 4500), (812, 3750), (813, 4274), (814, 3548), (815, 6548), (816, 5512), (817, 6096), (818, 6286), (819, 3542), (820, 4762), (821, 6358), (822, 2524), (823, 4238), (824, 5286), (825, 5458), (826, 7636), (827, 6678), (828, 4732), (829, 6268), (830, 6494), (831, 6018), (832, 7500), (833, 7280), (834, 8256), (835, 7208), (836, 9060), (837, 8524), (838, 7048), (839, 7560), (840, 6316), (841, 7554), (842, 6048), (843, 5048), (844, 9798), (845, 11096), (846, 9060), (847, 8512), (848, 10638), (849, 11120), (850, 13280), (851, 10846), (852, 14988), (853, 12852), (854, 18262), (855, 17786), (856, 17060), (857, 10828), (858, 11430), (859, 14322), (860, 16268), (861, 14074), (862, 18870), (863, 12942), (864, 13144), (865, 12764), (866, 15674), (867, 12472), (868, 12924), (869, 10656), (870, 11328), (871, 9370), (872, 14614), (873, 9174), (874, 7006), (875, 8584), (876, 8512), (877, 10232), (878, 10352), (879, 9280), (880, 7780), (881, 7822), (882, 6572), (883, 5030), (884, 9422), (885, 8762), (886, 8994), (887, 6524), (888, 7494), (889, 6298), (890, 6196), (891, 6738), (892, 7220), (893, 2762), (894, 6000), (895, 5268), (896, 8440), (897, 4786), (898, 5946), (899, 6274), (900, 3702), (901, 4202), (902, 1952), (903, 2238), (904, 2756), (905, 1268), (906, 262), (907, 976), (908, 1238), (909, 1726), (910, 262), (913, 262), (914, 256), (915, 262), (916, 524), (917, 262), (920, 488), (921, 488), (922, 488), (923, 1488), (924, 488), (925, 512), (926, 1238), (928, 256), (929, 256), (931, 256)];
mul:matrices/32,4-row_rots_32,4-row_xforms_32,4-col_rots_32,4-col_xforms-32,4 n_ones=250363968; n_elems=268435456; in_slots=128; out_slots=128; density=0.9326784610748291; time=73.549210446;
mul_stats:: probes_success=[(1, 241681664), (2, 12095232), (3, 8192)]; probes_failure=[(4, 13601792), (5, 1048576)];
mul:matrices/32,4-row_rots_32,4-row_xforms_32,4-col_rots_32,4-col_xforms_32,4-row_rots-32,4 n_ones=253785088; n_elems=268435456; in_slots=128; out_slots=128; density=0.9454231262207031; time=24.280268237;
Begin search
stats:0 name=load_rep; lane=0; tested=1; found=0; failed=0; pruned=0; continued=1; target_checks=[];
stats:1 name=row_xforms; lane=0; tested=77; found=0; failed=0; pruned=74; continued=3; target_checks=[(1, 22), (2, 20), (3, 5), (10, 3), (30, 12), (50, 3), (60, 3), (70, 3), (3800, 3)];
stats:2 name=row_rots; lane=0; tested=15; found=0; failed=0; pruned=10; continued=5; target_checks=[(2, 2), (3, 2), (30, 2), (100, 3), (400, 1)];
stats:3 name=col_xforms; lane=0; tested=13580; found=0; failed=0; pruned=13580; continued=0; target_checks=[(1, 12910), (2, 531), (3, 64), (4, 69), (8, 2), (10, 2), (30, 2)];
stats:4 name=col_rots; lane=0; tested=0; found=0; failed=0; pruned=0; continued=0; target_checks=[];
stats:5 name=row_xforms; lane=0; tested=0; found=0; failed=0; pruned=0; continued=0; target_checks=[];
stats:6 name=row_rots; lane=0; tested=0; found=0; failed=0; pruned=0; continued=0; target_checks=[];
stats:7 name=(last); lane=0; tested=0; found=0; failed=0; pruned=0; continued=0; target_checks=[];
search:specs/swinv_like/l3/trove-crc-4.json success=false; mode=All; time=0.149648734;
spec:specs/swinv_like/l3/1d-stencil.json
load:matrices/32-cond_keep-32,3 n_ones=9216; n_elems=9437184; in_slots=96; out_slots=32; density=0.0009765625; time=0.00722411;
load:matrices/32,3-col_rots-32,3 n_ones=384192; n_elems=84934656; in_slots=96; out_slots=96; density=0.004523383246527778; time=0.070159543;
mul_stats:: probes_success=[(1, 42688), (2, 42688), (3, 42688), (4, 42688), (5, 42688), (6, 42688), (7, 42688), (8, 42688), (9, 42688)]; probes_failure=[(9, 9052992)];
mul:matrices/32-cond_keep_32,3-col_rots-32,3 n_ones=384192; n_elems=9437184; in_slots=96; out_slots=32; density=0.04071044921875; time=0.687990906;
load:matrices/32,3-col_xforms-32,3 n_ones=3932773; n_elems=84934656; in_slots=96; out_slots=96; density=0.046303513609332804; time=0.064720757;
mul_stats:: probes_success=[(1, 19069), (2, 32768), (3, 31984), (4, 379955), (5, 381978), (6, 393395), (7, 352104), (8, 380626), (9, 358217), (10, 2886001), (20, 957882), (30, 528658), (40, 220098), (50, 130409), (60, 131977), (70, 109154), (80, 128849), (90, 89043), (100, 686131), (200, 270349), (300, 95330), (400, 7638), (500, 245)]; probes_failure=[(200, 203776), (300, 525446), (400, 134570), (500, 1532)];
mul:matrices/32-cond_keep_32,3-col_rots_32,3-col_xforms-32,3 n_ones=8571860; n_elems=9437184; in_slots=96; out_slots=32; density=0.9083069695366753; time=3.659566105;
Begin search
solution:init;load_trunc;select(d0 > 1 - d1);xform(0,31,3);rot(2);keep_if(d0 = 0 + d0)
solution:init;load_trunc;select(d0 >= 0 + d1);xform(0,1,3);id;keep_if(d0 = 0 + d0)
stats:0 name=load_trunc; lane=0; tested=1; found=0; failed=0; pruned=0; continued=1; target_checks=[];
stats:1 name=reg_select; lane=0; tested=38; found=0; failed=0; pruned=36; continued=2; target_checks=[(1, 15), (3, 4), (6, 2), (9, 1), (40, 3), (90, 7), (4700, 4)];
stats:2 name=col_xforms; lane=0; tested=2694; found=0; failed=0; pruned=2692; continued=2; target_checks=[(1, 2539), (2, 145), (3, 2), (9, 1), (20, 1), (40, 1), (300, 1), (1300, 1), (3000, 1)];
stats:3 name=col_rots; lane=0; tested=116; found=0; failed=0; pruned=114; continued=2; target_checks=[(1, 111), (5, 1), (10, 1), (40, 1)];
stats:4 name=cond_keep; lane=0; tested=76; found=0; failed=56; pruned=0; continued=20; target_checks=[];
stats:5 name=(last); lane=0; tested=20; found=2; failed=18; pruned=0; continued=0; target_checks=[];
search:specs/swinv_like/l3/1d-stencil.json success=true; mode=All; time=0.018052971;
spec:specs/swinv_like/l3/2d-stencil-3.json
load:matrices/4,4-identity-4,4,3,3 n_ones=20736; n_elems=5308416; in_slots=144; out_slots=16; density=0.00390625; time=0.003445238;
build:matrices/4,4,3,3-2s-r{main[1]out[1]second[3]}-4,4,3,3 n_ones=93312; n_elems=429981696; in_slots=144; out_slots=144; density=0.00021701388888888888; time=0.050441029;
mul_stats:: probes_success=[(1, 1152), (2, 1152), (3, 1152), (4, 1152), (5, 1152), (6, 1152), (7, 1152), (8, 1152), (9, 1152), (10, 11520), (20, 11520), (30, 11520), (40, 11520), (50, 11520), (60, 11520), (70, 11520), (80, 2304)]; probes_failure=[(80, 5215104)];
mul:matrices/4,4-identity_4,4,3,3-2s-r{main[1]out[1]second[3]}-4,4,3,3 n_ones=93312; n_elems=5308416; in_slots=144; out_slots=16; density=0.017578125; time=2.722815384;
build:matrices/4,4,3,3-2s-xf{main[1]out[1]second[3]}-4,4,3,3 n_ones=135648; n_elems=429981696; in_slots=144; out_slots=144; density=0.0003154738940329218; time=0.076834349;
mul_stats:: probes_success=[(1, 528), (2, 1024), (3, 800), (4, 528), (5, 1024), (6, 800), (7, 528), (8, 1024), (9, 800), (10, 17520), (20, 13328), (30, 10736), (40, 16224), (50, 9504), (60, 14000), (70, 15504), (80, 15936), (90, 11328), (100, 100688), (200, 26256), (300, 9120), (400, 640)]; probes_failure=[(300, 2529792), (400, 2510784)];
mul:matrices/4,4-identity_4,4,3,3-2s-r{main[1]out[1]second[3]}_4,4,3,3-2s-xf{main[1]out[1]second[3]}-4,4,3,3 n_ones=267840; n_elems=5308416; in_slots=144; out_slots=16; density=0.050455729166666664; time=9.240864482;
build:matrices/4,4,3,3-2s-r{main[0]out[0]second[2]}-4,4,3,3 n_ones=93312; n_elems=429981696; in_slots=144; out_slots=144; density=0.00021701388888888888; time=0.049708103;
mul_stats:: probes_success=[(1, 267840), (2, 267840), (3, 267840), (4, 267840), (5, 133920)]; probes_failure=[(4, 2118528), (5, 1984608)];
mul:matrices/4,4-identity_4,4,3,3-2s-r{main[1]out[1]second[3]}_4,4,3,3-2s-xf{main[1]out[1]second[3]}_4,4,3,3-2s-r{main[0]out[0]second[2]}-4,4,3,3 n_ones=1205280; n_elems=5308416; in_slots=144; out_slots=16; density=0.22705078125; time=3.970197638;
build:matrices/4,4,3,3-2s-xf{main[0]out[0]second[2]}-4,4,3,3 n_ones=135648; n_elems=429981696; in_slots=144; out_slots=144; density=0.0003154738940329218; time=0.082285919;
mul_stats:: probes_success=[(1, 1251780), (2, 969060), (3, 680760), (4, 451980), (5, 102300), (7, 3720)]; probes_failure=[(1, 29424), (2, 143064), (3, 398424), (4, 341616), (5, 196848), (6, 167088), (7, 14208), (8, 214464), (9, 56832), (10, 173184), (11, 56832), (12, 56832)];
mul:matrices/4,4-identity_4,4,3,3-2s-r{main[1]out[1]second[3]}_4,4,3,3-2s-xf{main[1]out[1]second[3]}_4,4,3,3-2s-r{main[0]out[0]second[2]}_4,4,3,3-2s-xf{main[0]out[0]second[2]}-4,4,3,3 n_ones=3459600; n_elems=5308416; in_slots=144; out_slots=16; density=0.6517198350694444; time=3.963846934;
load:matrices/4,4,3,3-2s-g{axis[3]dims[1|3]}-4,4,3,2 n_ones=79488; n_elems=191102976; in_slots=96; out_slots=144; density=0.00041594328703703704; time=0.126340004;
mul_stats:: probes_success=[(1, 1160640), (2, 744000)]; probes_failure=[(6, 56832), (9, 397824)];
mul:matrices/4,4-identity_4,4,3,3-2s-r{main[1]out[1]second[3]}_4,4,3,3-2s-xf{main[1]out[1]second[3]}_4,4,3,3-2s-r{main[0]out[0]second[2]}_4,4,3,3-2s-xf{main[0]out[0]second[2]}_4,4,3,3-2s-g{axis[3]dims[1|3]}-4,4,3,2 n_ones=1904640; n_elems=2359296; in_slots=96; out_slots=16; density=0.8072916666666666; time=1.75598397;
Begin search
solution:init;id;load_grid_2d;select(d0 > 1 - d2, );select(d1 >= 0 + d3, );xform(0,3,3);rot(2);xform(0,1,3);id;id
solution:init;id;load_grid_2d;select(d0 > 1 - d2, );select(d1 > 1 - d3, );xform(0,3,3);rot(2);xform(0,3,3);rot(2);id
solution:init;id;load_grid_2d;select(d0 >= 0 + d2, );select(d1 >= 0 + d3, );xform(0,1,3);id;xform(0,1,3);id;id
solution:init;id;load_grid_2d;select(d0 >= 0 + d2, );select(d1 > 1 - d3, );xform(0,1,3);id;xform(0,3,3);rot(2);id
stats:0 name=reshape; lane=0; tested=1; found=0; failed=0; pruned=0; continued=1; target_checks=[];
stats:1 name=load_grid_2d; lane=0; tested=1; found=0; failed=0; pruned=0; continued=1; target_checks=[];
stats:2 name=2s-g{axis[2]dims[0|2]}; lane=0; tested=38; found=0; failed=0; pruned=36; continued=2; target_checks=[(1, 10), (10, 5), (30, 5), (70, 3), (100, 8), (10000, 5)];
stats:3 name=2s-g{axis[3]dims[1|3]}; lane=0; tested=76; found=0; failed=0; pruned=72; continued=4; target_checks=[(1, 30), (3, 10), (6, 6), (9, 12), (10, 4), (1200, 4), (1300, 6)];
stats:4 name=2s-xf{main[0]out[0]second[2]}; lane=0; tested=56; found=0; failed=0; pruned=52; continued=4; target_checks=[(10, 48), (30, 4)];
stats:5 name=2s-r{main[0]out[0]second[2]}; lane=0; tested=20; found=0; failed=0; pruned=16; continued=4; target_checks=[(1, 16)];
stats:6 name=2s-xf{main[1]out[1]second[3]}; lane=0; tested=56; found=0; failed=0; pruned=52; continued=4; target_checks=[(1, 36), (2, 12), (3, 4)];
stats:7 name=2s-r{main[1]out[1]second[3]}; lane=0; tested=20; found=0; failed=0; pruned=16; continued=4; target_checks=[(1, 16)];
stats:8 name=identity; lane=0; tested=4; found=0; failed=0; pruned=0; continued=4; target_checks=[];
stats:9 name=(last); lane=0; tested=4; found=4; failed=0; pruned=0; continued=0; target_checks=[];
search:specs/swinv_like/l3/2d-stencil-3.json success=true; mode=All; time=0.016018846;
spec:specs/swinv_like/l3/trove-rcr-3.json
load:matrices/32,3-col_rots-32,3 n_ones=384192; n_elems=84934656; in_slots=96; out_slots=96; density=0.004523383246527778; time=0.064199682;
load:matrices/32,3-col_xforms-32,3 n_ones=3932773; n_elems=84934656; in_slots=96; out_slots=96; density=0.046303513609332804; time=0.067522124;
mul_stats:: probes_success=[(1, 2808504), (2, 2447415), (3, 1032157), (4, 371860), (5, 202360), (6, 129491), (7, 127578), (8, 105780), (9, 107758), (10, 741057), (20, 305875), (30, 159592), (40, 29828), (50, 2605)]; probes_failure=[(30, 20351786), (40, 50081032), (50, 5929978)];
mul:matrices/32,3-col_rots_32,3-col_xforms-32,3 n_ones=8571860; n_elems=84934656; in_slots=96; out_slots=96; density=0.10092299661518615; time=17.239133538;
load:matrices/32,3-row_rots-32,3 n_ones=27648; n_elems=84934656; in_slots=96; out_slots=96; density=0.0003255208333333333; time=0.060247008;
mul_stats:: probes_success=[(1, 8224260), (2, 8826480), (3, 8664840)]; probes_failure=[(3, 59219076)];
mul:matrices/32,3-col_rots_32,3-col_xforms_32,3-row_rots-32,3 n_ones=25715580; n_elems=84934656; in_slots=96; out_slots=96; density=0.30276898984555844; time=4.112134103;
load:matrices/32,3-row_xforms-32,3 n_ones=72485; n_elems=84934656; in_slots=96; out_slots=96; density=0.0008534207756136671; time=0.06017479;
mul_stats:: probes_success=[(1, 22958443), (2, 27303751), (3, 24400042), (4, 1077882)]; probes_failure=[(1, 9120), (2, 144244), (3, 922746), (4, 473632), (5, 140004), (6, 2540712), (7, 63090), (8, 33478), (9, 4867512)];
mul:matrices/32,3-col_rots_32,3-col_xforms_32,3-row_rots_32,3-row_xforms-32,3 n_ones=75740118; n_elems=84934656; in_slots=96; out_slots=96; density=0.8917457439281322; time=4.336171821;
load:matrices/32,3-col_rots-32,3 n_ones=384192; n_elems=84934656; in_slots=96; out_slots=96; density=0.004523383246527778; time=0.060113696;
mul_stats:: probes_success=[(1, 74673552), (2, 1990038), (3, 862464), (4, 209214), (5, 462048), (6, 82338), (7, 145500), (8, 88722), (9, 285426), (10, 105642), (11, 75420), (12, 39534), (13, 95334), (14, 45006), (15, 79014), (16, 46824), (17, 182514), (18, 186840), (19, 50868), (20, 43062), (21, 38502), (22, 23088), (23, 27690), (24, 22542), (25, 43722), (26, 33060), (27, 33084), (28, 26292), (29, 32514), (30, 21768), (31, 38580), (32, 19920), (33, 32574), (34, 24324), (35, 21474), (36, 17052), (37, 9570), (38, 1188), (39, 16782), (40, 4908), (41, 5874), (42, 270), (43, 3510), (44, 4188), (45, 918), (46, 2526), (47, 3186), (50, 312), (51, 1680), (54, 90), (55, 36)]; probes_failure=[(32, 2042496), (36, 219180), (38, 147828), (40, 847872), (42, 515736), (44, 417072), (46, 150624), (48, 137376), (50, 90432), (52, 79392), (54, 14544), (58, 11520)];
mul:matrices/32,3-col_rots_32,3-col_xforms_32,3-row_rots_32,3-row_xforms_32,3-col_rots-32,3 n_ones=80260584; n_elems=84934656; in_slots=96; out_slots=96; density=0.9449686121057581; time=5.050518989;
Begin search
solution:init;load_rep;id;rot(16);xform(2,1,16);rot(2);xform(3,1,3);rot(16)
solution:init;load_rep;id;id;xform(2,1,32);id;xform(3,1,3);id
solution:init;load_rep;xform(31,0,3);rot(1);xform(2,2,32);rot(2);xform(29,31,3);rot(11)
stats:0 name=load_rep; lane=0; tested=1; found=0; failed=0; pruned=0; continued=1; target_checks=[];
stats:1 name=col_xforms; lane=0; tested=1347; found=0; failed=0; pruned=1320; continued=27; target_checks=[(2, 355), (10, 36), (30, 220), (40, 442), (50, 45), (60, 54), (70, 26), (80, 17), (90, 4), (100, 22), (200, 34), (300, 7), (400, 3), (500, 3), (700, 27), (1000, 1), (1100, 7), (1300, 1), (1400, 16)];
stats:2 name=col_rots; lane=0; tested=1566; found=0; failed=0; pruned=1526; continued=40; target_checks=[(30, 194), (40, 86), (50, 159), (60, 294), (70, 258), (80, 75), (90, 22), (100, 323), (200, 83), (300, 18), (400, 8), (500, 2), (800, 1), (900, 2), (1000, 1)];
stats:3 name=row_xforms; lane=0; tested=1200; found=0; failed=0; pruned=1193; continued=7; target_checks=[(1, 804), (2, 159), (3, 31), (4, 34), (5, 15), (6, 14), (7, 20), (8, 26), (9, 6), (10, 46), (20, 30), (30, 8)];
stats:4 name=row_rots; lane=0; tested=21; found=0; failed=0; pruned=14; continued=7; target_checks=[(1, 14)];
stats:5 name=col_xforms; lane=0; tested=9429; found=0; failed=0; pruned=9426; continued=3; target_checks=[(1, 9000), (2, 143), (3, 267), (4, 4), (8, 7), (10, 5)];
stats:6 name=col_rots; lane=0; tested=174; found=0; failed=0; pruned=0; continued=174; target_checks=[];
stats:7 name=(last); lane=0; tested=174; found=3; failed=171; pruned=0; continued=0; target_checks=[];
search:specs/swinv_like/l3/trove-rcr-3.json success=true; mode=All; time=0.142003099;
spec:specs/swinv_like/l3/trove-cr_sum-3.json
WARNING: It doesn't make sense to prune after the last instructions are applied. Suppressing.
build:matrices/32-col_rots-32,3 n_ones=384192; n_elems=9437184; in_slots=96; out_slots=32; density=0.04071044921875; time=0.061307213;
Using newly-built matrices/32-col_rots-32,3
load:matrices/32,3-col_xforms-32,3 n_ones=3932773; n_elems=84934656; in_slots=96; out_slots=96; density=0.046303513609332804; time=0.067721674;
mul_stats:: probes_success=[(1, 19069), (2, 32768), (3, 31984), (4, 379955), (5, 381978), (6, 393395), (7, 352104), (8, 380626), (9, 358217), (10, 2886001), (20, 957882), (30, 528658), (40, 220098), (50, 130409), (60, 131977), (70, 109154), (80, 128849), (90, 89043), (100, 686131), (200, 270349), (300, 95330), (400, 7638), (500, 245)]; probes_failure=[(200, 203776), (300, 525446), (400, 134570), (500, 1532)];
mul:matrices/32-col_rots_32,3-col_xforms-32,3 n_ones=8571860; n_elems=9437184; in_slots=96; out_slots=32; density=0.9083069695366753; time=3.6637708350000002;
load:matrices/32,3-row_rots-32,3 n_ones=27648; n_elems=84934656; in_slots=96; out_slots=96; density=0.0003255208333333333; time=0.064413824;
mul_stats:: probes_success=[(1, 8224260), (2, 602220)]; probes_failure=[(3, 610704)];
mul:matrices/32-col_rots_32,3-col_xforms_32,3-row_rots-32,3 n_ones=8826480; n_elems=9437184; in_slots=96; out_slots=32; density=0.9352874755859375; time=1.014267029;
Begin search
solution:init;load_rep;xform(2,1,32);id;xform(3,1,3);id
solution:init;load_rep;xform(0,1,32);rot(1);xform(3,31,3);rot(22)
stats:0 name=load_rep; lane=0; tested=1; found=0; failed=0; pruned=0; continued=1; target_checks=[];
stats:1 name=row_xforms; lane=0; tested=30; found=0; failed=0; pruned=28; continued=2; target_checks=[(1, 10), (2, 2), (10, 6), (30, 4), (50, 4), (90, 2)];
stats:2 name=row_rots; lane=0; tested=6; found=0; failed=0; pruned=4; continued=2; target_checks=[(1, 2), (90, 2)];
stats:3 name=col_xforms; lane=0; tested=2694; found=0; failed=0; pruned=2692; continued=2; target_checks=[(1, 2539), (2, 43), (3, 103), (4, 3), (8, 1), (10, 3)];
stats:4 name=col_rots; lane=0; tested=116; found=0; failed=0; pruned=0; continued=116; target_checks=[];
stats:5 name=(last); lane=0; tested=116; found=2; failed=114; pruned=0; continued=0; target_checks=[];
search:specs/swinv_like/l3/trove-cr_sum-3.json success=true; mode=All; time=0.029549396;
spec:specs/swinv_like/l3/trove-rcr-1.json
load:matrices/32,1-col_rots-32,1 n_ones=42688; n_elems=1048576; in_slots=32; out_slots=32; density=0.04071044921875; time=0.000703127;
load:matrices/32,1-col_rots-32,1 n_ones=42688; n_elems=1048576; in_slots=32; out_slots=32; density=0.04071044921875; time=0.000692019;
mul_stats:: probes_success=[(1, 45802), (2, 12510), (3, 4008), (4, 2379), (5, 3725), (6, 2736), (7, 2889), (8, 3367), (9, 5855), (10, 49929), (20, 29237), (30, 20511), (40, 5832), (50, 340)]; probes_failure=[(30, 233264), (40, 562656), (50, 63536)];
mul:matrices/32,1-col_rots_32,1-col_rots-32,1 n_ones=189120; n_elems=1048576; in_slots=32; out_slots=32; density=0.18035888671875; time=0.207142626;
Begin search
solution:init;load_rep;id;grouped(rot(3),16);id;id;id;grouped(rot(13),16)
solution:init;load_rep;id;rot(2);id;id;id;rot(30)
solution:init;load_rep;id;grouped(rot(10),16);id;id;id;grouped(rot(6),16)
solution:init;load_rep;id;rot(8);id;id;id;rot(24)
solution:init;load_rep;id;id;id;id;id;id
solution:init;load_rep;id;rot(30);id;id;id;rot(2)
solution:init;load_rep;id;rot(3);id;id;id;rot(29)
solution:init;load_rep;id;rot(7);id;id;id;rot(25)
solution:init;load_rep;id;grouped(rot(2),16);id;id;id;grouped(rot(14),16)
solution:init;load_rep;id;grouped(rot(3),8);id;id;id;grouped(rot(5),8)
solution:init;load_rep;id;grouped(rot(1),4);id;id;id;grouped(rot(3),4)
solution:init;load_rep;id;grouped(rot(9),16);id;id;id;grouped(rot(7),16)
solution:init;load_rep;id;rot(19);id;id;id;rot(13)
solution:init;load_rep;id;rot(12);id;id;id;rot(20)
solution:init;load_rep;id;grouped(rot(4),16);id;id;id;grouped(rot(12),16)
solution:init;load_rep;id;rot(17);id;id;id;rot(15)
solution:init;load_rep;id;rot(31);id;id;id;rot(1)
solution:init;load_rep;id;grouped(rot(5),16);id;id;id;grouped(rot(11),16)
solution:init;load_rep;id;grouped(rot(8),16);id;id;id;grouped(rot(8),16)
solution:init;load_rep;id;grouped(rot(14),16);id;id;id;grouped(rot(2),16)
solution:init;load_rep;id;rot(14);id;id;id;rot(18)
solution:init;load_rep;id;rot(28);id;id;id;rot(4)
solution:init;load_rep;id;rot(9);id;id;id;rot(23)
solution:init;load_rep;id;rot(11);id;id;id;rot(21)
solution:init;load_rep;id;grouped(rot(11),16);id;id;id;grouped(rot(5),16)
solution:init;load_rep;id;rot(16);id;id;id;rot(16)
solution:init;load_rep;id;grouped(rot(12),16);id;id;id;grouped(rot(4),16)
solution:init;load_rep;id;rot(15);id;id;id;rot(17)
solution:init;load_rep;id;grouped(rot(1),2);id;id;id;grouped(rot(1),2)
solution:init;load_rep;id;rot(20);id;id;id;rot(12)
solution:init;load_rep;id;rot(18);id;id;id;rot(14)
solution:init;load_rep;id;grouped(rot(6),16);id;id;id;grouped(rot(10),16)
solution:init;load_rep;id;grouped(rot(7),16);id;id;id;grouped(rot(9),16)
solution:init;load_rep;id;grouped(rot(4),8);id;id;id;grouped(rot(4),8)
solution:init;load_rep;id;rot(22);id;id;id;rot(10)
solution:init;load_rep;id;rot(24);id;id;id;rot(8)
solution:init;load_rep;id;rot(23);id;id;id;rot(9)
solution:init;load_rep;id;grouped(rot(1),16);id;id;id;grouped(rot(15),16)
solution:init;load_rep;id;rot(10);id;id;id;rot(22)
solution:init;load_rep;id;rot(4);id;id;id;rot(28)
solution:init;load_rep;id;grouped(rot(7),8);id;id;id;grouped(rot(1),8)
solution:init;load_rep;id;grouped(rot(2),8);id;id;id;grouped(rot(6),8)
solution:init;load_rep;id;rot(13);id;id;id;rot(19)
solution:init;load_rep;id;grouped(rot(13),16);id;id;id;grouped(rot(3),16)
solution:init;load_rep;id;rot(29);id;id;id;rot(3)
solution:init;load_rep;id;rot(27);id;id;id;rot(5)
solution:init;load_rep;id;rot(5);id;id;id;rot(27)
solution:init;load_rep;id;rot(6);id;id;id;rot(26)
solution:init;load_rep;id;rot(25);id;id;id;rot(7)
solution:init;load_rep;id;rot(26);id;id;id;rot(6)
solution:init;load_rep;id;rot(21);id;id;id;rot(11)
solution:init;load_rep;id;grouped(rot(15),16);id;id;id;grouped(rot(1),16)
solution:init;load_rep;id;grouped(rot(5),8);id;id;id;grouped(rot(3),8)
solution:init;load_rep;id;grouped(rot(3),4);id;id;id;grouped(rot(1),4)
solution:init;load_rep;id;grouped(rot(1),8);id;id;id;grouped(rot(7),8)
solution:init;load_rep;id;rot(1);id;id;id;rot(31)
solution:init;load_rep;id;grouped(rot(6),8);id;id;id;grouped(rot(2),8)
solution:init;load_rep;id;grouped(rot(2),4);id;id;id;grouped(rot(2),4)
stats:0 name=load_rep; lane=0; tested=1; found=0; failed=0; pruned=0; continued=1; target_checks=[];
stats:1 name=col_xforms; lane=0; tested=1; found=0; failed=0; pruned=0; continued=1; target_checks=[];
stats:2 name=col_rots; lane=0; tested=58; found=0; failed=0; pruned=0; continued=58; target_checks=[];
stats:3 name=row_xforms; lane=0; tested=58; found=0; failed=0; pruned=0; continued=58; target_checks=[];
stats:4 name=row_rots; lane=0; tested=58; found=0; failed=0; pruned=0; continued=58; target_checks=[];
stats:5 name=col_xforms; lane=0; tested=58; found=0; failed=0; pruned=0; continued=58; target_checks=[];
stats:6 name=col_rots; lane=0; tested=3364; found=0; failed=0; pruned=0; continued=3364; target_checks=[];
stats:7 name=(last); lane=0; tested=3364; found=58; failed=3306; pruned=0; continued=0; target_checks=[];
search:specs/swinv_like/l3/trove-rcr-1.json success=true; mode=All; time=0.014062771;
spec:specs/swinv_like/l3/1d-conv.json
load:matrices/32-cond_keep-32,3 n_ones=9216; n_elems=9437184; in_slots=96; out_slots=32; density=0.0009765625; time=0.006086593;
load:matrices/32-cond_keep_32,3-col_rots-32,3 n_ones=384192; n_elems=9437184; in_slots=96; out_slots=32; density=0.04071044921875; time=0.006094348;
load:matrices/32-cond_keep_32,3-col_rots_32,3-col_xforms-32,3 n_ones=8571860; n_elems=9437184; in_slots=96; out_slots=32; density=0.9083069695366753; time=0.006108465;
Begin search
solution:stack_fold[init;load_trunc;select(d0 >= 0 + d1);xform(0,1,3);id,init;broadcast;id];keep_if(d0 = 0 + d0)
stats:0 name=load_trunc; lane=0; tested=1; found=0; failed=0; pruned=0; continued=1; target_checks=[];
stats:1 name=broadcast; lane=1; tested=1; found=0; failed=0; pruned=0; continued=1; target_checks=[];
stats:2 name=identity; lane=1; tested=1; found=0; failed=0; pruned=0; continued=1; target_checks=[];
stats:3 name=reg_select; lane=0; tested=38; found=0; failed=0; pruned=36; continued=2; target_checks=[(1, 15), (3, 4), (6, 2), (9, 1), (40, 3), (90, 7), (4700, 4)];
stats:4 name=col_xforms; lane=0; tested=2694; found=0; failed=0; pruned=2692; continued=2; target_checks=[(1, 2539), (2, 145), (3, 2), (9, 1), (20, 1), (40, 1), (300, 1), (1300, 1), (3000, 1)];
stats:5 name=col_rots; lane=0; tested=116; found=0; failed=0; pruned=114; continued=2; target_checks=[(1, 111), (5, 1), (10, 1), (40, 1)];
stats:6 name=stack_folding; lane=0; tested=2; found=0; failed=1; pruned=0; continued=1; target_checks=[];
stats:7 name=cond_keep; lane=0; tested=38; found=0; failed=28; pruned=0; continued=10; target_checks=[];
stats:8 name=(last); lane=0; tested=10; found=1; failed=9; pruned=0; continued=0; target_checks=[];
search:specs/swinv_like/l3/1d-conv.json success=true; mode=All; time=0.036678669;
spec:specs/swinv_like/l3/trove-rcr-4.json
load:matrices/32,4-col_rots-32,4 n_ones=683008; n_elems=268435456; in_slots=128; out_slots=128; density=0.002544403076171875; time=0.196035925;
load:matrices/32,4-col_xforms-32,4 n_ones=10343153; n_elems=268435456; in_slots=128; out_slots=128; density=0.03853124752640724; time=0.203216742;
mul_stats:: probes_success=[(1, 8441447), (2, 4190069), (3, 1355800), (4, 381915), (5, 160476), (6, 88288), (7, 96772), (8, 68262), (9, 78857), (10, 517757), (20, 223444), (30, 147332), (40, 26697), (50, 2472)]; probes_failure=[(30, 67171930), (40, 165786212), (50, 19697726)];
mul:matrices/32,4-col_rots_32,4-col_xforms-32,4 n_ones=15779588; n_elems=268435456; in_slots=128; out_slots=128; density=0.05878354609012604; time=66.133877175;
load:matrices/32,4-row_rots-32,4 n_ones=73728; n_elems=268435456; in_slots=128; out_slots=128; density=0.000274658203125; time=0.204285791;
mul_stats:: probes_success=[(1, 15229520), (2, 15962944), (3, 15962944), (4, 15962944), (5, 8388608)]; probes_failure=[(4, 104653808), (5, 92274688)];
mul:matrices/32,4-col_rots_32,4-col_xforms_32,4-row_rots-32,4 n_ones=71506960; n_elems=268435456; in_slots=128; out_slots=128; density=0.26638418436050415; time=26.165448729;
load:matrices/32,4-row_xforms-32,4 n_ones=235114; n_elems=268435456; in_slots=128; out_slots=128; density=0.0008758679032325745; time=0.204023247;
mul_stats:: probes_success=[(1, 60880370), (2, 77500924), (3, 60667211), (4, 41773796), (5, 7604749), (6, 740352), (7, 714912), (8, 19008), (9, 296194), (10, 26256), (11, 6718), (12, 23984), (13, 289946)]; probes_failure=[(1, 16256), (2, 63232), (3, 161152), (4, 2159936), (6, 89792), (7, 145892), (8, 968114), (9, 280504), (10, 1087624), (11, 428398), (12, 1233166), (13, 741990), (14, 676196), (15, 2033416), (16, 7805368)];
mul:matrices/32,4-col_rots_32,4-col_xforms_32,4-row_rots_32,4-row_xforms-32,4 n_ones=250544420; n_elems=268435456; in_slots=128; out_slots=128; density=0.9333506971597672; time=30.414621565;
load:matrices/32,4-col_rots-32,4 n_ones=683008; n_elems=268435456; in_slots=128; out_slots=128; density=0.002544403076171875; time=0.205764702;
mul_stats:: probes_success=[(1, 248865504), (2, 3322448), (3, 991312), (4, 370976), (5, 561856), (6, 161496), (7, 302576), (8, 198520), (9, 331728), (10, 231840), (11, 146168), (12, 90904), (13, 201736), (14, 120824), (15, 184176), (16, 123552), (17, 409136), (18, 532904), (19, 113248), (20, 93704), (21, 64104), (22, 49040), (23, 74504), (24, 57744), (25, 91104), (26, 85920), (27, 82000), (28, 73856), (29, 68616), (30, 65464), (31, 117336), (32, 48328), (33, 92256), (34, 73104), (35, 61024), (36, 29408), (37, 17736), (38, 2264), (39, 47368), (40, 20504), (41, 23584), (42, 480), (43, 11456), (44, 12544), (45, 2912), (46, 10944), (47, 11296), (51, 3840), (54, 160), (55, 64)]; probes_failure=[(32, 5021696), (36, 299968), (38, 289088), (40, 1852672), (42, 834688), (44, 603392), (46, 306688), (48, 229888), (50, 165888), (52, 127488), (54, 34048), (58, 16384)];
mul:matrices/32,4-col_rots_32,4-col_xforms_32,4-row_rots_32,4-row_xforms_32,4-col_rots-32,4 n_ones=258653568; n_elems=268435456; in_slots=128; out_slots=128; density=0.963559627532959; time=26.993492088;
Begin search
solution:init;load_rep;xform(0,31,4);rot(4);xform(3,1,32);id;xform(4,1,4);grouped(rot(7),8)
solution:init;load_rep;xform(0,31,4);rot(16);xform(3,1,32);id;xform(4,1,4);grouped(rot(4),8)
solution:init;load_rep;xform(0,31,4);rot(24);xform(3,1,32);id;xform(4,1,4);grouped(rot(2),8)
solution:init;load_rep;xform(0,31,4);rot(20);xform(3,1,32);id;xform(4,1,4);grouped(rot(3),8)
solution:init;load_rep;xform(0,31,4);rot(8);xform(3,1,32);id;xform(4,1,4);grouped(rot(6),8)
solution:init;load_rep;xform(0,31,4);id;xform(3,1,32);id;xform(4,1,4);id
solution:init;load_rep;xform(0,31,4);rot(12);xform(3,1,32);id;xform(4,1,4);grouped(rot(5),8)
solution:init;load_rep;xform(0,31,4);rot(28);xform(3,1,32);id;xform(4,1,4);grouped(rot(1),8)
solution:init;load_rep;xform(21,11,4);rot(4);xform(3,1,32);id;xform(20,29,4);grouped(rot(3),8)
solution:init;load_rep;xform(21,11,4);rot(16);xform(3,1,32);id;xform(20,29,4);grouped(rot(4),8)
solution:init;load_rep;xform(21,11,4);rot(24);xform(3,1,32);id;xform(20,29,4);grouped(rot(2),8)
solution:init;load_rep;xform(21,11,4);rot(20);xform(3,1,32);id;xform(20,29,4);grouped(rot(7),8)
solution:init;load_rep;xform(21,11,4);rot(8);xform(3,1,32);id;xform(20,29,4);grouped(rot(6),8)
solution:init;load_rep;xform(21,11,4);id;xform(3,1,32);id;xform(20,29,4);id
solution:init;load_rep;xform(21,11,4);rot(12);xform(3,1,32);id;xform(20,29,4);grouped(rot(1),8)
solution:init;load_rep;xform(21,11,4);rot(28);xform(3,1,32);id;xform(20,29,4);grouped(rot(5),8)
solution:init;load_rep;xform(17,15,4);rot(4);xform(3,1,32);id;xform(4,17,4);grouped(rot(7),8)
solution:init;load_rep;xform(17,15,4);rot(16);xform(3,1,32);id;xform(4,17,4);grouped(rot(4),8)
solution:init;load_rep;xform(17,15,4);rot(24);xform(3,1,32);id;xform(4,17,4);grouped(rot(2),8)
solution:init;load_rep;xform(17,15,4);rot(20);xform(3,1,32);id;xform(4,17,4);grouped(rot(3),8)
solution:init;load_rep;xform(17,15,4);rot(8);xform(3,1,32);id;xform(4,17,4);grouped(rot(6),8)
solution:init;load_rep;xform(17,15,4);id;xform(3,1,32);id;xform(4,17,4);id
solution:init;load_rep;xform(17,15,4);rot(12);xform(3,1,32);id;xform(4,17,4);grouped(rot(5),8)
solution:init;load_rep;xform(17,15,4);rot(28);xform(3,1,32);id;xform(4,17,4);grouped(rot(1),8)
solution:init;load_rep;xform(23,9,4);rot(4);xform(0,1,32);id;xform(28,7,4);grouped(rot(1),8)
solution:init;load_rep;xform(23,9,4);rot(16);xform(0,1,32);id;xform(28,7,4);grouped(rot(4),8)
solution:init;load_rep;xform(23,9,4);rot(24);xform(0,1,32);id;xform(28,7,4);grouped(rot(6),8)
solution:init;load_rep;xform(23,9,4);rot(20);xform(0,1,32);id;xform(28,7,4);grouped(rot(5),8)
solution:init;load_rep;xform(23,9,4);rot(8);xform(0,1,32);id;xform(28,7,4);grouped(rot(2),8)
solution:init;load_rep;xform(23,9,4);id;xform(0,1,32);id;xform(28,7,4);id
solution:init;load_rep;xform(23,9,4);rot(12);xform(0,1,32);id;xform(28,7,4);grouped(rot(3),8)
solution:init;load_rep;xform(23,9,4);rot(28);xform(0,1,32);id;xform(28,7,4);grouped(rot(7),8)
solution:init;load_rep;xform(5,27,4);rot(4);xform(3,1,32);id;xform(20,13,4);grouped(rot(3),8)
solution:init;load_rep;xform(5,27,4);rot(16);xform(3,1,32);id;xform(20,13,4);grouped(rot(4),8)
solution:init;load_rep;xform(5,27,4);rot(24);xform(3,1,32);id;xform(20,13,4);grouped(rot(2),8)
solution:init;load_rep;xform(5,27,4);rot(20);xform(3,1,32);id;xform(20,13,4);grouped(rot(7),8)
solution:init;load_rep;xform(5,27,4);rot(8);xform(3,1,32);id;xform(20,13,4);grouped(rot(6),8)
solution:init;load_rep;xform(5,27,4);id;xform(3,1,32);id;xform(20,13,4);id
solution:init;load_rep;xform(5,27,4);rot(12);xform(3,1,32);id;xform(20,13,4);grouped(rot(1),8)
solution:init;load_rep;xform(5,27,4);rot(28);xform(3,1,32);id;xform(20,13,4);grouped(rot(5),8)
solution:init;load_rep;xform(25,7,4);rot(4);xform(3,1,32);id;xform(4,9,4);grouped(rot(7),8)
solution:init;load_rep;xform(25,7,4);rot(16);xform(3,1,32);id;xform(4,9,4);grouped(rot(4),8)
solution:init;load_rep;xform(25,7,4);rot(24);xform(3,1,32);id;xform(4,9,4);grouped(rot(2),8)
solution:init;load_rep;xform(25,7,4);rot(20);xform(3,1,32);id;xform(4,9,4);grouped(rot(3),8)
solution:init;load_rep;xform(25,7,4);rot(8);xform(3,1,32);id;xform(4,9,4);grouped(rot(6),8)
solution:init;load_rep;xform(25,7,4);id;xform(3,1,32);id;xform(4,9,4);id
solution:init;load_rep;xform(25,7,4);rot(12);xform(3,1,32);id;xform(4,9,4);grouped(rot(5),8)
solution:init;load_rep;xform(25,7,4);rot(28);xform(3,1,32);id;xform(4,9,4);grouped(rot(1),8)
solution:init;load_rep;xform(9,23,4);rot(4);xform(3,1,32);id;xform(4,25,4);grouped(rot(7),8)
solution:init;load_rep;xform(9,23,4);rot(16);xform(3,1,32);id;xform(4,25,4);grouped(rot(4),8)
solution:init;load_rep;xform(9,23,4);rot(24);xform(3,1,32);id;xform(4,25,4);grouped(rot(2),8)
solution:init;load_rep;xform(9,23,4);rot(20);xform(3,1,32);id;xform(4,25,4);grouped(rot(3),8)
solution:init;load_rep;xform(9,23,4);rot(8);xform(3,1,32);id;xform(4,25,4);grouped(rot(6),8)
solution:init;load_rep;xform(9,23,4);id;xform(3,1,32);id;xform(4,25,4);id
solution:init;load_rep;xform(9,23,4);rot(12);xform(3,1,32);id;xform(4,25,4);grouped(rot(5),8)
solution:init;load_rep;xform(9,23,4);rot(28);xform(3,1,32);id;xform(4,25,4);grouped(rot(1),8)
solution:init;load_rep;xform(3,29,4);rot(4);xform(0,1,32);id;xform(12,11,4);grouped(rot(5),8)
solution:init;load_rep;xform(3,29,4);rot(16);xform(0,1,32);id;xform(12,11,4);grouped(rot(4),8)
solution:init;load_rep;xform(3,29,4);rot(24);xform(0,1,32);id;xform(12,11,4);grouped(rot(6),8)
solution:init;load_rep;xform(3,29,4);rot(20);xform(0,1,32);id;xform(12,11,4);grouped(rot(1),8)
solution:init;load_rep;xform(3,29,4);rot(8);xform(0,1,32);id;xform(12,11,4);grouped(rot(2),8)
solution:init;load_rep;xform(3,29,4);id;xform(0,1,32);id;xform(12,11,4);id
solution:init;load_rep;xform(3,29,4);rot(12);xform(0,1,32);id;xform(12,11,4);grouped(rot(7),8)
solution:init;load_rep;xform(3,29,4);rot(28);xform(0,1,32);id;xform(12,11,4);grouped(rot(3),8)
solution:init;load_rep;xform(7,25,4);rot(4);xform(0,1,32);id;xform(28,23,4);grouped(rot(1),8)
solution:init;load_rep;xform(7,25,4);rot(16);xform(0,1,32);id;xform(28,23,4);grouped(rot(4),8)
solution:init;load_rep;xform(7,25,4);rot(24);xform(0,1,32);id;xform(28,23,4);grouped(rot(6),8)
solution:init;load_rep;xform(7,25,4);rot(20);xform(0,1,32);id;xform(28,23,4);grouped(rot(5),8)
solution:init;load_rep;xform(7,25,4);rot(8);xform(0,1,32);id;xform(28,23,4);grouped(rot(2),8)
solution:init;load_rep;xform(7,25,4);id;xform(0,1,32);id;xform(28,23,4);id
solution:init;load_rep;xform(7,25,4);rot(12);xform(0,1,32);id;xform(28,23,4);grouped(rot(3),8)
solution:init;load_rep;xform(7,25,4);rot(28);xform(0,1,32);id;xform(28,23,4);grouped(rot(7),8)
solution:init;load_rep;xform(19,13,4);rot(4);xform(0,1,32);id;xform(12,27,4);grouped(rot(5),8)
solution:init;load_rep;xform(19,13,4);rot(16);xform(0,1,32);id;xform(12,27,4);grouped(rot(4),8)
solution:init;load_rep;xform(19,13,4);rot(24);xform(0,1,32);id;xform(12,27,4);grouped(rot(6),8)
solution:init;load_rep;xform(19,13,4);rot(20);xform(0,1,32);id;xform(12,27,4);grouped(rot(1),8)
solution:init;load_rep;xform(19,13,4);rot(8);xform(0,1,32);id;xform(12,27,4);grouped(rot(2),8)
solution:init;load_rep;xform(19,13,4);id;xform(0,1,32);id;xform(12,27,4);id
solution:init;load_rep;xform(19,13,4);rot(12);xform(0,1,32);id;xform(12,27,4);grouped(rot(7),8)
solution:init;load_rep;xform(19,13,4);rot(28);xform(0,1,32);id;xform(12,27,4);grouped(rot(3),8)
solution:init;load_rep;xform(11,21,4);rot(4);xform(0,1,32);id;xform(12,3,4);grouped(rot(5),8)
solution:init;load_rep;xform(11,21,4);rot(16);xform(0,1,32);id;xform(12,3,4);grouped(rot(4),8)
solution:init;load_rep;xform(11,21,4);rot(24);xform(0,1,32);id;xform(12,3,4);grouped(rot(6),8)
solution:init;load_rep;xform(11,21,4);rot(20);xform(0,1,32);id;xform(12,3,4);grouped(rot(1),8)
solution:init;load_rep;xform(11,21,4);rot(8);xform(0,1,32);id;xform(12,3,4);grouped(rot(2),8)
solution:init;load_rep;xform(11,21,4);id;xform(0,1,32);id;xform(12,3,4);id
solution:init;load_rep;xform(11,21,4);rot(12);xform(0,1,32);id;xform(12,3,4);grouped(rot(7),8)
solution:init;load_rep;xform(11,21,4);rot(28);xform(0,1,32);id;xform(12,3,4);grouped(rot(3),8)
solution:init;load_rep;xform(31,1,4);rot(4);xform(0,1,32);id;xform(28,31,4);grouped(rot(1),8)
solution:init;load_rep;xform(31,1,4);rot(16);xform(0,1,32);id;xform(28,31,4);grouped(rot(4),8)
solution:init;load_rep;xform(31,1,4);rot(24);xform(0,1,32);id;xform(28,31,4);grouped(rot(6),8)
solution:init;load_rep;xform(31,1,4);rot(20);xform(0,1,32);id;xform(28,31,4);grouped(rot(5),8)
solution:init;load_rep;xform(31,1,4);rot(8);xform(0,1,32);id;xform(28,31,4);grouped(rot(2),8)
solution:init;load_rep;xform(31,1,4);id;xform(0,1,32);id;xform(28,31,4);id
solution:init;load_rep;xform(31,1,4);rot(12);xform(0,1,32);id;xform(28,31,4);grouped(rot(3),8)
solution:init;load_rep;xform(31,1,4);rot(28);xform(0,1,32);id;xform(28,31,4);grouped(rot(7),8)
solution:init;load_rep;xform(15,17,4);rot(4);xform(0,1,32);id;xform(28,15,4);grouped(rot(1),8)
solution:init;load_rep;xform(15,17,4);rot(16);xform(0,1,32);id;xform(28,15,4);grouped(rot(4),8)
solution:init;load_rep;xform(15,17,4);rot(24);xform(0,1,32);id;xform(28,15,4);grouped(rot(6),8)
solution:init;load_rep;xform(15,17,4);rot(20);xform(0,1,32);id;xform(28,15,4);grouped(rot(5),8)
solution:init;load_rep;xform(15,17,4);rot(8);xform(0,1,32);id;xform(28,15,4);grouped(rot(2),8)
solution:init;load_rep;xform(15,17,4);id;xform(0,1,32);id;xform(28,15,4);id
solution:init;load_rep;xform(15,17,4);rot(12);xform(0,1,32);id;xform(28,15,4);grouped(rot(3),8)
solution:init;load_rep;xform(15,17,4);rot(28);xform(0,1,32);id;xform(28,15,4);grouped(rot(7),8)
solution:init;load_rep;xform(13,19,4);rot(4);xform(3,1,32);id;xform(20,5,4);grouped(rot(3),8)
solution:init;load_rep;xform(13,19,4);rot(16);xform(3,1,32);id;xform(20,5,4);grouped(rot(4),8)
solution:init;load_rep;xform(13,19,4);rot(24);xform(3,1,32);id;xform(20,5,4);grouped(rot(2),8)
solution:init;load_rep;xform(13,19,4);rot(20);xform(3,1,32);id;xform(20,5,4);grouped(rot(7),8)
solution:init;load_rep;xform(13,19,4);rot(8);xform(3,1,32);id;xform(20,5,4);grouped(rot(6),8)
solution:init;load_rep;xform(13,19,4);id;xform(3,1,32);id;xform(20,5,4);id
solution:init;load_rep;xform(13,19,4);rot(12);xform(3,1,32);id;xform(20,5,4);grouped(rot(1),8)
solution:init;load_rep;xform(13,19,4);rot(28);xform(3,1,32);id;xform(20,5,4);grouped(rot(5),8)
solution:init;load_rep;xform(27,5,4);rot(4);xform(0,1,32);id;xform(12,19,4);grouped(rot(5),8)
solution:init;load_rep;xform(27,5,4);rot(16);xform(0,1,32);id;xform(12,19,4);grouped(rot(4),8)
solution:init;load_rep;xform(27,5,4);rot(24);xform(0,1,32);id;xform(12,19,4);grouped(rot(6),8)
solution:init;load_rep;xform(27,5,4);rot(20);xform(0,1,32);id;xform(12,19,4);grouped(rot(1),8)
solution:init;load_rep;xform(27,5,4);rot(8);xform(0,1,32);id;xform(12,19,4);grouped(rot(2),8)
solution:init;load_rep;xform(27,5,4);id;xform(0,1,32);id;xform(12,19,4);id
solution:init;load_rep;xform(27,5,4);rot(12);xform(0,1,32);id;xform(12,19,4);grouped(rot(7),8)
solution:init;load_rep;xform(27,5,4);rot(28);xform(0,1,32);id;xform(12,19,4);grouped(rot(3),8)
solution:init;load_rep;xform(29,3,4);rot(4);xform(3,1,32);id;xform(20,21,4);grouped(rot(3),8)
solution:init;load_rep;xform(29,3,4);rot(16);xform(3,1,32);id;xform(20,21,4);grouped(rot(4),8)
solution:init;load_rep;xform(29,3,4);rot(24);xform(3,1,32);id;xform(20,21,4);grouped(rot(2),8)
solution:init;load_rep;xform(29,3,4);rot(20);xform(3,1,32);id;xform(20,21,4);grouped(rot(7),8)
solution:init;load_rep;xform(29,3,4);rot(8);xform(3,1,32);id;xform(20,21,4);grouped(rot(6),8)
solution:init;load_rep;xform(29,3,4);id;xform(3,1,32);id;xform(20,21,4);id
solution:init;load_rep;xform(29,3,4);rot(12);xform(3,1,32);id;xform(20,21,4);grouped(rot(1),8)
solution:init;load_rep;xform(29,3,4);rot(28);xform(3,1,32);id;xform(20,21,4);grouped(rot(5),8)
stats:0 name=load_rep; lane=0; tested=1; found=0; failed=0; pruned=0; continued=1; target_checks=[];
stats:1 name=col_xforms; lane=0; tested=2716; found=0; failed=0; pruned=2668; continued=48; target_checks=[(30, 826), (40, 328), (50, 48), (60, 797), (70, 93), (80, 29), (90, 287), (100, 129), (200, 28), (300, 22), (400, 4), (500, 18), (600, 4), (700, 2), (800, 5), (900, 1), (1500, 1), (1800, 1), (1900, 2), (2000, 18), (2100, 1), (2300, 1), (3400, 1), (3600, 18), (4000, 3), (7000, 1)];
stats:2 name=col_rots; lane=0; tested=2784; found=0; failed=0; pruned=2624; continued=160; target_checks=[(4, 345), (8, 258), (10, 466), (20, 316), (30, 382), (40, 103), (50, 15), (60, 204), (70, 5), (80, 23), (90, 146), (100, 132), (200, 67), (300, 58), (400, 31), (500, 9), (600, 12), (700, 24), (800, 2), (900, 9), (1000, 4), (1100, 1), (1200, 3), (1600, 9)];
stats:3 name=row_xforms; lane=0; tested=12320; found=0; failed=0; pruned=12157; continued=163; target_checks=[(1, 8465), (2, 2701), (3, 213), (4, 375), (5, 50), (6, 5), (8, 107), (9, 5), (10, 73), (30, 163)];
stats:4 name=row_rots; lane=0; tested=815; found=0; failed=0; pruned=652; continued=163; target_checks=[(1, 652)];
stats:5 name=col_xforms; lane=0; tested=442708; found=0; failed=0; pruned=442580; continued=128; target_checks=[(1, 426897), (2, 10160), (3, 367), (4, 5028), (5, 5), (6, 2), (8, 46), (9, 1), (10, 29), (30, 29), (500, 16)];
stats:6 name=col_rots; lane=0; tested=7424; found=0; failed=0; pruned=0; continued=7424; target_checks=[];
stats:7 name=(last); lane=0; tested=7424; found=128; failed=7296; pruned=0; continued=0; target_checks=[];
search:specs/swinv_like/l3/trove-rcr-4.json success=true; mode=All; time=5.180722672;
spec:specs/swinv_like/l3/trove-cr_sum-1.json
WARNING: It doesn't make sense to prune after the last instructions are applied. Suppressing.
build:matrices/32-col_rots-32,1 n_ones=42688; n_elems=1048576; in_slots=32; out_slots=32; density=0.04071044921875; time=0.006843197;
Using newly-built matrices/32-col_rots-32,1
Begin search
solution:init;load_rep;id;id;id;id
stats:0 name=load_rep; lane=0; tested=1; found=0; failed=0; pruned=0; continued=1; target_checks=[];
stats:1 name=row_xforms; lane=0; tested=1; found=0; failed=0; pruned=0; continued=1; target_checks=[];
stats:2 name=row_rots; lane=0; tested=1; found=0; failed=0; pruned=0; continued=1; target_checks=[];
stats:3 name=col_xforms; lane=0; tested=1; found=0; failed=0; pruned=0; continued=1; target_checks=[];
stats:4 name=col_rots; lane=0; tested=58; found=0; failed=0; pruned=0; continued=58; target_checks=[];
stats:5 name=(last); lane=0; tested=58; found=1; failed=57; pruned=0; continued=0; target_checks=[];
search:specs/swinv_like/l3/trove-cr_sum-1.json success=true; mode=All; time=0.000871524;
spec:specs/swinv_like/l3/mult-32-with-4.json
load:matrices/8-reshape-2,4 n_ones=64; n_elems=4096; in_slots=8; out_slots=8; density=0.015625; time=0.000027938;
load:matrices/8-reshape_2,4-transpose-4,2 n_ones=64; n_elems=4096; in_slots=8; out_slots=8; density=0.015625; time=0.000016681;
load:matrices/8-reshape_2,4-transpose_4,2-cond_keep{restrict[1|1]}-4,2,4 n_ones=1024; n_elems=65536; in_slots=32; out_slots=8; density=0.015625; time=0.000087621;
load:matrices/8-reshape_2,4-transpose_4,2-cond_keep{restrict[1|1]}_4,2,4-broadcast{group[1]}-4,4 n_ones=1024; n_elems=16384; in_slots=16; out_slots=8; density=0.0625; time=0.000029233;
build:matrices/4,4-rots{main[0]out[1]second[1]}-4,4 n_ones=1336; n_elems=65536; in_slots=16; out_slots=16; density=0.0203857421875; time=0.000282519;
mul_stats:: probes_success=[(1, 336), (2, 44), (3, 48), (4, 44), (5, 44), (6, 48), (7, 44), (8, 48), (9, 48), (10, 320)]; probes_failure=[(10, 15360)];
mul:matrices/8-reshape_2,4-transpose_4,2-cond_keep{restrict[1|1]}_4,2,4-broadcast{group[1]}_4,4-rots{main[0]out[1]second[1]}-4,4 n_ones=1024; n_elems=16384; in_slots=16; out_slots=8; density=0.0625; time=0.001755552;
load:matrices/8-reshape_2,4-transpose_4,2-cond_keep{restrict[1|1]}_4,2,4-broadcast{group[1]}_4,4-rots{main[0]out[1]second[1]}-4,4 n_ones=1024; n_elems=16384; in_slots=16; out_slots=8; density=0.0625; time=0.000039974;
Begin search
solution:stack_fold[init;broadcast;id;id,init;broadcast;xform(0,3,4);id];broadcast;keep_if(d0 >= 0 + d2);keep_if(d0 < 0 + d2);tr;id
solution:stack_fold[init;broadcast;xform(0,3,4);id,init;broadcast;id;id];broadcast;keep_if(d0 >= 0 + d2);keep_if(d0 < 0 + d2);tr;id
stats:0 name=broadcast; lane=0; tested=1; found=0; failed=0; pruned=0; continued=1; target_checks=[];
stats:1 name=broadcast; lane=1; tested=1; found=0; failed=0; pruned=0; continued=1; target_checks=[];
stats:2 name=xforms{main[0]out[1]second[1]}; lane=0; tested=30; found=0; failed=0; pruned=20; continued=10; target_checks=[(1, 8), (2, 7), (3, 2), (4, 3)];
stats:3 name=rots{main[0]out[1]second[1]}; lane=0; tested=60; found=0; failed=0; pruned=50; continued=10; target_checks=[(1, 47), (2, 3)];
stats:4 name=xforms{main[0]out[1]second[1]}; lane=1; tested=300; found=0; failed=0; pruned=200; continued=100; target_checks=[(1, 80), (2, 70), (3, 20), (4, 30)];
stats:5 name=rots{main[0]out[1]second[1]}; lane=1; tested=600; found=0; failed=0; pruned=500; continued=100; target_checks=[(1, 470), (2, 30)];
stats:6 name=stack_folding; lane=0; tested=100; found=0; failed=0; pruned=98; continued=2; target_checks=[(1, 76), (2, 15), (3, 4), (4, 3)];
stats:7 name=broadcast{group[1]}; lane=0; tested=2; found=0; failed=0; pruned=0; continued=2; target_checks=[];
stats:8 name=cond_keep{restrict[1|0]}; lane=0; tested=88; found=0; failed=0; pruned=80; continued=8; target_checks=[(1, 54), (2, 10), (3, 4), (4, 5), (6, 2), (8, 3), (9, 1), (10, 1)];
stats:9 name=cond_keep{restrict[1|1]}; lane=0; tested=352; found=0; failed=342; pruned=8; continued=2; target_checks=[(4, 8)];
stats:10 name=transpose; lane=0; tested=2; found=0; failed=0; pruned=0; continued=2; target_checks=[];
stats:11 name=reshape; lane=0; tested=2; found=0; failed=0; pruned=0; continued=2; target_checks=[];
stats:12 name=(last); lane=0; tested=2; found=2; failed=0; pruned=0; continued=0; target_checks=[];
search:specs/swinv_like/l3/mult-32-with-4.json success=true; mode=All; time=0.006099459;
spec:specs/swinv_like/l3/trove-cr_sum-4.json
WARNING: It doesn't make sense to prune after the last instructions are applied. Suppressing.
build:matrices/32-col_rots-32,4 n_ones=683008; n_elems=16777216; in_slots=128; out_slots=32; density=0.04071044921875; time=0.10693185;
Using newly-built matrices/32-col_rots-32,4
load:matrices/32,4-col_xforms-32,4 n_ones=10343153; n_elems=268435456; in_slots=128; out_slots=128; density=0.03853124752640724; time=0.192387682;
mul_stats:: probes_success=[(1, 19069), (2, 32768), (3, 32768), (4, 32768), (5, 379955), (6, 381978), (7, 564024), (8, 561780), (9, 541716), (10, 5951316), (20, 3489381), (30, 1398002), (40, 393976), (50, 482856), (60, 151356), (70, 81928), (80, 87677), (90, 56270), (100, 396393), (200, 333765), (300, 152466), (400, 121920), (500, 99462), (600, 26821), (700, 7681), (800, 1215), (900, 277)]; probes_failure=[(500, 253390), (600, 510278), (700, 197034), (800, 35282), (900, 1644)];
mul:matrices/32-col_rots_32,4-col_xforms-32,4 n_ones=15779588; n_elems=16777216; in_slots=128; out_slots=32; density=0.9405367374420166; time=8.577668541;
load:matrices/32,4-row_rots-32,4 n_ones=73728; n_elems=268435456; in_slots=128; out_slots=128; density=0.000274658203125; time=0.192281055;
mul_stats:: probes_success=[(1, 15229520), (2, 733424)]; probes_failure=[(4, 814272)];
mul:matrices/32-col_rots_32,4-col_xforms_32,4-row_rots-32,4 n_ones=15962944; n_elems=16777216; in_slots=128; out_slots=32; density=0.9514656066894531; time=4.586815666;
Begin search
stats:0 name=load_rep; lane=0; tested=1; found=0; failed=0; pruned=0; continued=1; target_checks=[];
stats:1 name=row_xforms; lane=0; tested=77; found=0; failed=0; pruned=74; continued=3; target_checks=[(1, 22), (2, 20), (3, 5), (10, 3), (30, 12), (50, 3), (60, 3), (70, 3), (3800, 3)];
stats:2 name=row_rots; lane=0; tested=15; found=0; failed=0; pruned=0; continued=15; target_checks=[];
stats:3 name=col_xforms; lane=0; tested=40740; found=0; failed=0; pruned=40740; continued=0; target_checks=[(1, 38778), (2, 1583), (3, 233), (4, 137), (8, 3), (10, 3), (30, 3)];
stats:4 name=col_rots; lane=0; tested=0; found=0; failed=0; pruned=0; continued=0; target_checks=[];
stats:5 name=(last); lane=0; tested=0; found=0; failed=0; pruned=0; continued=0; target_checks=[];
search:specs/swinv_like/l3/trove-cr_sum-4.json success=false; mode=All; time=0.500615797;
spec:specs/swinv_like/l3/trove-rcr-2.json
build:matrices/32,2-col_rots-32,2 n_ones=170752; n_elems=16777216; in_slots=64; out_slots=64; density=0.0101776123046875; time=0.02780948;
Using newly-built matrices/32,2-col_rots-32,2
build:matrices/32,2-col_xforms-32,2 n_ones=1765773; n_elems=16777216; in_slots=64; out_slots=64; density=0.10524827241897583; time=0.65339411;
mul_stats:: probes_success=[(1, 1238237), (2, 1012610), (3, 394786), (4, 134143), (5, 67727), (6, 47480), (7, 49182), (8, 40520), (9, 39619), (10, 296203), (20, 155900), (30, 103332), (40, 22245), (50, 1828)]; probes_failure=[(30, 3526394), (40, 8639532), (50, 1007478)];
mul:matrices/32,2-col_rots_32,2-col_xforms-32,2 n_ones=3603812; n_elems=16777216; in_slots=64; out_slots=64; density=0.21480393409729004; time=3.068907677;
build:matrices/32,2-row_rots-32,2 n_ones=8192; n_elems=16777216; in_slots=64; out_slots=64; density=0.00048828125; time=0.001109044;
mul_stats:: probes_success=[(1, 3420456), (2, 3787168)]; probes_failure=[(2, 9569592)];
mul:matrices/32,2-col_rots_32,2-col_xforms_32,2-row_rots-32,2 n_ones=7207624; n_elems=16777216; in_slots=64; out_slots=64; density=0.4296078681945801; time=0.688997718;
build:matrices/32,2-row_xforms-32,2 n_ones=15028; n_elems=16777216; in_slots=64; out_slots=64; density=0.0008957386016845703; time=0.004918558;
mul_stats:: probes_success=[(1, 6312698), (2, 7750768), (3, 216614)]; probes_failure=[(1, 12160), (2, 513952), (3, 362344), (4, 1608680)];
mul:matrices/32,2-col_rots_32,2-col_xforms_32,2-row_rots_32,2-row_xforms-32,2 n_ones=14280080; n_elems=16777216; in_slots=64; out_slots=64; density=0.8511590957641602; time=0.75041064;
mul_stats:: probes_success=[(1, 14188816), (2, 298840), (3, 201416), (4, 72328), (5, 127320), (6, 30040), (7, 59552), (8, 30888), (9, 65424), (10, 35416), (11, 23528), (12, 13104), (13, 39328), (14, 15824), (15, 25144), (16, 14768), (17, 50328), (18, 57912), (19, 13512), (20, 10968), (21, 9736), (22, 6320), (23, 8568), (24, 6936), (25, 12912), (26, 10064), (27, 10312), (28, 8432), (29, 9496), (30, 7200), (31, 13144), (32, 5728), (33, 11016), (34, 7224), (35, 6648), (36, 4120), (37, 2392), (38, 272), (39, 4456), (40, 1792), (41, 1992), (42, 120), (43, 1072), (44, 1472), (45, 408), (46, 976), (47, 1032), (51, 320), (54, 40), (55, 16)]; probes_failure=[(32, 560128), (36, 50416), (38, 43600), (40, 242240), (42, 131616), (44, 93504), (46, 44672), (48, 36864), (50, 21504), (52, 17536), (54, 4416), (58, 2048)];
mul:matrices/32,2-col_rots_32,2-col_xforms_32,2-row_rots_32,2-row_xforms_32,2-col_rots-32,2 n_ones=15528672; n_elems=16777216; in_slots=64; out_slots=64; density=0.9255809783935547; time=0.915990731;
Begin search
solution:init;load_rep;xform(31,1,2);rot(22);xform(0,1,32);id;xform(30,31,2);grouped(rot(11),16)
solution:init;load_rep;xform(31,1,2);rot(24);xform(0,1,32);id;xform(30,31,2);grouped(rot(12),16)
solution:init;load_rep;xform(31,1,2);rot(20);xform(0,1,32);id;xform(30,31,2);grouped(rot(10),16)
solution:init;load_rep;xform(31,1,2);rot(16);xform(0,1,32);id;xform(30,31,2);grouped(rot(8),16)
solution:init;load_rep;xform(31,1,2);rot(10);xform(0,1,32);id;xform(30,31,2);grouped(rot(5),16)
solution:init;load_rep;xform(31,1,2);rot(14);xform(0,1,32);id;xform(30,31,2);grouped(rot(7),16)
solution:init;load_rep;xform(31,1,2);id;xform(0,1,32);id;xform(30,31,2);id
solution:init;load_rep;xform(31,1,2);rot(4);xform(0,1,32);id;xform(30,31,2);grouped(rot(2),16)
solution:init;load_rep;xform(31,1,2);rot(12);xform(0,1,32);id;xform(30,31,2);grouped(rot(6),16)
solution:init;load_rep;xform(31,1,2);rot(2);xform(0,1,32);id;xform(30,31,2);grouped(rot(1),16)
solution:init;load_rep;xform(31,1,2);rot(6);xform(0,1,32);id;xform(30,31,2);grouped(rot(3),16)
solution:init;load_rep;xform(31,1,2);rot(18);xform(0,1,32);id;xform(30,31,2);grouped(rot(9),16)
solution:init;load_rep;xform(31,1,2);rot(28);xform(0,1,32);id;xform(30,31,2);grouped(rot(14),16)
solution:init;load_rep;xform(31,1,2);rot(30);xform(0,1,32);id;xform(30,31,2);grouped(rot(15),16)
solution:init;load_rep;xform(31,1,2);rot(8);xform(0,1,32);id;xform(30,31,2);grouped(rot(4),16)
solution:init;load_rep;xform(31,1,2);rot(26);xform(0,1,32);id;xform(30,31,2);grouped(rot(13),16)
solution:init;load_rep;xform(13,19,2);rot(22);xform(0,1,32);id;xform(10,5,2);grouped(rot(1),16)
solution:init;load_rep;xform(13,19,2);rot(24);xform(0,1,32);id;xform(10,5,2);grouped(rot(4),16)
solution:init;load_rep;xform(13,19,2);rot(20);xform(0,1,32);id;xform(10,5,2);grouped(rot(14),16)
solution:init;load_rep;xform(13,19,2);rot(16);xform(0,1,32);id;xform(10,5,2);grouped(rot(8),16)
solution:init;load_rep;xform(13,19,2);rot(10);xform(0,1,32);id;xform(10,5,2);grouped(rot(15),16)
solution:init;load_rep;xform(13,19,2);rot(14);xform(0,1,32);id;xform(10,5,2);grouped(rot(5),16)
solution:init;load_rep;xform(13,19,2);id;xform(0,1,32);id;xform(10,5,2);id
solution:init;load_rep;xform(13,19,2);rot(4);xform(0,1,32);id;xform(10,5,2);grouped(rot(6),16)
solution:init;load_rep;xform(13,19,2);rot(12);xform(0,1,32);id;xform(10,5,2);grouped(rot(2),16)
solution:init;load_rep;xform(13,19,2);rot(2);xform(0,1,32);id;xform(10,5,2);grouped(rot(3),16)
solution:init;load_rep;xform(13,19,2);rot(6);xform(0,1,32);id;xform(10,5,2);grouped(rot(9),16)
solution:init;load_rep;xform(13,19,2);rot(18);xform(0,1,32);id;xform(10,5,2);grouped(rot(11),16)
solution:init;load_rep;xform(13,19,2);rot(28);xform(0,1,32);id;xform(10,5,2);grouped(rot(10),16)
solution:init;load_rep;xform(13,19,2);rot(30);xform(0,1,32);id;xform(10,5,2);grouped(rot(13),16)
solution:init;load_rep;xform(13,19,2);rot(8);xform(0,1,32);id;xform(10,5,2);grouped(rot(12),16)
solution:init;load_rep;xform(13,19,2);rot(26);xform(0,1,32);id;xform(10,5,2);grouped(rot(7),16)
solution:init;load_rep;xform(29,29,2);rot(31);xform(0,1,32);rot(1);xform(10,21,2);rot(16)
solution:init;load_rep;xform(3,29,2);rot(22);xform(0,1,32);id;xform(22,11,2);grouped(rot(15),16)
solution:init;load_rep;xform(3,29,2);rot(24);xform(0,1,32);id;xform(22,11,2);grouped(rot(12),16)
solution:init;load_rep;xform(3,29,2);rot(20);xform(0,1,32);id;xform(22,11,2);grouped(rot(2),16)
solution:init;load_rep;xform(3,29,2);rot(16);xform(0,1,32);id;xform(22,11,2);grouped(rot(8),16)
solution:init;load_rep;xform(3,29,2);rot(10);xform(0,1,32);id;xform(22,11,2);grouped(rot(1),16)
solution:init;load_rep;xform(3,29,2);rot(14);xform(0,1,32);id;xform(22,11,2);grouped(rot(11),16)
solution:init;load_rep;xform(3,29,2);id;xform(0,1,32);id;xform(22,11,2);id
solution:init;load_rep;xform(3,29,2);rot(4);xform(0,1,32);id;xform(22,11,2);grouped(rot(10),16)
solution:init;load_rep;xform(3,29,2);rot(12);xform(0,1,32);id;xform(22,11,2);grouped(rot(14),16)
solution:init;load_rep;xform(3,29,2);rot(2);xform(0,1,32);id;xform(22,11,2);grouped(rot(13),16)
solution:init;load_rep;xform(3,29,2);rot(6);xform(0,1,32);id;xform(22,11,2);grouped(rot(7),16)
solution:init;load_rep;xform(3,29,2);rot(18);xform(0,1,32);id;xform(22,11,2);grouped(rot(5),16)
solution:init;load_rep;xform(3,29,2);rot(28);xform(0,1,32);id;xform(22,11,2);grouped(rot(6),16)
solution:init;load_rep;xform(3,29,2);rot(30);xform(0,1,32);id;xform(22,11,2);grouped(rot(3),16)
solution:init;load_rep;xform(3,29,2);rot(8);xform(0,1,32);id;xform(22,11,2);grouped(rot(4),16)
solution:init;load_rep;xform(3,29,2);rot(26);xform(0,1,32);id;xform(22,11,2);grouped(rot(9),16)
solution:init;load_rep;xform(9,23,2);rot(22);xform(0,1,32);id;xform(18,25,2);grouped(rot(13),16)
solution:init;load_rep;xform(9,23,2);rot(24);xform(0,1,32);id;xform(18,25,2);grouped(rot(4),16)
solution:init;load_rep;xform(9,23,2);rot(20);xform(0,1,32);id;xform(18,25,2);grouped(rot(6),16)
solution:init;load_rep;xform(9,23,2);rot(16);xform(0,1,32);id;xform(18,25,2);grouped(rot(8),16)
solution:init;load_rep;xform(9,23,2);rot(10);xform(0,1,32);id;xform(18,25,2);grouped(rot(3),16)
solution:init;load_rep;xform(9,23,2);rot(14);xform(0,1,32);id;xform(18,25,2);grouped(rot(1),16)
solution:init;load_rep;xform(9,23,2);id;xform(0,1,32);id;xform(18,25,2);id
solution:init;load_rep;xform(9,23,2);rot(4);xform(0,1,32);id;xform(18,25,2);grouped(rot(14),16)
solution:init;load_rep;xform(9,23,2);rot(12);xform(0,1,32);id;xform(18,25,2);grouped(rot(10),16)
solution:init;load_rep;xform(9,23,2);rot(2);xform(0,1,32);id;xform(18,25,2);grouped(rot(7),16)
solution:init;load_rep;xform(9,23,2);rot(6);xform(0,1,32);id;xform(18,25,2);grouped(rot(5),16)
solution:init;load_rep;xform(9,23,2);rot(18);xform(0,1,32);id;xform(18,25,2);grouped(rot(15),16)
solution:init;load_rep;xform(9,23,2);rot(28);xform(0,1,32);id;xform(18,25,2);grouped(rot(2),16)
solution:init;load_rep;xform(9,23,2);rot(30);xform(0,1,32);id;xform(18,25,2);grouped(rot(9),16)
solution:init;load_rep;xform(9,23,2);rot(8);xform(0,1,32);id;xform(18,25,2);grouped(rot(12),16)
solution:init;load_rep;xform(9,23,2);rot(26);xform(0,1,32);id;xform(18,25,2);grouped(rot(11),16)
solution:init;load_rep;xform(25,7,2);rot(22);xform(0,1,32);id;xform(18,9,2);grouped(rot(13),16)
solution:init;load_rep;xform(25,7,2);rot(24);xform(0,1,32);id;xform(18,9,2);grouped(rot(4),16)
solution:init;load_rep;xform(25,7,2);rot(20);xform(0,1,32);id;xform(18,9,2);grouped(rot(6),16)
solution:init;load_rep;xform(25,7,2);rot(16);xform(0,1,32);id;xform(18,9,2);grouped(rot(8),16)
solution:init;load_rep;xform(25,7,2);rot(10);xform(0,1,32);id;xform(18,9,2);grouped(rot(3),16)
solution:init;load_rep;xform(25,7,2);rot(14);xform(0,1,32);id;xform(18,9,2);grouped(rot(1),16)
solution:init;load_rep;xform(25,7,2);id;xform(0,1,32);id;xform(18,9,2);id
solution:init;load_rep;xform(25,7,2);rot(4);xform(0,1,32);id;xform(18,9,2);grouped(rot(14),16)
solution:init;load_rep;xform(25,7,2);rot(12);xform(0,1,32);id;xform(18,9,2);grouped(rot(10),16)
solution:init;load_rep;xform(25,7,2);rot(2);xform(0,1,32);id;xform(18,9,2);grouped(rot(7),16)
solution:init;load_rep;xform(25,7,2);rot(6);xform(0,1,32);id;xform(18,9,2);grouped(rot(5),16)
solution:init;load_rep;xform(25,7,2);rot(18);xform(0,1,32);id;xform(18,9,2);grouped(rot(15),16)
solution:init;load_rep;xform(25,7,2);rot(28);xform(0,1,32);id;xform(18,9,2);grouped(rot(2),16)
solution:init;load_rep;xform(25,7,2);rot(30);xform(0,1,32);id;xform(18,9,2);grouped(rot(9),16)
solution:init;load_rep;xform(25,7,2);rot(8);xform(0,1,32);id;xform(18,9,2);grouped(rot(12),16)
solution:init;load_rep;xform(25,7,2);rot(26);xform(0,1,32);id;xform(18,9,2);grouped(rot(11),16)
solution:init;load_rep;xform(19,13,2);rot(22);xform(0,1,32);id;xform(22,27,2);grouped(rot(15),16)
solution:init;load_rep;xform(19,13,2);rot(24);xform(0,1,32);id;xform(22,27,2);grouped(rot(12),16)
solution:init;load_rep;xform(19,13,2);rot(20);xform(0,1,32);id;xform(22,27,2);grouped(rot(2),16)
solution:init;load_rep;xform(19,13,2);rot(16);xform(0,1,32);id;xform(22,27,2);grouped(rot(8),16)
solution:init;load_rep;xform(19,13,2);rot(10);xform(0,1,32);id;xform(22,27,2);grouped(rot(1),16)
solution:init;load_rep;xform(19,13,2);rot(14);xform(0,1,32);id;xform(22,27,2);grouped(rot(11),16)
solution:init;load_rep;xform(19,13,2);id;xform(0,1,32);id;xform(22,27,2);id
solution:init;load_rep;xform(19,13,2);rot(4);xform(0,1,32);id;xform(22,27,2);grouped(rot(10),16)
solution:init;load_rep;xform(19,13,2);rot(12);xform(0,1,32);id;xform(22,27,2);grouped(rot(14),16)
solution:init;load_rep;xform(19,13,2);rot(2);xform(0,1,32);id;xform(22,27,2);grouped(rot(13),16)
solution:init;load_rep;xform(19,13,2);rot(6);xform(0,1,32);id;xform(22,27,2);grouped(rot(7),16)
solution:init;load_rep;xform(19,13,2);rot(18);xform(0,1,32);id;xform(22,27,2);grouped(rot(5),16)
solution:init;load_rep;xform(19,13,2);rot(28);xform(0,1,32);id;xform(22,27,2);grouped(rot(6),16)
solution:init;load_rep;xform(19,13,2);rot(30);xform(0,1,32);id;xform(22,27,2);grouped(rot(3),16)
solution:init;load_rep;xform(19,13,2);rot(8);xform(0,1,32);id;xform(22,27,2);grouped(rot(4),16)
solution:init;load_rep;xform(19,13,2);rot(26);xform(0,1,32);id;xform(22,27,2);grouped(rot(9),16)
solution:init;load_rep;xform(23,23,2);rot(31);xform(0,1,32);rot(1);xform(14,7,2);rot(16)
solution:init;load_rep;xform(0,31,2);rot(22);xform(0,1,32);id;xform(2,1,2);grouped(rot(5),16)
solution:init;load_rep;xform(0,31,2);rot(24);xform(0,1,32);id;xform(2,1,2);grouped(rot(4),16)
solution:init;load_rep;xform(0,31,2);rot(20);xform(0,1,32);id;xform(2,1,2);grouped(rot(6),16)
solution:init;load_rep;xform(0,31,2);rot(16);xform(0,1,32);id;xform(2,1,2);grouped(rot(8),16)
solution:init;load_rep;xform(0,31,2);rot(10);xform(0,1,32);id;xform(2,1,2);grouped(rot(11),16)
solution:init;load_rep;xform(0,31,2);rot(14);xform(0,1,32);id;xform(2,1,2);grouped(rot(9),16)
solution:init;load_rep;xform(0,31,2);id;xform(0,1,32);id;xform(2,1,2);id
solution:init;load_rep;xform(0,31,2);rot(4);xform(0,1,32);id;xform(2,1,2);grouped(rot(14),16)
solution:init;load_rep;xform(0,31,2);rot(12);xform(0,1,32);id;xform(2,1,2);grouped(rot(10),16)
solution:init;load_rep;xform(0,31,2);rot(2);xform(0,1,32);id;xform(2,1,2);grouped(rot(15),16)
solution:init;load_rep;xform(0,31,2);rot(6);xform(0,1,32);id;xform(2,1,2);grouped(rot(13),16)
solution:init;load_rep;xform(0,31,2);rot(18);xform(0,1,32);id;xform(2,1,2);grouped(rot(7),16)
solution:init;load_rep;xform(0,31,2);rot(28);xform(0,1,32);id;xform(2,1,2);grouped(rot(2),16)
solution:init;load_rep;xform(0,31,2);rot(30);xform(0,1,32);id;xform(2,1,2);grouped(rot(1),16)
solution:init;load_rep;xform(0,31,2);rot(8);xform(0,1,32);id;xform(2,1,2);grouped(rot(12),16)
solution:init;load_rep;xform(0,31,2);rot(26);xform(0,1,32);id;xform(2,1,2);grouped(rot(3),16)
solution:init;load_rep;xform(19,19,2);rot(31);xform(0,1,32);rot(1);xform(22,27,2);rot(16)
solution:init;load_rep;xform(15,17,2);rot(22);xform(0,1,32);id;xform(30,15,2);grouped(rot(11),16)
solution:init;load_rep;xform(15,17,2);rot(24);xform(0,1,32);id;xform(30,15,2);grouped(rot(12),16)
solution:init;load_rep;xform(15,17,2);rot(20);xform(0,1,32);id;xform(30,15,2);grouped(rot(10),16)
solution:init;load_rep;xform(15,17,2);rot(16);xform(0,1,32);id;xform(30,15,2);grouped(rot(8),16)
solution:init;load_rep;xform(15,17,2);rot(10);xform(0,1,32);id;xform(30,15,2);grouped(rot(5),16)
solution:init;load_rep;xform(15,17,2);rot(14);xform(0,1,32);id;xform(30,15,2);grouped(rot(7),16)
solution:init;load_rep;xform(15,17,2);id;xform(0,1,32);id;xform(30,15,2);id
solution:init;load_rep;xform(15,17,2);rot(4);xform(0,1,32);id;xform(30,15,2);grouped(rot(2),16)
solution:init;load_rep;xform(15,17,2);rot(12);xform(0,1,32);id;xform(30,15,2);grouped(rot(6),16)
solution:init;load_rep;xform(15,17,2);rot(2);xform(0,1,32);id;xform(30,15,2);grouped(rot(1),16)
solution:init;load_rep;xform(15,17,2);rot(6);xform(0,1,32);id;xform(30,15,2);grouped(rot(3),16)
solution:init;load_rep;xform(15,17,2);rot(18);xform(0,1,32);id;xform(30,15,2);grouped(rot(9),16)
solution:init;load_rep;xform(15,17,2);rot(28);xform(0,1,32);id;xform(30,15,2);grouped(rot(14),16)
solution:init;load_rep;xform(15,17,2);rot(30);xform(0,1,32);id;xform(30,15,2);grouped(rot(15),16)
solution:init;load_rep;xform(15,17,2);rot(8);xform(0,1,32);id;xform(30,15,2);grouped(rot(4),16)
solution:init;load_rep;xform(15,17,2);rot(26);xform(0,1,32);id;xform(30,15,2);grouped(rot(13),16)
solution:init;load_rep;xform(27,27,2);rot(31);xform(0,1,32);rot(1);xform(6,19,2);rot(16)
solution:init;load_rep;xform(5,27,2);rot(22);xform(0,1,32);id;xform(26,13,2);grouped(rot(9),16)
solution:init;load_rep;xform(5,27,2);rot(24);xform(0,1,32);id;xform(26,13,2);grouped(rot(4),16)
solution:init;load_rep;xform(5,27,2);rot(20);xform(0,1,32);id;xform(26,13,2);grouped(rot(14),16)
solution:init;load_rep;xform(5,27,2);rot(16);xform(0,1,32);id;xform(26,13,2);grouped(rot(8),16)
solution:init;load_rep;xform(5,27,2);rot(10);xform(0,1,32);id;xform(26,13,2);grouped(rot(7),16)
solution:init;load_rep;xform(5,27,2);rot(14);xform(0,1,32);id;xform(26,13,2);grouped(rot(13),16)
solution:init;load_rep;xform(5,27,2);id;xform(0,1,32);id;xform(26,13,2);id
solution:init;load_rep;xform(5,27,2);rot(4);xform(0,1,32);id;xform(26,13,2);grouped(rot(6),16)
solution:init;load_rep;xform(5,27,2);rot(12);xform(0,1,32);id;xform(26,13,2);grouped(rot(2),16)
solution:init;load_rep;xform(5,27,2);rot(2);xform(0,1,32);id;xform(26,13,2);grouped(rot(11),16)
solution:init;load_rep;xform(5,27,2);rot(6);xform(0,1,32);id;xform(26,13,2);grouped(rot(1),16)
solution:init;load_rep;xform(5,27,2);rot(18);xform(0,1,32);id;xform(26,13,2);grouped(rot(3),16)
solution:init;load_rep;xform(5,27,2);rot(28);xform(0,1,32);id;xform(26,13,2);grouped(rot(10),16)
solution:init;load_rep;xform(5,27,2);rot(30);xform(0,1,32);id;xform(26,13,2);grouped(rot(5),16)
solution:init;load_rep;xform(5,27,2);rot(8);xform(0,1,32);id;xform(26,13,2);grouped(rot(12),16)
solution:init;load_rep;xform(5,27,2);rot(26);xform(0,1,32);id;xform(26,13,2);grouped(rot(15),16)
solution:init;load_rep;xform(31,31,2);rot(31);xform(0,1,32);rot(1);xform(30,31,2);rot(16)
solution:init;load_rep;xform(0,1,2);rot(31);xform(0,1,32);rot(1);xform(2,1,2);rot(16)
solution:init;load_rep;xform(17,17,2);rot(31);xform(0,1,32);rot(1);xform(2,17,2);rot(16)
solution:init;load_rep;xform(13,13,2);rot(31);xform(0,1,32);rot(1);xform(10,5,2);rot(16)
solution:init;load_rep;xform(3,3,2);rot(31);xform(0,1,32);rot(1);xform(22,11,2);rot(16)
solution:init;load_rep;xform(15,15,2);rot(31);xform(0,1,32);rot(1);xform(30,15,2);rot(16)
solution:init;load_rep;xform(7,7,2);rot(31);xform(0,1,32);rot(1);xform(14,23,2);rot(16)
solution:init;load_rep;xform(9,9,2);rot(31);xform(0,1,32);rot(1);xform(18,25,2);rot(16)
solution:init;load_rep;xform(29,3,2);rot(22);xform(0,1,32);id;xform(10,21,2);grouped(rot(1),16)
solution:init;load_rep;xform(29,3,2);rot(24);xform(0,1,32);id;xform(10,21,2);grouped(rot(4),16)
solution:init;load_rep;xform(29,3,2);rot(20);xform(0,1,32);id;xform(10,21,2);grouped(rot(14),16)
solution:init;load_rep;xform(29,3,2);rot(16);xform(0,1,32);id;xform(10,21,2);grouped(rot(8),16)
solution:init;load_rep;xform(29,3,2);rot(10);xform(0,1,32);id;xform(10,21,2);grouped(rot(15),16)
solution:init;load_rep;xform(29,3,2);rot(14);xform(0,1,32);id;xform(10,21,2);grouped(rot(5),16)
solution:init;load_rep;xform(29,3,2);id;xform(0,1,32);id;xform(10,21,2);id
solution:init;load_rep;xform(29,3,2);rot(4);xform(0,1,32);id;xform(10,21,2);grouped(rot(6),16)
solution:init;load_rep;xform(29,3,2);rot(12);xform(0,1,32);id;xform(10,21,2);grouped(rot(2),16)
solution:init;load_rep;xform(29,3,2);rot(2);xform(0,1,32);id;xform(10,21,2);grouped(rot(3),16)
solution:init;load_rep;xform(29,3,2);rot(6);xform(0,1,32);id;xform(10,21,2);grouped(rot(9),16)
solution:init;load_rep;xform(29,3,2);rot(18);xform(0,1,32);id;xform(10,21,2);grouped(rot(11),16)
solution:init;load_rep;xform(29,3,2);rot(28);xform(0,1,32);id;xform(10,21,2);grouped(rot(10),16)
solution:init;load_rep;xform(29,3,2);rot(30);xform(0,1,32);id;xform(10,21,2);grouped(rot(13),16)
solution:init;load_rep;xform(29,3,2);rot(8);xform(0,1,32);id;xform(10,21,2);grouped(rot(12),16)
solution:init;load_rep;xform(29,3,2);rot(26);xform(0,1,32);id;xform(10,21,2);grouped(rot(7),16)
solution:init;load_rep;xform(17,15,2);rot(22);xform(0,1,32);id;xform(2,17,2);grouped(rot(5),16)
solution:init;load_rep;xform(17,15,2);rot(24);xform(0,1,32);id;xform(2,17,2);grouped(rot(4),16)
solution:init;load_rep;xform(17,15,2);rot(20);xform(0,1,32);id;xform(2,17,2);grouped(rot(6),16)
solution:init;load_rep;xform(17,15,2);rot(16);xform(0,1,32);id;xform(2,17,2);grouped(rot(8),16)
solution:init;load_rep;xform(17,15,2);rot(10);xform(0,1,32);id;xform(2,17,2);grouped(rot(11),16)
solution:init;load_rep;xform(17,15,2);rot(14);xform(0,1,32);id;xform(2,17,2);grouped(rot(9),16)
solution:init;load_rep;xform(17,15,2);id;xform(0,1,32);id;xform(2,17,2);id
solution:init;load_rep;xform(17,15,2);rot(4);xform(0,1,32);id;xform(2,17,2);grouped(rot(14),16)
solution:init;load_rep;xform(17,15,2);rot(12);xform(0,1,32);id;xform(2,17,2);grouped(rot(10),16)
solution:init;load_rep;xform(17,15,2);rot(2);xform(0,1,32);id;xform(2,17,2);grouped(rot(15),16)
solution:init;load_rep;xform(17,15,2);rot(6);xform(0,1,32);id;xform(2,17,2);grouped(rot(13),16)
solution:init;load_rep;xform(17,15,2);rot(18);xform(0,1,32);id;xform(2,17,2);grouped(rot(7),16)
solution:init;load_rep;xform(17,15,2);rot(28);xform(0,1,32);id;xform(2,17,2);grouped(rot(2),16)
solution:init;load_rep;xform(17,15,2);rot(30);xform(0,1,32);id;xform(2,17,2);grouped(rot(1),16)
solution:init;load_rep;xform(17,15,2);rot(8);xform(0,1,32);id;xform(2,17,2);grouped(rot(12),16)
solution:init;load_rep;xform(17,15,2);rot(26);xform(0,1,32);id;xform(2,17,2);grouped(rot(3),16)
solution:init;load_rep;xform(11,21,2);rot(22);xform(0,1,32);id;xform(6,3,2);grouped(rot(7),16)
solution:init;load_rep;xform(11,21,2);rot(24);xform(0,1,32);id;xform(6,3,2);grouped(rot(12),16)
solution:init;load_rep;xform(11,21,2);rot(20);xform(0,1,32);id;xform(6,3,2);grouped(rot(2),16)
solution:init;load_rep;xform(11,21,2);rot(16);xform(0,1,32);id;xform(6,3,2);grouped(rot(8),16)
solution:init;load_rep;xform(11,21,2);rot(10);xform(0,1,32);id;xform(6,3,2);grouped(rot(9),16)
solution:init;load_rep;xform(11,21,2);rot(14);xform(0,1,32);id;xform(6,3,2);grouped(rot(3),16)
solution:init;load_rep;xform(11,21,2);id;xform(0,1,32);id;xform(6,3,2);id
solution:init;load_rep;xform(11,21,2);rot(4);xform(0,1,32);id;xform(6,3,2);grouped(rot(10),16)
solution:init;load_rep;xform(11,21,2);rot(12);xform(0,1,32);id;xform(6,3,2);grouped(rot(14),16)
solution:init;load_rep;xform(11,21,2);rot(2);xform(0,1,32);id;xform(6,3,2);grouped(rot(5),16)
solution:init;load_rep;xform(11,21,2);rot(6);xform(0,1,32);id;xform(6,3,2);grouped(rot(15),16)
solution:init;load_rep;xform(11,21,2);rot(18);xform(0,1,32);id;xform(6,3,2);grouped(rot(13),16)
solution:init;load_rep;xform(11,21,2);rot(28);xform(0,1,32);id;xform(6,3,2);grouped(rot(6),16)
solution:init;load_rep;xform(11,21,2);rot(30);xform(0,1,32);id;xform(6,3,2);grouped(rot(11),16)
solution:init;load_rep;xform(11,21,2);rot(8);xform(0,1,32);id;xform(6,3,2);grouped(rot(4),16)
solution:init;load_rep;xform(11,21,2);rot(26);xform(0,1,32);id;xform(6,3,2);grouped(rot(1),16)
solution:init;load_rep;xform(21,11,2);rot(22);xform(0,1,32);id;xform(26,29,2);grouped(rot(9),16)
solution:init;load_rep;xform(21,11,2);rot(24);xform(0,1,32);id;xform(26,29,2);grouped(rot(4),16)
solution:init;load_rep;xform(21,11,2);rot(20);xform(0,1,32);id;xform(26,29,2);grouped(rot(14),16)
solution:init;load_rep;xform(21,11,2);rot(16);xform(0,1,32);id;xform(26,29,2);grouped(rot(8),16)
solution:init;load_rep;xform(21,11,2);rot(10);xform(0,1,32);id;xform(26,29,2);grouped(rot(7),16)
solution:init;load_rep;xform(21,11,2);rot(14);xform(0,1,32);id;xform(26,29,2);grouped(rot(13),16)
solution:init;load_rep;xform(21,11,2);id;xform(0,1,32);id;xform(26,29,2);id
solution:init;load_rep;xform(21,11,2);rot(4);xform(0,1,32);id;xform(26,29,2);grouped(rot(6),16)
solution:init;load_rep;xform(21,11,2);rot(12);xform(0,1,32);id;xform(26,29,2);grouped(rot(2),16)
solution:init;load_rep;xform(21,11,2);rot(2);xform(0,1,32);id;xform(26,29,2);grouped(rot(11),16)
solution:init;load_rep;xform(21,11,2);rot(6);xform(0,1,32);id;xform(26,29,2);grouped(rot(1),16)
solution:init;load_rep;xform(21,11,2);rot(18);xform(0,1,32);id;xform(26,29,2);grouped(rot(3),16)
solution:init;load_rep;xform(21,11,2);rot(28);xform(0,1,32);id;xform(26,29,2);grouped(rot(10),16)
solution:init;load_rep;xform(21,11,2);rot(30);xform(0,1,32);id;xform(26,29,2);grouped(rot(5),16)
solution:init;load_rep;xform(21,11,2);rot(8);xform(0,1,32);id;xform(26,29,2);grouped(rot(12),16)
solution:init;load_rep;xform(21,11,2);rot(26);xform(0,1,32);id;xform(26,29,2);grouped(rot(15),16)
solution:init;load_rep;xform(21,21,2);rot(31);xform(0,1,32);rot(1);xform(26,29,2);rot(16)
solution:init;load_rep;xform(7,25,2);rot(22);xform(0,1,32);id;xform(14,23,2);grouped(rot(3),16)
solution:init;load_rep;xform(7,25,2);rot(24);xform(0,1,32);id;xform(14,23,2);grouped(rot(12),16)
solution:init;load_rep;xform(7,25,2);rot(20);xform(0,1,32);id;xform(14,23,2);grouped(rot(10),16)
solution:init;load_rep;xform(7,25,2);rot(16);xform(0,1,32);id;xform(14,23,2);grouped(rot(8),16)
solution:init;load_rep;xform(7,25,2);rot(10);xform(0,1,32);id;xform(14,23,2);grouped(rot(13),16)
solution:init;load_rep;xform(7,25,2);rot(14);xform(0,1,32);id;xform(14,23,2);grouped(rot(15),16)
solution:init;load_rep;xform(7,25,2);id;xform(0,1,32);id;xform(14,23,2);id
solution:init;load_rep;xform(7,25,2);rot(4);xform(0,1,32);id;xform(14,23,2);grouped(rot(2),16)
solution:init;load_rep;xform(7,25,2);rot(12);xform(0,1,32);id;xform(14,23,2);grouped(rot(6),16)
solution:init;load_rep;xform(7,25,2);rot(2);xform(0,1,32);id;xform(14,23,2);grouped(rot(9),16)
solution:init;load_rep;xform(7,25,2);rot(6);xform(0,1,32);id;xform(14,23,2);grouped(rot(11),16)
solution:init;load_rep;xform(7,25,2);rot(18);xform(0,1,32);id;xform(14,23,2);grouped(rot(1),16)
solution:init;load_rep;xform(7,25,2);rot(28);xform(0,1,32);id;xform(14,23,2);grouped(rot(14),16)
solution:init;load_rep;xform(7,25,2);rot(30);xform(0,1,32);id;xform(14,23,2);grouped(rot(7),16)
solution:init;load_rep;xform(7,25,2);rot(8);xform(0,1,32);id;xform(14,23,2);grouped(rot(4),16)
solution:init;load_rep;xform(7,25,2);rot(26);xform(0,1,32);id;xform(14,23,2);grouped(rot(5),16)
solution:init;load_rep;xform(5,5,2);rot(31);xform(0,1,32);rot(1);xform(26,13,2);rot(16)
solution:init;load_rep;xform(25,25,2);rot(31);xform(0,1,32);rot(1);xform(18,9,2);rot(16)
solution:init;load_rep;xform(11,11,2);rot(31);xform(0,1,32);rot(1);xform(6,3,2);rot(16)
solution:init;load_rep;xform(23,9,2);rot(22);xform(0,1,32);id;xform(14,7,2);grouped(rot(3),16)
solution:init;load_rep;xform(23,9,2);rot(24);xform(0,1,32);id;xform(14,7,2);grouped(rot(12),16)
solution:init;load_rep;xform(23,9,2);rot(20);xform(0,1,32);id;xform(14,7,2);grouped(rot(10),16)
solution:init;load_rep;xform(23,9,2);rot(16);xform(0,1,32);id;xform(14,7,2);grouped(rot(8),16)
solution:init;load_rep;xform(23,9,2);rot(10);xform(0,1,32);id;xform(14,7,2);grouped(rot(13),16)
solution:init;load_rep;xform(23,9,2);rot(14);xform(0,1,32);id;xform(14,7,2);grouped(rot(15),16)
solution:init;load_rep;xform(23,9,2);id;xform(0,1,32);id;xform(14,7,2);id
solution:init;load_rep;xform(23,9,2);rot(4);xform(0,1,32);id;xform(14,7,2);grouped(rot(2),16)
solution:init;load_rep;xform(23,9,2);rot(12);xform(0,1,32);id;xform(14,7,2);grouped(rot(6),16)
solution:init;load_rep;xform(23,9,2);rot(2);xform(0,1,32);id;xform(14,7,2);grouped(rot(9),16)
solution:init;load_rep;xform(23,9,2);rot(6);xform(0,1,32);id;xform(14,7,2);grouped(rot(11),16)
solution:init;load_rep;xform(23,9,2);rot(18);xform(0,1,32);id;xform(14,7,2);grouped(rot(1),16)
solution:init;load_rep;xform(23,9,2);rot(28);xform(0,1,32);id;xform(14,7,2);grouped(rot(14),16)
solution:init;load_rep;xform(23,9,2);rot(30);xform(0,1,32);id;xform(14,7,2);grouped(rot(7),16)
solution:init;load_rep;xform(23,9,2);rot(8);xform(0,1,32);id;xform(14,7,2);grouped(rot(4),16)
solution:init;load_rep;xform(23,9,2);rot(26);xform(0,1,32);id;xform(14,7,2);grouped(rot(5),16)
solution:init;load_rep;xform(27,5,2);rot(22);xform(0,1,32);id;xform(6,19,2);grouped(rot(7),16)
solution:init;load_rep;xform(27,5,2);rot(24);xform(0,1,32);id;xform(6,19,2);grouped(rot(12),16)
solution:init;load_rep;xform(27,5,2);rot(20);xform(0,1,32);id;xform(6,19,2);grouped(rot(2),16)
solution:init;load_rep;xform(27,5,2);rot(16);xform(0,1,32);id;xform(6,19,2);grouped(rot(8),16)
solution:init;load_rep;xform(27,5,2);rot(10);xform(0,1,32);id;xform(6,19,2);grouped(rot(9),16)
solution:init;load_rep;xform(27,5,2);rot(14);xform(0,1,32);id;xform(6,19,2);grouped(rot(3),16)
solution:init;load_rep;xform(27,5,2);id;xform(0,1,32);id;xform(6,19,2);id
solution:init;load_rep;xform(27,5,2);rot(4);xform(0,1,32);id;xform(6,19,2);grouped(rot(10),16)
solution:init;load_rep;xform(27,5,2);rot(12);xform(0,1,32);id;xform(6,19,2);grouped(rot(14),16)
solution:init;load_rep;xform(27,5,2);rot(2);xform(0,1,32);id;xform(6,19,2);grouped(rot(5),16)
solution:init;load_rep;xform(27,5,2);rot(6);xform(0,1,32);id;xform(6,19,2);grouped(rot(15),16)
solution:init;load_rep;xform(27,5,2);rot(18);xform(0,1,32);id;xform(6,19,2);grouped(rot(13),16)
solution:init;load_rep;xform(27,5,2);rot(28);xform(0,1,32);id;xform(6,19,2);grouped(rot(6),16)
solution:init;load_rep;xform(27,5,2);rot(30);xform(0,1,32);id;xform(6,19,2);grouped(rot(11),16)
solution:init;load_rep;xform(27,5,2);rot(8);xform(0,1,32);id;xform(6,19,2);grouped(rot(4),16)
solution:init;load_rep;xform(27,5,2);rot(26);xform(0,1,32);id;xform(6,19,2);grouped(rot(1),16)
stats:0 name=load_rep; lane=0; tested=1; found=0; failed=0; pruned=0; continued=1; target_checks=[];
stats:1 name=col_xforms; lane=0; tested=1298; found=0; failed=0; pruned=1231; continued=67; target_checks=[(10, 32), (30, 754), (40, 251), (50, 37), (60, 13), (90, 86), (100, 37), (200, 8), (400, 6), (500, 3), (600, 1), (900, 1), (1000, 2)];
stats:2 name=col_rots; lane=0; tested=3886; found=0; failed=0; pruned=3586; continued=300; target_checks=[(2, 193), (4, 161), (6, 89), (8, 120), (10, 438), (20, 203), (30, 1620), (40, 17), (50, 14), (60, 22), (90, 220), (100, 70), (200, 135), (300, 81), (400, 75), (500, 35), (600, 31), (700, 27), (800, 34), (1500, 1)];
stats:3 name=row_xforms; lane=0; tested=3000; found=0; failed=0; pruned=2700; continued=300; target_checks=[(1, 1500), (2, 730), (3, 172), (4, 122), (5, 34), (6, 32), (7, 24), (8, 32), (9, 4), (10, 50)];
stats:4 name=row_rots; lane=0; tested=600; found=0; failed=0; pruned=300; continued=300; target_checks=[(1, 300)];
stats:5 name=col_xforms; lane=0; tested=389400; found=0; failed=0; pruned=389128; continued=272; target_checks=[(1, 376737), (2, 12121), (3, 39), (4, 94), (5, 8), (6, 22), (7, 3), (8, 21), (9, 1), (10, 37), (30, 29), (100, 16)];
stats:6 name=col_rots; lane=0; tested=15776; found=0; failed=0; pruned=0; continued=15776; target_checks=[];
stats:7 name=(last); lane=0; tested=15776; found=272; failed=15504; pruned=0; continued=0; target_checks=[];
search:specs/swinv_like/l3/trove-rcr-2.json success=true; mode=All; time=2.401972876;
spec:specs/swinv_like/l3/trove-cr_sum-2.json
WARNING: It doesn't make sense to prune after the last instructions are applied. Suppressing.
build:matrices/32-col_rots-32,2 n_ones=170752; n_elems=4194304; in_slots=64; out_slots=32; density=0.04071044921875; time=0.027287685;
Using newly-built matrices/32-col_rots-32,2
load:matrices/32,2-col_xforms-32,2 n_ones=1765773; n_elems=16777216; in_slots=64; out_slots=64; density=0.10524827241897583; time=0.011875616;
mul_stats:: probes_success=[(1, 19069), (2, 32768), (3, 379955), (4, 381978), (5, 192023), (6, 853792), (7, 291350), (8, 68334), (9, 44302), (10, 573157), (20, 133881), (30, 79721), (40, 84870), (50, 63427), (60, 71121), (70, 67345), (80, 47961), (90, 33931), (100, 183723), (200, 1104)]; probes_failure=[(100, 566054), (200, 24438)];
mul:matrices/32-col_rots_32,2-col_xforms-32,2 n_ones=3603812; n_elems=4194304; in_slots=64; out_slots=32; density=0.8592157363891602; time=1.03293591;
load:matrices/32,2-row_rots-32,2 n_ones=8192; n_elems=16777216; in_slots=64; out_slots=64; density=0.00048828125; time=0.011458629;
mul_stats:: probes_success=[(1, 3420456), (2, 366712)]; probes_failure=[(2, 407136)];
mul:matrices/32-col_rots_32,2-col_xforms_32,2-row_rots-32,2 n_ones=3787168; n_elems=4194304; in_slots=64; out_slots=32; density=0.9029312133789063; time=0.271203742;
Begin search
stats:0 name=load_rep; lane=0; tested=1; found=0; failed=0; pruned=0; continued=1; target_checks=[];
stats:1 name=row_xforms; lane=0; tested=10; found=0; failed=0; pruned=5; continued=5; target_checks=[(1, 5)];
stats:2 name=row_rots; lane=0; tested=10; found=0; failed=0; pruned=8; continued=2; target_checks=[(5, 1), (9, 1), (10, 1), (30, 1), (90, 1), (100, 3)];
stats:3 name=col_xforms; lane=0; tested=2596; found=0; failed=0; pruned=2596; continued=0; target_checks=[(1, 2482), (2, 106), (4, 2), (8, 2), (10, 2), (30, 2)];
stats:4 name=col_rots; lane=0; tested=0; found=0; failed=0; pruned=0; continued=0; target_checks=[];
stats:5 name=(last); lane=0; tested=0; found=0; failed=0; pruned=0; continued=0; target_checks=[];
search:specs/swinv_like/l3/trove-cr_sum-2.json success=false; mode=All; time=0.021113682;
spec:specs/swinv_like/l3/trove-cr_sum-5.json
WARNING: It doesn't make sense to prune after the last instructions are applied. Suppressing.
build:matrices/32-col_rots-32,5 n_ones=1067200; n_elems=26214400; in_slots=160; out_slots=32; density=0.04071044921875; time=0.16886095;
Using newly-built matrices/32-col_rots-32,5
load:matrices/32,5-col_xforms-32,5 n_ones=11605233; n_elems=655360000; in_slots=160; out_slots=160; density=0.017708180236816407; time=0.539407652;
mul_stats:: probes_success=[(1, 19069), (2, 32768), (3, 31984), (4, 32768), (5, 27668), (6, 379955), (7, 381978), (8, 393395), (9, 390516), (10, 4005399), (20, 3330714), (30, 3252011), (40, 3013309), (50, 1214411), (60, 676040), (70, 955718), (80, 480825), (90, 810143), (100, 1901737), (200, 944269), (300, 662139), (400, 622928), (500, 290611), (600, 255245), (700, 186112), (800, 159544), (900, 83543), (1000, 37172), (1100, 14453), (1200, 3863), (1300, 1726), (1400, 381)]; probes_failure=[(800, 461824), (900, 162028), (1000, 647986), (1100, 210254), (1200, 109388), (1300, 28106), (1400, 2420)];
mul:matrices/32-col_rots_32,5-col_xforms-32,5 n_ones=24592394; n_elems=26214400; in_slots=160; out_slots=32; density=0.9381253814697266; time=22.249781857;
load:matrices/32,5-row_rots-32,5 n_ones=128000; n_elems=655360000; in_slots=160; out_slots=160; density=0.0001953125; time=0.536607883;
mul_stats:: probes_success=[(1, 23732765), (2, 1381875), (4, 81920)]; probes_failure=[(5, 1017840)];
mul:matrices/32-col_rots_32,5-col_xforms_32,5-row_rots-32,5 n_ones=25196560; n_elems=26214400; in_slots=160; out_slots=32; density=0.9611724853515625; time=6.701390365;
Begin search
solution:init;load_rep;xform(2,2,32);rot(1);xform(5,31,5);rot(20)
solution:init;load_rep;xform(3,2,32);id;xform(5,1,5);id
stats:0 name=load_rep; lane=0; tested=1; found=0; failed=0; pruned=0; continued=1; target_checks=[];
stats:1 name=row_xforms; lane=0; tested=100; found=0; failed=0; pruned=96; continued=4; target_checks=[(1, 20), (2, 4), (3, 4), (4, 4), (20, 16), (40, 32), (80, 8), (100, 8)];
stats:2 name=row_rots; lane=0; tested=20; found=0; failed=0; pruned=18; continued=2; target_checks=[(1, 8), (3, 6), (100, 4)];
stats:3 name=col_xforms; lane=0; tested=2728; found=0; failed=0; pruned=2726; continued=2; target_checks=[(1, 2566), (2, 32), (4, 24), (5, 99), (8, 3), (10, 2)];
stats:4 name=col_rots; lane=0; tested=116; found=0; failed=0; pruned=0; continued=116; target_checks=[];
stats:5 name=(last); lane=0; tested=116; found=2; failed=114; pruned=0; continued=0; target_checks=[];
search:specs/swinv_like/l3/trove-cr_sum-5.json success=true; mode=All; time=0.04862301;
spec:specs/swinv_like/l3/trove-crc-2.json
load:matrices/32,2-row_rots-32,2 n_ones=8192; n_elems=16777216; in_slots=64; out_slots=64; density=0.00048828125; time=0.010953866;
load:matrices/32,2-row_xforms-32,2 n_ones=15028; n_elems=16777216; in_slots=64; out_slots=64; density=0.0008957386016845703; time=0.010832962;
mul_stats:: probes_success=[(1, 15028), (2, 1100)]; probes_failure=[(2, 16761088)];
mul:matrices/32,2-row_rots_32,2-row_xforms-32,2 n_ones=16128; n_elems=16777216; in_slots=64; out_slots=64; density=0.0009613037109375; time=0.509912291;
load:matrices/32,2-col_rots-32,2 n_ones=170752; n_elems=16777216; in_slots=64; out_slots=64; density=0.0101776123046875; time=0.010811016;
mul_stats:: probes_success=[(1, 170752), (2, 170752), (3, 166656), (4, 166656)]; probes_failure=[(2, 516096), (4, 15586304)];
mul:matrices/32,2-row_rots_32,2-row_xforms_32,2-col_rots-32,2 n_ones=674816; n_elems=16777216; in_slots=64; out_slots=64; density=0.04022216796875; time=0.690761734;
load:matrices/32,2-col_xforms-32,2 n_ones=1765773; n_elems=16777216; in_slots=64; out_slots=64; density=0.10524827241897583; time=0.010923582;
mul_stats:: probes_success=[(1, 78260), (2, 131072), (3, 1581196), (4, 1587304), (5, 764124), (6, 3288192), (7, 1038424), (8, 273336), (9, 177208), (10, 2292628), (20, 535524), (30, 318884), (40, 339480), (50, 253708), (60, 284484), (70, 269380), (80, 191844), (90, 135724), (100, 734892), (200, 4416)]; probes_failure=[(60, 389120), (100, 2010264), (200, 97752)];
mul:matrices/32,2-row_rots_32,2-row_xforms_32,2-col_rots_32,2-col_xforms-32,2 n_ones=14280080; n_elems=16777216; in_slots=64; out_slots=64; density=0.8511590957641602; time=3.880950812;
load:matrices/32,2-row_rots-32,2 n_ones=8192; n_elems=16777216; in_slots=64; out_slots=64; density=0.00048828125; time=0.010849893;
mul_stats:: probes_success=[(1, 13546656), (2, 1466848)]; probes_failure=[(2, 1763712)];
mul:matrices/32,2-row_rots_32,2-row_xforms_32,2-col_rots_32,2-col_xforms_32,2-row_rots-32,2 n_ones=15013504; n_elems=16777216; in_slots=64; out_slots=64; density=0.8948745727539063; time=0.717523269;
Begin search
stats:0 name=load_rep; lane=0; tested=1; found=0; failed=0; pruned=0; continued=1; target_checks=[];
stats:1 name=row_xforms; lane=0; tested=10; found=0; failed=0; pruned=5; continued=5; target_checks=[(1, 5)];
stats:2 name=row_rots; lane=0; tested=10; found=0; failed=0; pruned=8; continued=2; target_checks=[(5, 1), (9, 1), (10, 1), (30, 1), (90, 1), (100, 3)];
stats:3 name=col_xforms; lane=0; tested=2596; found=0; failed=0; pruned=2596; continued=0; target_checks=[(1, 2482), (2, 106), (4, 2), (8, 2), (10, 2), (30, 2)];
stats:4 name=col_rots; lane=0; tested=0; found=0; failed=0; pruned=0; continued=0; target_checks=[];
stats:5 name=row_xforms; lane=0; tested=0; found=0; failed=0; pruned=0; continued=0; target_checks=[];
stats:6 name=row_rots; lane=0; tested=0; found=0; failed=0; pruned=0; continued=0; target_checks=[];
stats:7 name=(last); lane=0; tested=0; found=0; failed=0; pruned=0; continued=0; target_checks=[];
search:specs/swinv_like/l3/trove-crc-2.json success=false; mode=All; time=0.01680188;
spec:specs/swinv_like/l1/trove-crc-3.json
build:matrices/32,3-row_rots_no_group-32,3 n_ones=27648; n_elems=84934656; in_slots=96; out_slots=96; density=0.0003255208333333333; time=0.005807049;
Using newly-built matrices/32,3-row_rots_no_group-32,3
build:matrices/32,3-row_xforms_no_group-32,3 n_ones=72485; n_elems=84934656; in_slots=96; out_slots=96; density=0.0008534207756136671; time=0.037920633;
mul_stats:: probes_success=[(1, 68775), (2, 11238), (3, 753)]; probes_failure=[(3, 84853890)];
mul:matrices/32,3-row_rots_no_group_32,3-row_xforms_no_group-32,3 n_ones=80766; n_elems=84934656; in_slots=96; out_slots=96; density=0.0009509192572699653; time=2.904014641;
load:matrices/32,3-col_rots_no_group-32,3 n_ones=294912; n_elems=84934656; in_slots=96; out_slots=96; density=0.003472222222222222; time=0.05998365;
mul_stats:: probes_success=[(1, 294912), (2, 294912), (3, 294912), (4, 291840), (5, 291840), (6, 291840), (7, 274752), (8, 274752), (9, 274752)]; probes_failure=[(3, 875520), (6, 4818816), (9, 76655808)];
mul:matrices/32,3-row_rots_no_group_32,3-row_xforms_no_group_32,3-col_rots_no_group-32,3 n_ones=2584512; n_elems=84934656; in_slots=96; out_slots=96; density=0.030429416232638888; time=5.382065759;
load:matrices/32,3-col_xforms_no_group-32,3 n_ones=3702272; n_elems=84934656; in_slots=96; out_slots=96; density=0.043589650848765434; time=0.060479879;
mul_stats:: probes_success=[(1, 162624), (2, 291840), (3, 448704), (4, 5013408), (5, 4926240), (6, 4926528), (7, 2617770), (8, 2955408), (9, 2674848), (10, 28827654), (20, 3433611), (30, 2223696), (40, 1380921), (50, 1106151), (60, 1162683), (70, 928800), (80, 1210932), (90, 710712), (100, 6263847), (200, 2125047)]; probes_failure=[(90, 875520), (100, 2200848), (200, 8466864)];
mul:matrices/32,3-row_rots_no_group_32,3-row_xforms_no_group_32,3-col_rots_no_group_32,3-col_xforms_no_group-32,3 n_ones=73391424; n_elems=84934656; in_slots=96; out_slots=96; density=0.8640927915219907; time=29.64369548;
mul_stats:: probes_success=[(1, 70229088), (2, 5360544)]; probes_failure=[(3, 9345024)];
mul:matrices/32,3-row_rots_no_group_32,3-row_xforms_no_group_32,3-col_rots_no_group_32,3-col_xforms_no_group_32,3-row_rots_no_group-32,3 n_ones=75589632; n_elems=84934656; in_slots=96; out_slots=96; density=0.8899739583333334; time=3.636739061;
Begin search
solution:init;load_rep;xform(0,1,32);rot(1);xform(3,31,3);rot(22);xform(2,0,32);rot(1)
solution:init;load_rep;xform(2,1,32);id;xform(3,1,3);id;id;id
stats:0 name=load_rep; lane=0; tested=1; found=0; failed=0; pruned=0; continued=1; target_checks=[];
stats:1 name=row_xforms_no_group; lane=0; tested=30; found=0; failed=0; pruned=28; continued=2; target_checks=[(1, 10), (2, 2), (7, 2), (9, 4), (10, 6), (30, 2), (50, 1), (90, 1)];
stats:2 name=row_rots_no_group; lane=0; tested=6; found=0; failed=0; pruned=4; continued=2; target_checks=[(1, 2), (90, 2)];
stats:3 name=col_xforms_no_group; lane=0; tested=1984; found=0; failed=0; pruned=1982; continued=2; target_checks=[(1, 1922), (3, 60)];
stats:4 name=col_rots_no_group; lane=0; tested=64; found=0; failed=0; pruned=62; continued=2; target_checks=[(1, 62)];
stats:5 name=row_xforms_no_group; lane=0; tested=60; found=0; failed=0; pruned=58; continued=2; target_checks=[(1, 30), (3, 20), (6, 2), (10, 2), (20, 2), (40, 2)];
stats:6 name=row_rots_no_group; lane=0; tested=6; found=0; failed=0; pruned=0; continued=6; target_checks=[];
stats:7 name=(last); lane=0; tested=6; found=2; failed=4; pruned=0; continued=0; target_checks=[];
search:specs/swinv_like/l1/trove-crc-3.json success=true; mode=All; time=0.020251932;
spec:specs/swinv_like/l1/trove-crc-1.json
build:matrices/32,1-row_rots_no_group-32,1 n_ones=1024; n_elems=1048576; in_slots=32; out_slots=32; density=0.0009765625; time=0.000131354;
Using newly-built matrices/32,1-row_rots_no_group-32,1
build:matrices/32,1-col_rots_no_group-32,1 n_ones=32768; n_elems=1048576; in_slots=32; out_slots=32; density=0.03125; time=0.003982549;
mul_stats:: probes_success=[(1, 32768)]; probes_failure=[(1, 1015808)];
mul:matrices/32,1-row_rots_no_group_32,1-col_rots_no_group-32,1 n_ones=32768; n_elems=1048576; in_slots=32; out_slots=32; density=0.03125; time=0.027675828;
Begin search
solution:init;load_rep;id;id;id;id;id;id
stats:0 name=load_rep; lane=0; tested=1; found=0; failed=0; pruned=0; continued=1; target_checks=[];
stats:1 name=row_xforms_no_group; lane=0; tested=1; found=0; failed=0; pruned=0; continued=1; target_checks=[];
stats:2 name=row_rots_no_group; lane=0; tested=1; found=0; failed=0; pruned=0; continued=1; target_checks=[];
stats:3 name=col_xforms_no_group; lane=0; tested=1; found=0; failed=0; pruned=0; continued=1; target_checks=[];
stats:4 name=col_rots_no_group; lane=0; tested=32; found=0; failed=0; pruned=31; continued=1; target_checks=[(1, 31)];
stats:5 name=row_xforms_no_group; lane=0; tested=1; found=0; failed=0; pruned=0; continued=1; target_checks=[];
stats:6 name=row_rots_no_group; lane=0; tested=1; found=0; failed=0; pruned=0; continued=1; target_checks=[];
stats:7 name=(last); lane=0; tested=1; found=1; failed=0; pruned=0; continued=0; target_checks=[];
search:specs/swinv_like/l1/trove-crc-1.json success=true; mode=All; time=0.000313065;
spec:specs/swinv_like/l1/trove-crc-4.json
build:matrices/32,4-row_rots_no_group-32,4 n_ones=65536; n_elems=268435456; in_slots=128; out_slots=128; density=0.000244140625; time=0.028580207;
Using newly-built matrices/32,4-row_rots_no_group-32,4
build:matrices/32,4-row_xforms_no_group-32,4 n_ones=231748; n_elems=268435456; in_slots=128; out_slots=128; density=0.0008633285760879517; time=0.151931718;
mul_stats:: probes_success=[(1, 218248), (2, 35016), (3, 2480), (4, 752)]; probes_failure=[(4, 268178960)];
mul:matrices/32,4-row_rots_no_group_32,4-row_xforms_no_group-32,4 n_ones=256496; n_elems=268435456; in_slots=128; out_slots=128; density=0.0009555220603942871; time=10.29630559;
build:matrices/32,4-col_rots_no_group-32,4 n_ones=524288; n_elems=268435456; in_slots=128; out_slots=128; density=0.001953125; time=0.134255624;
mul_stats:: probes_success=[(1, 524288), (2, 524288), (3, 524288), (4, 524288), (5, 520192), (6, 520192), (7, 520192), (8, 520192), (9, 520064), (10, 3509888)]; probes_failure=[(4, 2080768), (8, 64512), (10, 258082304)];
mul:matrices/32,4-row_rots_no_group_32,4-row_xforms_no_group_32,4-col_rots_no_group-32,4 n_ones=8207872; n_elems=268435456; in_slots=128; out_slots=128; density=0.030576705932617188; time=26.26857568;
build:matrices/32,4-col_xforms_no_group-32,4 n_ones=9943488; n_elems=268435456; in_slots=128; out_slots=128; density=0.03704237937927246; time=6.813724382;
mul_stats:: probes_success=[(1, 290432), (2, 524288), (3, 524288), (4, 651264), (5, 8984192), (6, 9050112), (7, 13209984), (8, 13246208), (9, 8964224), (10, 107182848), (20, 48582016), (30, 6555872), (40, 3098880), (50, 1875960), (60, 1683272), (70, 905896), (80, 1069768), (90, 823976), (100, 6167104), (200, 4753632), (300, 2531632), (400, 2278392), (500, 49152)]; probes_failure=[(100, 2080768), (200, 32768), (300, 5621504), (400, 253504), (500, 17443520)];
mul:matrices/32,4-row_rots_no_group_32,4-row_xforms_no_group_32,4-col_rots_no_group_32,4-col_xforms_no_group-32,4 n_ones=243003392; n_elems=268435456; in_slots=128; out_slots=128; density=0.9052581787109375; time=127.840909047;
mul_stats:: probes_success=[(1, 234143744), (2, 11943936), (3, 16384)]; probes_failure=[(4, 22331392)];
mul:matrices/32,4-row_rots_no_group_32,4-row_xforms_no_group_32,4-col_rots_no_group_32,4-col_xforms_no_group_32,4-row_rots_no_group-32,4 n_ones=246104064; n_elems=268435456; in_slots=128; out_slots=128; density=0.91680908203125; time=24.026621116;
Begin search
stats:0 name=load_rep; lane=0; tested=1; found=0; failed=0; pruned=0; continued=1; target_checks=[];
stats:1 name=row_xforms_no_group; lane=0; tested=60; found=0; failed=0; pruned=59; continued=1; target_checks=[(1, 15), (2, 12), (3, 3), (10, 5), (30, 15), (40, 2), (60, 2), (70, 2), (80, 2), (100, 1)];
stats:2 name=row_rots_no_group; lane=0; tested=4; found=0; failed=0; pruned=0; continued=4; target_checks=[];
stats:3 name=col_xforms_no_group; lane=0; tested=7936; found=0; failed=0; pruned=7936; continued=0; target_checks=[(1, 7688), (2, 186), (3, 31), (4, 30), (30, 1)];
stats:4 name=col_rots_no_group; lane=0; tested=0; found=0; failed=0; pruned=0; continued=0; target_checks=[];
stats:5 name=row_xforms_no_group; lane=0; tested=0; found=0; failed=0; pruned=0; continued=0; target_checks=[];
stats:6 name=row_rots_no_group; lane=0; tested=0; found=0; failed=0; pruned=0; continued=0; target_checks=[];
stats:7 name=(last); lane=0; tested=0; found=0; failed=0; pruned=0; continued=0; target_checks=[];
search:specs/swinv_like/l1/trove-crc-4.json success=false; mode=All; time=0.084087635;
spec:specs/swinv_like/l1/trove-cr_sum-7.json
WARNING: It doesn't make sense to prune after the last instructions are applied. Suppressing.
build:matrices/32-col_rots_no_group-32,7 n_ones=1605632; n_elems=51380224; in_slots=224; out_slots=32; density=0.03125; time=0.17642034;
Using newly-built matrices/32-col_rots_no_group-32,7
build:matrices/32,7-col_xforms_no_group-32,7 n_ones=22213872; n_elems=2517630976; in_slots=224; out_slots=224; density=0.008823323279606804; time=11.514932052;
mul_stats:: probes_success=[(1, 17408), (2, 32768), (3, 31744), (4, 32768), (5, 27136), (6, 32768), (7, 31744), (8, 557056), (9, 557056), (10, 4222976), (20, 4618240), (30, 3193856), (40, 3688448), (50, 5030912), (60, 3649536), (70, 2856192), (80, 3910656), (90, 3378208), (100, 3650560), (200, 1623456), (300, 1276608), (400, 1201440), (500, 682624), (600, 770816), (700, 658432), (800, 902528), (900, 274880), (1000, 247552), (1100, 231520), (1200, 266496), (1300, 154848), (1400, 182752), (1500, 92800)]; probes_failure=[(1500, 3293440)];
mul:matrices/32-col_rots_no_group_32,7-col_xforms_no_group-32,7 n_ones=48086784; n_elems=51380224; in_slots=224; out_slots=32; density=0.9359006297831632; time=87.501518834;
build:matrices/32,7-row_rots_no_group-32,7 n_ones=351232; n_elems=2517630976; in_slots=224; out_slots=224; density=0.00013950892857142856; time=0.182597732;
mul_stats:: probes_success=[(1, 46982656), (2, 1868832), (3, 13664), (4, 407680), (6, 114688)]; probes_failure=[(7, 1992704)];
mul:matrices/32-col_rots_no_group_32,7-col_xforms_no_group_32,7-row_rots_no_group-32,7 n_ones=49387520; n_elems=51380224; in_slots=224; out_slots=32; density=0.9612165178571429; time=34.295385038;
Begin search
solution:init;load_rep;xform(5,5,32);rot(1);xform(7,31,7);rot(10)
solution:init;load_rep;xform(2,5,32);id;xform(7,1,7);id
stats:0 name=load_rep; lane=0; tested=1; found=0; failed=0; pruned=0; continued=1; target_checks=[];
stats:1 name=row_xforms_no_group; lane=0; tested=210; found=0; failed=0; pruned=204; continued=6; target_checks=[(1, 30), (2, 6), (3, 6), (4, 6), (5, 12), (6, 6), (10, 6), (20, 12), (30, 18), (40, 42), (50, 24), (60, 12), (70, 6), (80, 6), (100, 6), (200, 6)];
stats:2 name=row_rots_no_group; lane=0; tested=42; found=0; failed=0; pruned=40; continued=2; target_checks=[(1, 18), (3, 12), (5, 8), (200, 2)];
stats:3 name=col_xforms_no_group; lane=0; tested=1984; found=0; failed=0; pruned=1982; continued=2; target_checks=[(1, 1922), (7, 60)];
stats:4 name=col_rots_no_group; lane=0; tested=64; found=0; failed=0; pruned=0; continued=64; target_checks=[];
stats:5 name=(last); lane=0; tested=64; found=2; failed=62; pruned=0; continued=0; target_checks=[];
search:specs/swinv_like/l1/trove-cr_sum-7.json success=true; mode=All; time=0.052802182;
spec:specs/swinv_like/l1/1d-stencil.json
build:matrices/32-cond_keep_no_consts-32,3 n_ones=9216; n_elems=9437184; in_slots=96; out_slots=32; density=0.0009765625; time=0.006717883;
Using newly-built matrices/32-cond_keep_no_consts-32,3
load:matrices/32,3-col_rots_no_group-32,3 n_ones=294912; n_elems=84934656; in_slots=96; out_slots=96; density=0.003472222222222222; time=0.055546715;
mul_stats:: probes_success=[(1, 32768), (2, 32768), (3, 32768), (4, 32768), (5, 32768), (6, 32768), (7, 32768), (8, 32768), (9, 32768)]; probes_failure=[(9, 9142272)];
mul:matrices/32-cond_keep_no_consts_32,3-col_rots_no_group-32,3 n_ones=294912; n_elems=9437184; in_slots=96; out_slots=32; density=0.03125; time=0.700857925;
load:matrices/32,3-col_xforms_no_group-32,3 n_ones=3702272; n_elems=84934656; in_slots=96; out_slots=96; density=0.043589650848765434; time=0.059072983;
mul_stats:: probes_success=[(1, 17408), (2, 32768), (3, 31744), (4, 557056), (5, 557056), (6, 557056), (7, 278528), (8, 301056), (9, 278528), (10, 3399200), (20, 384928), (30, 254304), (40, 156160), (50, 122528), (60, 129824), (70, 103072), (80, 138624), (90, 79776), (100, 702912), (200, 245408)]; probes_failure=[(200, 1109248)];
mul:matrices/32-cond_keep_no_consts_32,3-col_rots_no_group_32,3-col_xforms_no_group-32,3 n_ones=8327936; n_elems=9437184; in_slots=96; out_slots=32; density=0.8824598524305556; time=3.406587547;
Begin search
solution:init;load_trunc;select(d0 >= 0 + d1);xform(0,1,3);id;keep_if(d0 = 0 + d0)
stats:0 name=load_trunc; lane=0; tested=1; found=0; failed=0; pruned=0; continued=1; target_checks=[];
stats:1 name=reg_select_no_consts; lane=0; tested=14; found=0; failed=0; pruned=13; continued=1; target_checks=[(1, 6), (3, 1), (6, 2), (90, 2), (4700, 2)];
stats:2 name=col_xforms_no_group; lane=0; tested=992; found=0; failed=0; pruned=991; continued=1; target_checks=[(1, 961), (2, 30)];
stats:3 name=col_rots_no_group; lane=0; tested=32; found=0; failed=0; pruned=31; continued=1; target_checks=[(1, 31)];
stats:4 name=cond_keep_no_consts; lane=0; tested=14; found=0; failed=10; pruned=0; continued=4; target_checks=[];
stats:5 name=(last); lane=0; tested=4; found=1; failed=3; pruned=0; continued=0; target_checks=[];
search:specs/swinv_like/l1/1d-stencil.json success=true; mode=All; time=0.006601775;
spec:specs/swinv_like/l1/2d-stencil-3.json
load:matrices/4,4-identity-4,4,3,3 n_ones=20736; n_elems=5308416; in_slots=144; out_slots=16; density=0.00390625; time=0.005209438;
load:matrices/4,4-identity_4,4,3,3-2s-rnc{main[1]out[1]second[3]}-4,4,3,3 n_ones=82944; n_elems=5308416; in_slots=144; out_slots=16; density=0.015625; time=0.003503679;
load:matrices/4,4-identity_4,4,3,3-2s-rnc{main[1]out[1]second[3]}_4,4,3,3-2s-xfnc{main[1]out[1]second[3]}-4,4,3,3 n_ones=264960; n_elems=5308416; in_slots=144; out_slots=16; density=0.04991319444444445; time=0.003538931;
load:matrices/4,4-identity_4,4,3,3-2s-rnc{main[1]out[1]second[3]}_4,4,3,3-2s-xfnc{main[1]out[1]second[3]}_4,4,3,3-2s-rnc{main[0]out[0]second[2]}-4,4,3,3 n_ones=1059840; n_elems=5308416; in_slots=144; out_slots=16; density=0.1996527777777778; time=0.003522031;
load:matrices/4,4-identity_4,4,3,3-2s-rnc{main[1]out[1]second[3]}_4,4,3,3-2s-xfnc{main[1]out[1]second[3]}_4,4,3,3-2s-rnc{main[0]out[0]second[2]}_4,4,3,3-2s-xfnc{main[0]out[0]second[2]}-4,4,3,3 n_ones=3385600; n_elems=5308416; in_slots=144; out_slots=16; density=0.6377797067901234; time=0.00375066;
build:matrices/4,4,3,3-2s-gnc{axis[3]dims[1|3]}-4,4,3,2 n_ones=74880; n_elems=191102976; in_slots=96; out_slots=144; density=0.0003918306327160494; time=0.045035392;
mul_stats:: probes_success=[(1, 1265920), (2, 618240)]; probes_failure=[(4, 29696), (6, 59392), (7, 29696), (8, 29696), (9, 326656)];
mul:matrices/4,4-identity_4,4,3,3-2s-rnc{main[1]out[1]second[3]}_4,4,3,3-2s-xfnc{main[1]out[1]second[3]}_4,4,3,3-2s-rnc{main[0]out[0]second[2]}_4,4,3,3-2s-xfnc{main[0]out[0]second[2]}_4,4,3,3-2s-gnc{axis[3]dims[1|3]}-4,4,3,2 n_ones=1884160; n_elems=2359296; in_slots=96; out_slots=16; density=0.7986111111111112; time=1.762004107;
Begin search
solution:init;id;load_grid_2d;select(d0 >= 0 + d2, );select(d1 >= 0 + d3, );xform(0,1,3);id;xform(0,1,3);id;id
stats:0 name=reshape; lane=0; tested=1; found=0; failed=0; pruned=0; continued=1; target_checks=[];
stats:1 name=load_grid_2d; lane=0; tested=1; found=0; failed=0; pruned=0; continued=1; target_checks=[];
stats:2 name=2s-gnc{axis[2]dims[0|2]}; lane=0; tested=14; found=0; failed=0; pruned=13; continued=1; target_checks=[(1, 3), (10, 3), (30, 1), (70, 2), (100, 2), (10000, 2)];
stats:3 name=2s-gnc{axis[3]dims[1|3]}; lane=0; tested=14; found=0; failed=0; pruned=13; continued=1; target_checks=[(1, 6), (3, 1), (6, 2), (9, 1), (10, 1), (1200, 1), (1300, 1)];
stats:4 name=2s-xfnc{main[0]out[0]second[2]}; lane=0; tested=12; found=0; failed=0; pruned=11; continued=1; target_checks=[(10, 11)];
stats:5 name=2s-rnc{main[0]out[0]second[2]}; lane=0; tested=4; found=0; failed=0; pruned=3; continued=1; target_checks=[(1, 3)];
stats:6 name=2s-xfnc{main[1]out[1]second[3]}; lane=0; tested=12; found=0; failed=0; pruned=11; continued=1; target_checks=[(1, 9), (2, 2)];
stats:7 name=2s-rnc{main[1]out[1]second[3]}; lane=0; tested=4; found=0; failed=0; pruned=3; continued=1; target_checks=[(1, 3)];
stats:8 name=identity; lane=0; tested=1; found=0; failed=0; pruned=0; continued=1; target_checks=[];
stats:9 name=(last); lane=0; tested=1; found=1; failed=0; pruned=0; continued=0; target_checks=[];
search:specs/swinv_like/l1/2d-stencil-3.json success=true; mode=All; time=0.004789054;
spec:specs/swinv_like/l1/trove-rcr-3.json
load:matrices/32,3-col_rots_no_group-32,3 n_ones=294912; n_elems=84934656; in_slots=96; out_slots=96; density=0.003472222222222222; time=0.064486422;
load:matrices/32,3-col_xforms_no_group-32,3 n_ones=3702272; n_elems=84934656; in_slots=96; out_slots=96; density=0.043589650848765434; time=0.06810467;
mul_stats:: probes_success=[(1, 2611200), (2, 3376128), (3, 380448), (4, 233888), (5, 137056), (6, 131072), (7, 112288), (8, 116000), (9, 89248), (10, 777504), (20, 304896), (30, 58208)]; probes_failure=[(30, 76606720)];
mul:matrices/32,3-col_rots_no_group_32,3-col_xforms_no_group-32,3 n_ones=8327936; n_elems=84934656; in_slots=96; out_slots=96; density=0.09805109471450617; time=13.255075831;
load:matrices/32,3-row_rots_no_group-32,3 n_ones=27648; n_elems=84934656; in_slots=96; out_slots=96; density=0.0003255208333333333; time=0.060120089;
mul_stats:: probes_success=[(1, 7971072), (2, 8583168), (3, 8429568)]; probes_failure=[(3, 59950848)];
mul:matrices/32,3-col_rots_no_group_32,3-col_xforms_no_group_32,3-row_rots_no_group-32,3 n_ones=24983808; n_elems=84934656; in_slots=96; out_slots=96; density=0.29415328414351855; time=4.225762448;
load:matrices/32,3-row_xforms_no_group-32,3 n_ones=72485; n_elems=84934656; in_slots=96; out_slots=96; density=0.0008534207756136671; time=0.060038461;
mul_stats:: probes_success=[(1, 21319520), (2, 27113344), (3, 24210496), (4, 994592)]; probes_failure=[(1, 9120), (2, 144544), (3, 965760), (4, 514048), (5, 194496), (6, 2944768), (7, 85440), (8, 49664), (9, 6388864)];
mul:matrices/32,3-col_rots_no_group_32,3-col_xforms_no_group_32,3-row_rots_no_group_32,3-row_xforms_no_group-32,3 n_ones=73637952; n_elems=84934656; in_slots=96; out_slots=96; density=0.8669953522858797; time=4.5872879;
load:matrices/32,3-col_rots_no_group-32,3 n_ones=294912; n_elems=84934656; in_slots=96; out_slots=96; density=0.003472222222222222; time=0.059980929;
mul_stats:: probes_success=[(1, 72652800), (2, 1065984), (3, 1262592), (4, 159744), (5, 479232), (6, 46080), (7, 61440), (8, 36864), (9, 227328), (10, 18432), (11, 27648), (12, 9216), (13, 73728), (14, 9216), (15, 36864), (16, 9216), (17, 33792), (19, 6144), (21, 21504), (25, 27648), (27, 6144), (29, 21504), (31, 3072)]; probes_failure=[(32, 8638464)];
mul:matrices/32,3-col_rots_no_group_32,3-col_xforms_no_group_32,3-row_rots_no_group_32,3-row_xforms_no_group_32,3-col_rots_no_group-32,3 n_ones=76296192; n_elems=84934656; in_slots=96; out_slots=96; density=0.8982928240740741; time=5.6041917340000005;
Begin search
solution:init;load_rep;id;rot(16);xform(2,1,16);rot(2);xform(3,1,3);rot(16)
solution:init;load_rep;id;id;xform(2,1,32);id;xform(3,1,3);id
solution:init;load_rep;xform(31,0,3);rot(1);xform(2,2,32);rot(2);xform(29,31,3);rot(11)
stats:0 name=load_rep; lane=0; tested=1; found=0; failed=0; pruned=0; continued=1; target_checks=[];
stats:1 name=col_xforms_no_group; lane=0; tested=992; found=0; failed=0; pruned=976; continued=16; target_checks=[(2, 256), (6, 32), (10, 64), (20, 64), (30, 369), (40, 126), (50, 13), (60, 18), (700, 17), (1300, 1), (1400, 16)];
stats:2 name=col_rots_no_group; lane=0; tested=512; found=0; failed=0; pruned=479; continued=33; target_checks=[(30, 82), (40, 41), (50, 56), (60, 74), (70, 69), (80, 29), (90, 15), (100, 92), (200, 15), (300, 5), (400, 1)];
stats:3 name=row_xforms_no_group; lane=0; tested=990; found=0; failed=0; pruned=987; continued=3; target_checks=[(1, 660), (2, 122), (3, 28), (4, 30), (5, 14), (6, 14), (7, 14), (8, 16), (9, 5), (10, 46), (20, 30), (30, 8)];
stats:4 name=row_rots_no_group; lane=0; tested=9; found=0; failed=0; pruned=6; continued=3; target_checks=[(1, 6)];
stats:5 name=col_xforms_no_group; lane=0; tested=2976; found=0; failed=0; pruned=2973; continued=3; target_checks=[(1, 2883), (3, 90)];
stats:6 name=col_rots_no_group; lane=0; tested=96; found=0; failed=0; pruned=0; continued=96; target_checks=[];
stats:7 name=(last); lane=0; tested=96; found=3; failed=93; pruned=0; continued=0; target_checks=[];
search:specs/swinv_like/l1/trove-rcr-3.json success=true; mode=All; time=0.060225697;
spec:specs/swinv_like/l1/trove-cr_sum-3.json
WARNING: It doesn't make sense to prune after the last instructions are applied. Suppressing.
build:matrices/32-col_rots_no_group-32,3 n_ones=294912; n_elems=9437184; in_slots=96; out_slots=32; density=0.03125; time=0.032624015;
Using newly-built matrices/32-col_rots_no_group-32,3
load:matrices/32,3-col_xforms_no_group-32,3 n_ones=3702272; n_elems=84934656; in_slots=96; out_slots=96; density=0.043589650848765434; time=0.065085793;
mul_stats:: probes_success=[(1, 17408), (2, 32768), (3, 31744), (4, 557056), (5, 557056), (6, 557056), (7, 278528), (8, 301056), (9, 278528), (10, 3399200), (20, 384928), (30, 254304), (40, 156160), (50, 122528), (60, 129824), (70, 103072), (80, 138624), (90, 79776), (100, 702912), (200, 245408)]; probes_failure=[(200, 1109248)];
mul:matrices/32-col_rots_no_group_32,3-col_xforms_no_group-32,3 n_ones=8327936; n_elems=9437184; in_slots=96; out_slots=32; density=0.8824598524305556; time=3.427709008;
load:matrices/32,3-row_rots_no_group-32,3 n_ones=27648; n_elems=84934656; in_slots=96; out_slots=96; density=0.0003255208333333333; time=0.065061964;
mul_stats:: probes_success=[(1, 7971072), (2, 612096)]; probes_failure=[(3, 854016)];
mul:matrices/32-col_rots_no_group_32,3-col_xforms_no_group_32,3-row_rots_no_group-32,3 n_ones=8583168; n_elems=9437184; in_slots=96; out_slots=32; density=0.9095052083333334; time=1.063603765;
Begin search
solution:init;load_rep;xform(0,1,32);rot(1);xform(3,31,3);rot(22)
solution:init;load_rep;xform(2,1,32);id;xform(3,1,3);id
stats:0 name=load_rep; lane=0; tested=1; found=0; failed=0; pruned=0; continued=1; target_checks=[];
stats:1 name=row_xforms_no_group; lane=0; tested=30; found=0; failed=0; pruned=28; continued=2; target_checks=[(1, 10), (2, 2), (7, 2), (10, 4), (30, 4), (40, 2), (50, 2), (90, 2)];
stats:2 name=row_rots_no_group; lane=0; tested=6; found=0; failed=0; pruned=4; continued=2; target_checks=[(1, 2), (90, 2)];
stats:3 name=col_xforms_no_group; lane=0; tested=1984; found=0; failed=0; pruned=1982; continued=2; target_checks=[(1, 1922), (3, 60)];
stats:4 name=col_rots_no_group; lane=0; tested=64; found=0; failed=0; pruned=0; continued=64; target_checks=[];
stats:5 name=(last); lane=0; tested=64; found=2; failed=62; pruned=0; continued=0; target_checks=[];
search:specs/swinv_like/l1/trove-cr_sum-3.json success=true; mode=All; time=0.021737193;
spec:specs/swinv_like/l1/trove-rcr-1.json
load:matrices/32,1-col_rots_no_group-32,1 n_ones=32768; n_elems=1048576; in_slots=32; out_slots=32; density=0.03125; time=0.0007081;
load:matrices/32,1-col_rots_no_group-32,1 n_ones=32768; n_elems=1048576; in_slots=32; out_slots=32; density=0.03125; time=0.000708001;
mul_stats:: probes_success=[(1, 32768)]; probes_failure=[(30, 1015808)];
mul:matrices/32,1-col_rots_no_group_32,1-col_rots_no_group-32,1 n_ones=32768; n_elems=1048576; in_slots=32; out_slots=32; density=0.03125; time=0.171366953;
Begin search
solution:init;load_rep;id;rot(8);id;id;id;rot(24)
solution:init;load_rep;id;rot(24);id;id;id;rot(8)
solution:init;load_rep;id;rot(11);id;id;id;rot(21)
solution:init;load_rep;id;rot(26);id;id;id;rot(6)
solution:init;load_rep;id;rot(14);id;id;id;rot(18)
solution:init;load_rep;id;rot(25);id;id;id;rot(7)
solution:init;load_rep;id;rot(9);id;id;id;rot(23)
solution:init;load_rep;id;rot(5);id;id;id;rot(27)
solution:init;load_rep;id;rot(3);id;id;id;rot(29)
solution:init;load_rep;id;rot(15);id;id;id;rot(17)
solution:init;load_rep;id;rot(20);id;id;id;rot(12)
solution:init;load_rep;id;rot(28);id;id;id;rot(4)
solution:init;load_rep;id;rot(31);id;id;id;rot(1)
solution:init;load_rep;id;rot(19);id;id;id;rot(13)
solution:init;load_rep;id;rot(2);id;id;id;rot(30)
solution:init;load_rep;id;rot(12);id;id;id;rot(20)
solution:init;load_rep;id;rot(17);id;id;id;rot(15)
solution:init;load_rep;id;rot(10);id;id;id;rot(22)
solution:init;load_rep;id;rot(16);id;id;id;rot(16)
solution:init;load_rep;id;rot(23);id;id;id;rot(9)
solution:init;load_rep;id;rot(29);id;id;id;rot(3)
solution:init;load_rep;id;rot(30);id;id;id;rot(2)
solution:init;load_rep;id;rot(13);id;id;id;rot(19)
solution:init;load_rep;id;id;id;id;id;id
solution:init;load_rep;id;rot(22);id;id;id;rot(10)
solution:init;load_rep;id;rot(27);id;id;id;rot(5)
solution:init;load_rep;id;rot(21);id;id;id;rot(11)
solution:init;load_rep;id;rot(6);id;id;id;rot(26)
solution:init;load_rep;id;rot(4);id;id;id;rot(28)
solution:init;load_rep;id;rot(7);id;id;id;rot(25)
solution:init;load_rep;id;rot(18);id;id;id;rot(14)
solution:init;load_rep;id;rot(1);id;id;id;rot(31)
stats:0 name=load_rep; lane=0; tested=1; found=0; failed=0; pruned=0; continued=1; target_checks=[];
stats:1 name=col_xforms_no_group; lane=0; tested=1; found=0; failed=0; pruned=0; continued=1; target_checks=[];
stats:2 name=col_rots_no_group; lane=0; tested=32; found=0; failed=0; pruned=0; continued=32; target_checks=[];
stats:3 name=row_xforms_no_group; lane=0; tested=32; found=0; failed=0; pruned=0; continued=32; target_checks=[];
stats:4 name=row_rots_no_group; lane=0; tested=32; found=0; failed=0; pruned=0; continued=32; target_checks=[];
stats:5 name=col_xforms_no_group; lane=0; tested=32; found=0; failed=0; pruned=0; continued=32; target_checks=[];
stats:6 name=col_rots_no_group; lane=0; tested=1024; found=0; failed=0; pruned=0; continued=1024; target_checks=[];
stats:7 name=(last); lane=0; tested=1024; found=32; failed=992; pruned=0; continued=0; target_checks=[];
search:specs/swinv_like/l1/trove-rcr-1.json success=true; mode=All; time=0.005155485;
spec:specs/swinv_like/l1/1d-conv.json
load:matrices/32-cond_keep_no_consts-32,3 n_ones=9216; n_elems=9437184; in_slots=96; out_slots=32; density=0.0009765625; time=0.006178947;
load:matrices/32-cond_keep_no_consts_32,3-col_rots_no_group-32,3 n_ones=294912; n_elems=9437184; in_slots=96; out_slots=32; density=0.03125; time=0.00610454;
load:matrices/32-cond_keep_no_consts_32,3-col_rots_no_group_32,3-col_xforms_no_group-32,3 n_ones=8327936; n_elems=9437184; in_slots=96; out_slots=32; density=0.8824598524305556; time=0.006125459;
Begin search
solution:stack_fold[init;load_trunc;select(d0 >= 0 + d1);xform(0,1,3);id,init;broadcast;id];keep_if(d0 = 0 + d0)
stats:0 name=load_trunc; lane=0; tested=1; found=0; failed=0; pruned=0; continued=1; target_checks=[];
stats:1 name=broadcast; lane=1; tested=1; found=0; failed=0; pruned=0; continued=1; target_checks=[];
stats:2 name=identity; lane=1; tested=1; found=0; failed=0; pruned=0; continued=1; target_checks=[];
stats:3 name=reg_select_no_consts; lane=0; tested=14; found=0; failed=0; pruned=13; continued=1; target_checks=[(1, 6), (3, 1), (6, 2), (90, 2), (4700, 2)];
stats:4 name=col_xforms_no_group; lane=0; tested=992; found=0; failed=0; pruned=991; continued=1; target_checks=[(1, 961), (2, 30)];
stats:5 name=col_rots_no_group; lane=0; tested=32; found=0; failed=0; pruned=31; continued=1; target_checks=[(1, 31)];
stats:6 name=stack_folding; lane=0; tested=1; found=0; failed=0; pruned=0; continued=1; target_checks=[];
stats:7 name=cond_keep_no_consts; lane=0; tested=14; found=0; failed=10; pruned=0; continued=4; target_checks=[];
stats:8 name=(last); lane=0; tested=4; found=1; failed=3; pruned=0; continued=0; target_checks=[];
search:specs/swinv_like/l1/1d-conv.json success=true; mode=All; time=0.013311637;
spec:specs/swinv_like/l1/trove-rcr-4.json
load:matrices/32,4-col_rots_no_group-32,4 n_ones=524288; n_elems=268435456; in_slots=128; out_slots=128; density=0.001953125; time=0.190754191;
load:matrices/32,4-col_xforms_no_group-32,4 n_ones=9943488; n_elems=268435456; in_slots=128; out_slots=128; density=0.03704237937927246; time=0.202547571;
mul_stats:: probes_success=[(1, 7980032), (2, 5785600), (3, 273952), (4, 204704), (5, 108384), (6, 91648), (7, 97440), (8, 80672), (9, 58016), (10, 469792), (20, 246016), (30, 57696)]; probes_failure=[(30, 252981504)];
mul:matrices/32,4-col_rots_no_group_32,4-col_xforms_no_group-32,4 n_ones=15453952; n_elems=268435456; in_slots=128; out_slots=128; density=0.057570457458496094; time=50.622495894;
load:matrices/32,4-row_rots_no_group-32,4 n_ones=65536; n_elems=268435456; in_slots=128; out_slots=128; density=0.000244140625; time=0.202419328;
mul_stats:: probes_success=[(1, 14900224), (2, 15638528), (3, 15638528), (4, 15638528)]; probes_failure=[(4, 206619648)];
mul:matrices/32,4-col_rots_no_group_32,4-col_xforms_no_group_32,4-row_rots_no_group-32,4 n_ones=61815808; n_elems=268435456; in_slots=128; out_slots=128; density=0.23028182983398438; time=25.431660103;
load:matrices/32,4-row_xforms_no_group-32,4 n_ones=231748; n_elems=268435456; in_slots=128; out_slots=128; density=0.0008633285760879517; time=0.202951689;
mul_stats:: probes_success=[(1, 53084288), (2, 65528736), (3, 64538336), (4, 50926336), (5, 8235008), (6, 806912), (7, 925696), (8, 40960), (9, 4096), (10, 4096)]; probes_failure=[(1, 16256), (2, 65280), (3, 163200), (4, 2240448), (6, 153536), (7, 215040), (8, 1348160), (9, 383936), (10, 1263360), (11, 761984), (12, 3110976), (13, 648448), (14, 1258432), (15, 2846976), (16, 9864960)];
mul:matrices/32,4-col_rots_no_group_32,4-col_xforms_no_group_32,4-row_rots_no_group_32,4-row_xforms_no_group-32,4 n_ones=244094464; n_elems=268435456; in_slots=128; out_slots=128; density=0.9093227386474609; time=30.15267159;
load:matrices/32,4-col_rots_no_group-32,4 n_ones=524288; n_elems=268435456; in_slots=128; out_slots=128; density=0.001953125; time=0.204148189;
mul_stats:: probes_success=[(1, 243093504), (2, 1425408), (3, 1191936), (4, 294912), (5, 794624), (6, 81920), (7, 131072), (8, 65536), (9, 143360), (10, 32768), (11, 32768), (12, 16384), (13, 135168), (14, 16384), (15, 61440), (16, 16384), (17, 172032), (19, 4096), (21, 28672), (25, 299008), (27, 8192), (29, 425984), (31, 16384)]; probes_failure=[(32, 19947520)];
mul:matrices/32,4-col_rots_no_group_32,4-col_xforms_no_group_32,4-row_rots_no_group_32,4-row_xforms_no_group_32,4-col_rots_no_group-32,4 n_ones=248487936; n_elems=268435456; in_slots=128; out_slots=128; density=0.925689697265625; time=28.749188694;
Begin search
solution:init;load_rep;xform(15,17,4);id;xform(0,1,32);id;xform(28,15,4);id
solution:init;load_rep;xform(17,15,4);id;xform(3,1,32);id;xform(4,17,4);id
solution:init;load_rep;xform(21,11,4);id;xform(3,1,32);id;xform(20,29,4);id
solution:init;load_rep;xform(0,31,4);id;xform(3,1,32);id;xform(4,1,4);id
solution:init;load_rep;xform(31,1,4);id;xform(0,1,32);id;xform(28,31,4);id
solution:init;load_rep;xform(29,3,4);id;xform(3,1,32);id;xform(20,21,4);id
solution:init;load_rep;xform(5,27,4);id;xform(3,1,32);id;xform(20,13,4);id
solution:init;load_rep;xform(3,29,4);id;xform(0,1,32);id;xform(12,11,4);id
solution:init;load_rep;xform(11,21,4);id;xform(0,1,32);id;xform(12,3,4);id
solution:init;load_rep;xform(13,19,4);id;xform(3,1,32);id;xform(20,5,4);id
solution:init;load_rep;xform(9,23,4);id;xform(3,1,32);id;xform(4,25,4);id
solution:init;load_rep;xform(7,25,4);id;xform(0,1,32);id;xform(28,23,4);id
solution:init;load_rep;xform(25,7,4);id;xform(3,1,32);id;xform(4,9,4);id
solution:init;load_rep;xform(23,9,4);id;xform(0,1,32);id;xform(28,7,4);id
solution:init;load_rep;xform(19,13,4);id;xform(0,1,32);id;xform(12,27,4);id
solution:init;load_rep;xform(27,5,4);id;xform(0,1,32);id;xform(12,19,4);id
stats:0 name=load_rep; lane=0; tested=1; found=0; failed=0; pruned=0; continued=1; target_checks=[];
stats:1 name=col_xforms_no_group; lane=0; tested=1984; found=0; failed=0; pruned=1968; continued=16; target_checks=[(20, 64), (30, 1418), (40, 302), (50, 8), (60, 127), (70, 12), (80, 7), (90, 13), (100, 6), (200, 5), (300, 5), (1300, 1)];
stats:2 name=col_rots_no_group; lane=0; tested=512; found=0; failed=0; pruned=496; continued=16; target_checks=[(4, 64), (8, 64), (10, 128), (20, 176), (30, 20), (60, 20), (90, 20), (500, 4)];
stats:3 name=row_xforms_no_group; lane=0; tested=960; found=0; failed=0; pruned=944; continued=16; target_checks=[(1, 720), (2, 164), (3, 14), (4, 18), (6, 2), (8, 8), (10, 2), (30, 16)];
stats:4 name=row_rots_no_group; lane=0; tested=64; found=0; failed=0; pruned=48; continued=16; target_checks=[(1, 48)];
stats:5 name=col_xforms_no_group; lane=0; tested=31744; found=0; failed=0; pruned=31728; continued=16; target_checks=[(1, 30752), (2, 496), (4, 480)];
stats:6 name=col_rots_no_group; lane=0; tested=512; found=0; failed=0; pruned=0; continued=512; target_checks=[];
stats:7 name=(last); lane=0; tested=512; found=16; failed=496; pruned=0; continued=0; target_checks=[];
search:specs/swinv_like/l1/trove-rcr-4.json success=true; mode=All; time=0.446768175;
spec:specs/swinv_like/l1/trove-cr_sum-1.json
WARNING: It doesn't make sense to prune after the last instructions are applied. Suppressing.
build:matrices/32-col_rots_no_group-32,1 n_ones=32768; n_elems=1048576; in_slots=32; out_slots=32; density=0.03125; time=0.003764035;
Using newly-built matrices/32-col_rots_no_group-32,1
Begin search
solution:init;load_rep;id;id;id;id
stats:0 name=load_rep; lane=0; tested=1; found=0; failed=0; pruned=0; continued=1; target_checks=[];
stats:1 name=row_xforms_no_group; lane=0; tested=1; found=0; failed=0; pruned=0; continued=1; target_checks=[];
stats:2 name=row_rots_no_group; lane=0; tested=1; found=0; failed=0; pruned=0; continued=1; target_checks=[];
stats:3 name=col_xforms_no_group; lane=0; tested=1; found=0; failed=0; pruned=0; continued=1; target_checks=[];
stats:4 name=col_rots_no_group; lane=0; tested=32; found=0; failed=0; pruned=0; continued=32; target_checks=[];
stats:5 name=(last); lane=0; tested=32; found=1; failed=31; pruned=0; continued=0; target_checks=[];
search:specs/swinv_like/l1/trove-cr_sum-1.json success=true; mode=All; time=0.000519028;
spec:specs/swinv_like/l1/mult-32-with-4.json
load:matrices/8-reshape-2,4 n_ones=64; n_elems=4096; in_slots=8; out_slots=8; density=0.015625; time=0.000021864;
load:matrices/8-reshape_2,4-transpose-4,2 n_ones=64; n_elems=4096; in_slots=8; out_slots=8; density=0.015625; time=0.000014466;
build:matrices/4,2-cond_keep_no_consts{restrict[1|1]}-4,2,4 n_ones=1024; n_elems=65536; in_slots=32; out_slots=8; density=0.015625; time=0.001393685;
mul_stats:: probes_success=[(1, 1024)]; probes_failure=[(1, 64512)];
mul:matrices/8-reshape_2,4-transpose_4,2-cond_keep_no_consts{restrict[1|1]}-4,2,4 n_ones=1024; n_elems=65536; in_slots=32; out_slots=8; density=0.015625; time=0.001395944;
load:matrices/4,2,4-broadcast{group[1]}-4,4 n_ones=1024; n_elems=262144; in_slots=16; out_slots=32; density=0.00390625; time=0.000190608;
mul_stats:: probes_success=[(1, 64), (2, 64), (3, 64), (4, 64), (5, 64), (6, 64), (7, 64), (8, 64), (9, 64), (10, 448)]; probes_failure=[(10, 15360)];
mul:matrices/8-reshape_2,4-transpose_4,2-cond_keep_no_consts{restrict[1|1]}_4,2,4-broadcast{group[1]}-4,4 n_ones=1024; n_elems=16384; in_slots=16; out_slots=8; density=0.0625; time=0.002296278;
load:matrices/4,4-rots_no_group{main[0]out[1]second[1]}-4,4 n_ones=1216; n_elems=65536; in_slots=16; out_slots=16; density=0.0185546875; time=0.000068687;
mul_stats:: probes_success=[(1, 304), (2, 48), (3, 48), (4, 48), (5, 48), (6, 48), (7, 48), (8, 48), (9, 48), (10, 336)]; probes_failure=[(10, 15360)];
mul:matrices/8-reshape_2,4-transpose_4,2-cond_keep_no_consts{restrict[1|1]}_4,2,4-broadcast{group[1]}_4,4-rots_no_group{main[0]out[1]second[1]}-4,4 n_ones=1024; n_elems=16384; in_slots=16; out_slots=8; density=0.0625; time=0.001742588;
load:matrices/8-reshape_2,4-transpose_4,2-cond_keep_no_consts{restrict[1|1]}_4,2,4-broadcast{group[1]}_4,4-rots_no_group{main[0]out[1]second[1]}-4,4 n_ones=1024; n_elems=16384; in_slots=16; out_slots=8; density=0.0625; time=0.000040152;
Begin search
solution:stack_fold[init;broadcast;xform(0,3,4);id,init;broadcast;id;id];broadcast;keep_if(d0 >= 0 + d2);keep_if(d0 < 0 + d2);tr;id
solution:stack_fold[init;broadcast;id;id,init;broadcast;xform(0,3,4);id];broadcast;keep_if(d0 >= 0 + d2);keep_if(d0 < 0 + d2);tr;id
stats:0 name=broadcast; lane=0; tested=1; found=0; failed=0; pruned=0; continued=1; target_checks=[];
stats:1 name=broadcast; lane=1; tested=1; found=0; failed=0; pruned=0; continued=1; target_checks=[];
stats:2 name=xforms_no_group{main[0]out[1]second[1]}; lane=0; tested=25; found=0; failed=0; pruned=15; continued=10; target_checks=[(1, 6), (2, 4), (3, 2), (4, 3)];
stats:3 name=rots_no_group{main[0]out[1]second[1]}; lane=0; tested=50; found=0; failed=0; pruned=40; continued=10; target_checks=[(1, 37), (2, 3)];
stats:4 name=xforms_no_group{main[0]out[1]second[1]}; lane=1; tested=250; found=0; failed=0; pruned=150; continued=100; target_checks=[(1, 60), (2, 40), (3, 20), (4, 30)];
stats:5 name=rots_no_group{main[0]out[1]second[1]}; lane=1; tested=500; found=0; failed=0; pruned=400; continued=100; target_checks=[(1, 370), (2, 30)];
stats:6 name=stack_folding; lane=0; tested=100; found=0; failed=0; pruned=98; continued=2; target_checks=[(1, 76), (2, 15), (3, 4), (4, 3)];
stats:7 name=broadcast{group[1]}; lane=0; tested=2; found=0; failed=0; pruned=0; continued=2; target_checks=[];
stats:8 name=cond_keep_no_consts{restrict[1|0]}; lane=0; tested=28; found=0; failed=0; pruned=24; continued=4; target_checks=[(1, 21), (4, 3)];
stats:9 name=cond_keep_no_consts{restrict[1|1]}; lane=0; tested=56; found=0; failed=48; pruned=6; continued=2; target_checks=[(4, 6)];
stats:10 name=transpose; lane=0; tested=2; found=0; failed=0; pruned=0; continued=2; target_checks=[];
stats:11 name=reshape; lane=0; tested=2; found=0; failed=0; pruned=0; continued=2; target_checks=[];
stats:12 name=(last); lane=0; tested=2; found=2; failed=0; pruned=0; continued=0; target_checks=[];
search:specs/swinv_like/l1/mult-32-with-4.json success=true; mode=All; time=0.005245996;
spec:specs/swinv_like/l1/trove-cr_sum-4.json
WARNING: It doesn't make sense to prune after the last instructions are applied. Suppressing.
build:matrices/32-col_rots_no_group-32,4 n_ones=524288; n_elems=16777216; in_slots=128; out_slots=32; density=0.03125; time=0.059231538;
Using newly-built matrices/32-col_rots_no_group-32,4
load:matrices/32,4-col_xforms_no_group-32,4 n_ones=9943488; n_elems=268435456; in_slots=128; out_slots=128; density=0.03704237937927246; time=0.197230273;
mul_stats:: probes_success=[(1, 17408), (2, 32768), (3, 32768), (4, 32768), (5, 557056), (6, 557056), (7, 834560), (8, 834560), (9, 557056), (10, 6587392), (20, 3305472), (30, 511520), (40, 206752), (50, 110592), (60, 102240), (70, 62464), (80, 70144), (90, 52384), (100, 382048), (200, 298112), (300, 157472), (400, 148288), (500, 3072)]; probes_failure=[(500, 1323264)];
mul:matrices/32-col_rots_no_group_32,4-col_xforms_no_group-32,4 n_ones=15453952; n_elems=16777216; in_slots=128; out_slots=32; density=0.9211273193359375; time=8.475720295;
load:matrices/32,4-row_rots_no_group-32,4 n_ones=65536; n_elems=268435456; in_slots=128; out_slots=128; density=0.000244140625; time=0.192081029;
mul_stats:: probes_success=[(1, 14900224), (2, 738304)]; probes_failure=[(4, 1138688)];
mul:matrices/32-col_rots_no_group_32,4-col_xforms_no_group_32,4-row_rots_no_group-32,4 n_ones=15638528; n_elems=16777216; in_slots=128; out_slots=32; density=0.93212890625; time=4.590346046;
Begin search
stats:0 name=load_rep; lane=0; tested=1; found=0; failed=0; pruned=0; continued=1; target_checks=[];
stats:1 name=row_xforms_no_group; lane=0; tested=60; found=0; failed=0; pruned=57; continued=3; target_checks=[(1, 15), (2, 12), (3, 3), (10, 3), (30, 12), (40, 3), (60, 3), (70, 3), (80, 3)];
stats:2 name=row_rots_no_group; lane=0; tested=12; found=0; failed=0; pruned=0; continued=12; target_checks=[];
stats:3 name=col_xforms_no_group; lane=0; tested=23808; found=0; failed=0; pruned=23808; continued=0; target_checks=[(1, 23064), (2, 589), (3, 93), (4, 60), (30, 2)];
stats:4 name=col_rots_no_group; lane=0; tested=0; found=0; failed=0; pruned=0; continued=0; target_checks=[];
stats:5 name=(last); lane=0; tested=0; found=0; failed=0; pruned=0; continued=0; target_checks=[];
search:specs/swinv_like/l1/trove-cr_sum-4.json success=false; mode=All; time=0.292974352;
spec:specs/swinv_like/l1/trove-rcr-2.json
build:matrices/32,2-col_rots_no_group-32,2 n_ones=131072; n_elems=16777216; in_slots=64; out_slots=64; density=0.0078125; time=0.016478202;
Using newly-built matrices/32,2-col_rots_no_group-32,2
build:matrices/32,2-col_xforms_no_group-32,2 n_ones=1697472; n_elems=16777216; in_slots=64; out_slots=64; density=0.10117721557617188; time=0.508436876;
mul_stats:: probes_success=[(1, 1164288), (2, 1393664), (3, 94752), (4, 77728), (5, 45920), (6, 45568), (7, 44192), (8, 41760), (9, 30368), (10, 280352), (20, 178432), (30, 43360)]; probes_failure=[(30, 13336832)];
mul:matrices/32,2-col_rots_no_group_32,2-col_xforms_no_group-32,2 n_ones=3440384; n_elems=16777216; in_slots=64; out_slots=64; density=0.2050628662109375; time=2.445821206;
build:matrices/32,2-row_rots_no_group-32,2 n_ones=8192; n_elems=16777216; in_slots=64; out_slots=64; density=0.00048828125; time=0.001102024;
mul_stats:: probes_success=[(1, 3255808), (2, 3624960)]; probes_failure=[(2, 9896448)];
mul:matrices/32,2-col_rots_no_group_32,2-col_xforms_no_group_32,2-row_rots_no_group-32,2 n_ones=6880768; n_elems=16777216; in_slots=64; out_slots=64; density=0.410125732421875; time=0.728895966;
build:matrices/32,2-row_xforms_no_group-32,2 n_ones=15028; n_elems=16777216; in_slots=64; out_slots=64; density=0.0008957386016845703; time=0.004925557;
mul_stats:: probes_success=[(1, 5706560), (2, 7730176), (3, 189632)]; probes_failure=[(1, 12160), (2, 555136), (3, 470272), (4, 2113280)];
mul:matrices/32,2-col_rots_no_group_32,2-col_xforms_no_group_32,2-row_rots_no_group_32,2-row_xforms_no_group-32,2 n_ones=13626368; n_elems=16777216; in_slots=64; out_slots=64; density=0.81219482421875; time=0.83625004;
mul_stats:: probes_success=[(1, 13537280), (2, 94208), (3, 307200), (4, 73728), (5, 118784), (6, 20480), (7, 28672), (8, 16384), (9, 45056), (10, 8192), (11, 8192), (12, 4096), (13, 36864), (14, 4096), (15, 16384), (16, 4096), (17, 12288), (21, 8192), (25, 12288), (29, 8192)]; probes_failure=[(32, 2412544)];
mul:matrices/32,2-col_rots_no_group_32,2-col_xforms_no_group_32,2-row_rots_no_group_32,2-row_xforms_no_group_32,2-col_rots_no_group-32,2 n_ones=14364672; n_elems=16777216; in_slots=64; out_slots=64; density=0.856201171875; time=1.021458137;
Begin search
solution:init;load_rep;xform(13,13,2);rot(31);xform(0,1,32);rot(1);xform(10,5,2);rot(16)
solution:init;load_rep;xform(15,17,2);id;xform(0,1,32);id;xform(30,15,2);id
solution:init;load_rep;xform(23,9,2);id;xform(0,1,32);id;xform(14,7,2);id
solution:init;load_rep;xform(0,1,2);rot(31);xform(0,1,32);rot(1);xform(2,1,2);rot(16)
solution:init;load_rep;xform(17,15,2);id;xform(0,1,32);id;xform(2,17,2);id
solution:init;load_rep;xform(0,31,2);id;xform(0,1,32);id;xform(2,1,2);id
solution:init;load_rep;xform(9,23,2);id;xform(0,1,32);id;xform(18,25,2);id
solution:init;load_rep;xform(23,23,2);rot(31);xform(0,1,32);rot(1);xform(14,7,2);rot(16)
solution:init;load_rep;xform(29,3,2);id;xform(0,1,32);id;xform(10,21,2);id
solution:init;load_rep;xform(3,29,2);id;xform(0,1,32);id;xform(22,11,2);id
solution:init;load_rep;xform(17,17,2);rot(31);xform(0,1,32);rot(1);xform(2,17,2);rot(16)
solution:init;load_rep;xform(19,13,2);id;xform(0,1,32);id;xform(22,27,2);id
solution:init;load_rep;xform(27,27,2);rot(31);xform(0,1,32);rot(1);xform(6,19,2);rot(16)
solution:init;load_rep;xform(9,9,2);rot(31);xform(0,1,32);rot(1);xform(18,25,2);rot(16)
solution:init;load_rep;xform(7,7,2);rot(31);xform(0,1,32);rot(1);xform(14,23,2);rot(16)
solution:init;load_rep;xform(25,7,2);id;xform(0,1,32);id;xform(18,9,2);id
solution:init;load_rep;xform(13,19,2);id;xform(0,1,32);id;xform(10,5,2);id
solution:init;load_rep;xform(3,3,2);rot(31);xform(0,1,32);rot(1);xform(22,11,2);rot(16)
solution:init;load_rep;xform(21,21,2);rot(31);xform(0,1,32);rot(1);xform(26,29,2);rot(16)
solution:init;load_rep;xform(11,21,2);id;xform(0,1,32);id;xform(6,3,2);id
solution:init;load_rep;xform(11,11,2);rot(31);xform(0,1,32);rot(1);xform(6,3,2);rot(16)
solution:init;load_rep;xform(29,29,2);rot(31);xform(0,1,32);rot(1);xform(10,21,2);rot(16)
solution:init;load_rep;xform(19,19,2);rot(31);xform(0,1,32);rot(1);xform(22,27,2);rot(16)
solution:init;load_rep;xform(27,5,2);id;xform(0,1,32);id;xform(6,19,2);id
solution:init;load_rep;xform(21,11,2);id;xform(0,1,32);id;xform(26,29,2);id
solution:init;load_rep;xform(5,5,2);rot(31);xform(0,1,32);rot(1);xform(26,13,2);rot(16)
solution:init;load_rep;xform(25,25,2);rot(31);xform(0,1,32);rot(1);xform(18,9,2);rot(16)
solution:init;load_rep;xform(31,31,2);rot(31);xform(0,1,32);rot(1);xform(30,31,2);rot(16)
solution:init;load_rep;xform(7,25,2);id;xform(0,1,32);id;xform(14,23,2);id
solution:init;load_rep;xform(5,27,2);id;xform(0,1,32);id;xform(26,13,2);id
solution:init;load_rep;xform(31,1,2);id;xform(0,1,32);id;xform(30,31,2);id
solution:init;load_rep;xform(15,15,2);rot(31);xform(0,1,32);rot(1);xform(30,15,2);rot(16)
stats:0 name=load_rep; lane=0; tested=1; found=0; failed=0; pruned=0; continued=1; target_checks=[];
stats:1 name=col_xforms_no_group; lane=0; tested=992; found=0; failed=0; pruned=960; continued=32; target_checks=[(4, 32), (8, 64), (10, 32), (30, 704), (40, 101), (50, 4), (90, 16), (100, 2), (200, 1), (400, 2), (500, 2)];
stats:2 name=col_rots_no_group; lane=0; tested=1024; found=0; failed=0; pruned=992; continued=32; target_checks=[(2, 64), (4, 64), (6, 56), (8, 64), (10, 296), (20, 320), (30, 104), (60, 8), (100, 16)];
stats:3 name=row_xforms_no_group; lane=0; tested=320; found=0; failed=0; pruned=288; continued=32; target_checks=[(1, 160), (2, 80), (3, 22), (4, 10), (5, 2), (6, 2), (7, 4), (8, 4), (10, 4)];
stats:4 name=row_rots_no_group; lane=0; tested=64; found=0; failed=0; pruned=32; continued=32; target_checks=[(1, 32)];
stats:5 name=col_xforms_no_group; lane=0; tested=31744; found=0; failed=0; pruned=31712; continued=32; target_checks=[(1, 30752), (2, 960)];
stats:6 name=col_rots_no_group; lane=0; tested=1024; found=0; failed=0; pruned=0; continued=1024; target_checks=[];
stats:7 name=(last); lane=0; tested=1024; found=32; failed=992; pruned=0; continued=0; target_checks=[];
search:specs/swinv_like/l1/trove-rcr-2.json success=true; mode=All; time=0.220715401;
spec:specs/swinv_like/l1/trove-cr_sum-2.json
WARNING: It doesn't make sense to prune after the last instructions are applied. Suppressing.
build:matrices/32-col_rots_no_group-32,2 n_ones=131072; n_elems=4194304; in_slots=64; out_slots=32; density=0.03125; time=0.014579895;
Using newly-built matrices/32-col_rots_no_group-32,2
load:matrices/32,2-col_xforms_no_group-32,2 n_ones=1697472; n_elems=16777216; in_slots=64; out_slots=64; density=0.10117721557617188; time=0.010865616;
mul_stats:: probes_success=[(1, 17408), (2, 32768), (3, 557056), (4, 557056), (5, 31744), (6, 1015808), (7, 325632), (8, 20480), (9, 23072), (10, 185088), (20, 124352), (30, 72736), (40, 79136), (50, 55296), (60, 95456), (70, 43296), (80, 55360), (90, 34144), (100, 114496)]; probes_failure=[(100, 753920)];
mul:matrices/32-col_rots_no_group_32,2-col_xforms_no_group-32,2 n_ones=3440384; n_elems=4194304; in_slots=64; out_slots=32; density=0.82025146484375; time=0.965466689;
load:matrices/32,2-row_rots_no_group-32,2 n_ones=8192; n_elems=16777216; in_slots=64; out_slots=64; density=0.00048828125; time=0.010905418;
mul_stats:: probes_success=[(1, 3255808), (2, 369152)]; probes_failure=[(2, 569344)];
mul:matrices/32-col_rots_no_group_32,2-col_xforms_no_group_32,2-row_rots_no_group-32,2 n_ones=3624960; n_elems=4194304; in_slots=64; out_slots=32; density=0.8642578125; time=0.278389214;
Begin search
stats:0 name=load_rep; lane=0; tested=1; found=0; failed=0; pruned=0; continued=1; target_checks=[];
stats:1 name=row_xforms_no_group; lane=0; tested=10; found=0; failed=0; pruned=5; continued=5; target_checks=[(1, 5)];
stats:2 name=row_rots_no_group; lane=0; tested=10; found=0; failed=0; pruned=8; continued=2; target_checks=[(5, 1), (9, 1), (10, 1), (30, 1), (60, 1), (70, 2), (90, 1)];
stats:3 name=col_xforms_no_group; lane=0; tested=1984; found=0; failed=0; pruned=1984; continued=0; target_checks=[(1, 1922), (2, 60), (30, 2)];
stats:4 name=col_rots_no_group; lane=0; tested=0; found=0; failed=0; pruned=0; continued=0; target_checks=[];
stats:5 name=(last); lane=0; tested=0; found=0; failed=0; pruned=0; continued=0; target_checks=[];
search:specs/swinv_like/l1/trove-cr_sum-2.json success=false; mode=All; time=0.015582067;
spec:specs/swinv_like/l1/trove-cr_sum-5.json
WARNING: It doesn't make sense to prune after the last instructions are applied. Suppressing.
build:matrices/32-col_rots_no_group-32,5 n_ones=819200; n_elems=26214400; in_slots=160; out_slots=32; density=0.03125; time=0.090271169;
Using newly-built matrices/32-col_rots_no_group-32,5
load:matrices/32,5-col_xforms_no_group-32,5 n_ones=10827088; n_elems=655360000; in_slots=160; out_slots=160; density=0.0165208251953125; time=0.525385443;
mul_stats:: probes_success=[(1, 17408), (2, 32768), (3, 31744), (4, 32768), (5, 27136), (6, 557056), (7, 557056), (8, 557056), (9, 557056), (10, 4222976), (20, 3907584), (30, 3247104), (40, 3710720), (50, 546336), (60, 400384), (70, 396192), (80, 340480), (90, 314112), (100, 1552928), (200, 921024), (300, 734016), (400, 687424), (500, 290848), (600, 287200), (700, 197344), (800, 3584)]; probes_failure=[(800, 2084096)];
mul:matrices/32-col_rots_no_group_32,5-col_xforms_no_group-32,5 n_ones=24130304; n_elems=26214400; in_slots=160; out_slots=32; density=0.920498046875; time=20.465931664;
load:matrices/32,5-row_rots_no_group-32,5 n_ones=128000; n_elems=655360000; in_slots=160; out_slots=160; density=0.0001953125; time=0.498165884;
mul_stats:: probes_success=[(1, 23170560), (2, 1538560), (4, 81920)]; probes_failure=[(5, 1423360)];
mul:matrices/32-col_rots_no_group_32,5-col_xforms_no_group_32,5-row_rots_no_group-32,5 n_ones=24791040; n_elems=26214400; in_slots=160; out_slots=32; density=0.945703125; time=6.801117797;
Begin search
solution:init;load_rep;xform(2,2,32);rot(1);xform(5,31,5);rot(20)
solution:init;load_rep;xform(3,2,32);id;xform(5,1,5);id
stats:0 name=load_rep; lane=0; tested=1; found=0; failed=0; pruned=0; continued=1; target_checks=[];
stats:1 name=row_xforms_no_group; lane=0; tested=100; found=0; failed=0; pruned=96; continued=4; target_checks=[(1, 20), (2, 4), (3, 4), (4, 4), (10, 8), (20, 8), (30, 24), (40, 20), (100, 4)];
stats:2 name=row_rots_no_group; lane=0; tested=20; found=0; failed=0; pruned=18; continued=2; target_checks=[(1, 8), (3, 6), (100, 4)];
stats:3 name=col_xforms_no_group; lane=0; tested=1984; found=0; failed=0; pruned=1982; continued=2; target_checks=[(1, 1922), (5, 60)];
stats:4 name=col_rots_no_group; lane=0; tested=64; found=0; failed=0; pruned=0; continued=64; target_checks=[];
stats:5 name=(last); lane=0; tested=64; found=2; failed=62; pruned=0; continued=0; target_checks=[];
search:specs/swinv_like/l1/trove-cr_sum-5.json success=true; mode=All; time=0.035722356;
spec:specs/swinv_like/l1/trove-crc-2.json
load:matrices/32,2-row_rots_no_group-32,2 n_ones=8192; n_elems=16777216; in_slots=64; out_slots=64; density=0.00048828125; time=0.010999354;
load:matrices/32,2-row_xforms_no_group-32,2 n_ones=15028; n_elems=16777216; in_slots=64; out_slots=64; density=0.0008957386016845703; time=0.010810882;
mul_stats:: probes_success=[(1, 15028), (2, 1100)]; probes_failure=[(2, 16761088)];
mul:matrices/32,2-row_rots_no_group_32,2-row_xforms_no_group-32,2 n_ones=16128; n_elems=16777216; in_slots=64; out_slots=64; density=0.0009613037109375; time=0.509566594;
load:matrices/32,2-col_rots_no_group-32,2 n_ones=131072; n_elems=16777216; in_slots=64; out_slots=64; density=0.0078125; time=0.010812218;
mul_stats:: probes_success=[(1, 131072), (2, 131072), (3, 126976), (4, 126976)]; probes_failure=[(2, 516096), (4, 15745024)];
mul:matrices/32,2-row_rots_no_group_32,2-row_xforms_no_group_32,2-col_rots_no_group-32,2 n_ones=516096; n_elems=16777216; in_slots=64; out_slots=64; density=0.03076171875; time=0.691429545;
load:matrices/32,2-col_xforms_no_group-32,2 n_ones=1697472; n_elems=16777216; in_slots=64; out_slots=64; density=0.10117721557617188; time=0.010934228;
mul_stats:: probes_success=[(1, 71616), (2, 131072), (3, 2289600), (4, 2287616), (5, 123008), (6, 3936256), (7, 1175552), (8, 81920), (9, 92288), (10, 740352), (20, 497408), (30, 290944), (40, 316544), (50, 221184), (60, 381824), (70, 173184), (80, 221440), (90, 136576), (100, 457984)]; probes_failure=[(60, 389120), (100, 2761728)];
mul:matrices/32,2-row_rots_no_group_32,2-row_xforms_no_group_32,2-col_rots_no_group_32,2-col_xforms_no_group-32,2 n_ones=13626368; n_elems=16777216; in_slots=64; out_slots=64; density=0.81219482421875; time=3.65823252;
load:matrices/32,2-row_rots_no_group-32,2 n_ones=8192; n_elems=16777216; in_slots=64; out_slots=64; density=0.00048828125; time=0.010824331;
mul_stats:: probes_success=[(1, 12888064), (2, 1476608)]; probes_failure=[(2, 2412544)];
mul:matrices/32,2-row_rots_no_group_32,2-row_xforms_no_group_32,2-col_rots_no_group_32,2-col_xforms_no_group_32,2-row_rots_no_group-32,2 n_ones=14364672; n_elems=16777216; in_slots=64; out_slots=64; density=0.856201171875; time=0.732683864;
Begin search
stats:0 name=load_rep; lane=0; tested=1; found=0; failed=0; pruned=0; continued=1; target_checks=[];
stats:1 name=row_xforms_no_group; lane=0; tested=10; found=0; failed=0; pruned=5; continued=5; target_checks=[(1, 5)];
stats:2 name=row_rots_no_group; lane=0; tested=10; found=0; failed=0; pruned=8; continued=2; target_checks=[(5, 1), (9, 1), (10, 1), (30, 1), (60, 1), (70, 2), (90, 1)];
stats:3 name=col_xforms_no_group; lane=0; tested=1984; found=0; failed=0; pruned=1984; continued=0; target_checks=[(1, 1922), (2, 60), (30, 2)];
stats:4 name=col_rots_no_group; lane=0; tested=0; found=0; failed=0; pruned=0; continued=0; target_checks=[];
stats:5 name=row_xforms_no_group; lane=0; tested=0; found=0; failed=0; pruned=0; continued=0; target_checks=[];
stats:6 name=row_rots_no_group; lane=0; tested=0; found=0; failed=0; pruned=0; continued=0; target_checks=[];
stats:7 name=(last); lane=0; tested=0; found=0; failed=0; pruned=0; continued=0; target_checks=[];
search:specs/swinv_like/l1/trove-crc-2.json success=false; mode=All; time=0.011197309;
